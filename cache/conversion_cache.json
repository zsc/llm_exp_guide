{
  "chapter5.md": {
    "hash": "15adbb1de6113502c5cbec1318620da1",
    "content": "<h1 id=\"_1\">\u7b2c\u4e94\u7ae0\uff1a\u591a\u6a21\u6001\u4efb\u52a1\u5b9e\u9a8c\u8bbe\u8ba1</h1>\n<p>\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u591a\u6a21\u6001\u5927\u8bed\u8a00\u6a21\u578b\u7684\u540e\u8bad\u7ec3\u5b9e\u9a8c\u8bbe\u8ba1\uff0c\u6db5\u76d6\u89c6\u89c9\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49\u6a21\u6001\u4e0e\u8bed\u8a00\u7684\u878d\u5408\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u7cfb\u7edf\u5b66\u4e60\u5982\u4f55\u8bbe\u8ba1\u8de8\u6a21\u6001\u5bf9\u9f50\u5b9e\u9a8c\u3001\u5904\u7406\u6a21\u6001\u95f4\u7684\u5f02\u8d28\u6027\u6311\u6218\uff0c\u4ee5\u53ca\u6784\u5efa\u7edf\u4e00\u7684\u591a\u6a21\u6001\u8868\u793a\u7a7a\u95f4\u3002\u901a\u8fc7\u672c\u7ae0\u5b66\u4e60\uff0c\u60a8\u5c06\u638c\u63e1\u6784\u5efa\u751f\u4ea7\u7ea7\u591a\u6a21\u6001\u6a21\u578b\u7684\u5b8c\u6574\u5b9e\u9a8c\u6d41\u7a0b\u3002</p>\n<h2 id=\"51-\">5.1 \u89c6\u89c9-\u8bed\u8a00\u5bf9\u9f50\u57fa\u7840</h2>\n<p>\u89c6\u89c9-\u8bed\u8a00\u5bf9\u9f50\u662f\u591a\u6a21\u6001\u6a21\u578b\u7684\u6838\u5fc3\u6311\u6218\u3002\u4e0d\u540c\u4e8e\u6587\u672c\u7684\u79bb\u6563\u8868\u793a\uff0c\u89c6\u89c9\u4fe1\u53f7\u662f\u8fde\u7eed\u7684\u9ad8\u7ef4\u6570\u636e\uff0c\u5982\u4f55\u5728\u4fdd\u6301\u8bed\u4e49\u4e00\u81f4\u6027\u7684\u540c\u65f6\u5b9e\u73b0\u9ad8\u6548\u5bf9\u9f50\uff0c\u662f\u5b9e\u9a8c\u8bbe\u8ba1\u7684\u5173\u952e\u8003\u91cf\u3002</p>\n<h3 id=\"511\">5.1.1 \u5bf9\u9f50\u8303\u5f0f\u6f14\u8fdb</h3>\n<p>\u591a\u6a21\u6001\u5bf9\u9f50\u7ecf\u5386\u4e86\u4ece\u7b80\u5355\u7279\u5f81\u62fc\u63a5\u5230\u6df1\u5ea6\u8bed\u4e49\u878d\u5408\u7684\u6f14\u8fdb\u8fc7\u7a0b\uff1a</p>\n<p><strong>\u65e9\u671f\u65b9\u6cd5\uff082015-2018\uff09</strong>\uff1a</p>\n<ul>\n<li>\u7279\u5f81\u7ea7\u8054\uff1a\u7b80\u5355\u5c06 CNN \u7279\u5f81\u4e0e\u8bcd\u5d4c\u5165\u62fc\u63a5</li>\n<li>\u53cc\u5854\u67b6\u6784\uff1a\u72ec\u7acb\u7f16\u7801\u540e\u8ba1\u7b97\u76f8\u4f3c\u5ea6</li>\n<li>\u95ee\u9898\uff1a\u6a21\u6001\u95f4\u9699\uff08modality gap\uff09\u4e25\u91cd\uff0c\u8bed\u4e49\u5bf9\u9f50\u6548\u679c\u5dee</li>\n</ul>\n<p><strong>\u4e2d\u671f\u53d1\u5c55\uff082018-2021\uff09</strong>\uff1a</p>\n<ul>\n<li>\u6ce8\u610f\u529b\u673a\u5236\u5f15\u5165\uff1aViLBERT\u3001LXMERT \u7b49\u4f7f\u7528 co-attention</li>\n<li>\u9884\u8bad\u7ec3\u4efb\u52a1\u8bbe\u8ba1\uff1aMasked Language Modeling + Masked Region Modeling</li>\n<li>\u7a81\u7834\uff1aCLIP \u7684\u5bf9\u6bd4\u5b66\u4e60\u8303\u5f0f\uff0c\u5b9e\u73b0\u96f6\u6837\u672c\u8fc1\u79fb</li>\n</ul>\n<p><strong>\u5f53\u524d\u524d\u6cbf\uff082021-2025\uff09</strong>\uff1a</p>\n<ul>\n<li>\u7edf\u4e00\u67b6\u6784\uff1aFlamingo\u3001BLIP-2 \u7684 Q-Former \u8bbe\u8ba1</li>\n<li>\u5927\u89c4\u6a21\u9884\u8bad\u7ec3\uff1aLAION-5B \u7b49\u5341\u4ebf\u7ea7\u6570\u636e\u96c6</li>\n<li>\u6548\u7387\u4f18\u5316\uff1aFLIP \u7684\u7a00\u758f\u91c7\u6837\uff0c\u8282\u7701 2/3 \u8ba1\u7b97</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>\u6f14\u8fdb\u8def\u5f84\uff1a\nFeature Concat \u2192 Dual Encoder \u2192 Cross Attention \u2192 Unified Architecture\n     \u2193              \u2193                \u2193                    \u2193\n  \u4f4e\u6548\u5bf9\u9f50      \u6a21\u6001\u9694\u79bb         \u8ba1\u7b97\u5bc6\u96c6           \u7edf\u4e00\u8868\u793a\u7a7a\u95f4\n</code></pre></div>\n\n<h3 id=\"512-clip\">5.1.2 CLIP \u53ca\u5176\u53d8\u4f53</h3>\n<p>CLIP\uff08Contrastive Language-Image Pre-training\uff09\u5960\u5b9a\u4e86\u73b0\u4ee3\u89c6\u89c9-\u8bed\u8a00\u5bf9\u9f50\u7684\u57fa\u7840\uff1a</p>\n<p><strong>\u6838\u5fc3\u8bbe\u8ba1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>Image Encoder: ResNet/ViT \u2192 I_emb \u2208 R^d\nText Encoder: Transformer \u2192 T_emb \u2208 R^d\n\u5bf9\u9f50\u76ee\u6807: maximize cos(I_emb, T_emb) for matched pairs\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u521b\u65b0</strong>\uff1a</p>\n<ol>\n<li><strong>\u5bf9\u79f0\u635f\u5931</strong>\uff1a\u56fe\u50cf\u2192\u6587\u672c \u548c \u6587\u672c\u2192\u56fe\u50cf \u53cc\u5411\u5bf9\u6bd4</li>\n<li><strong>\u6e29\u5ea6\u53c2\u6570</strong>\uff1a\u03c4 = 0.07\uff0c\u63a7\u5236\u5206\u5e03\u9510\u5ea6</li>\n<li><strong>\u5927\u6279\u91cf\u8bad\u7ec3</strong>\uff1a32K batch size\uff0c\u5145\u5206\u5229\u7528\u8d1f\u6837\u672c</li>\n</ol>\n<p><strong>CLIP \u53d8\u4f53\u5bf9\u6bd4</strong>\uff1a</p>\n<p>| \u6a21\u578b | \u521b\u65b0\u70b9 | \u6027\u80fd\u63d0\u5347 | \u8ba1\u7b97\u6210\u672c |</p>\n<table>\n<thead>\n<tr>\n<th>\u6a21\u578b</th>\n<th>\u521b\u65b0\u70b9</th>\n<th>\u6027\u80fd\u63d0\u5347</th>\n<th>\u8ba1\u7b97\u6210\u672c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CLIP</td>\n<td>\u57fa\u7840\u5bf9\u6bd4\u5b66\u4e60</td>\n<td>Baseline</td>\n<td>1.0x</td>\n</tr>\n<tr>\n<td>ALIGN</td>\n<td>\u566a\u58f0\u6570\u636e\u8bad\u7ec3</td>\n<td>+2% Zero-shot</td>\n<td>1.2x</td>\n</tr>\n<tr>\n<td>FLIP</td>\n<td>\u968f\u673a Mask 50% patches</td>\n<td>-1% \u7cbe\u5ea6\uff0c-2.5x \u8bad\u7ec3\u65f6\u95f4</td>\n<td>0.4x</td>\n</tr>\n<tr>\n<td>OpenCLIP</td>\n<td>\u6269\u5c55\u5230 ViT-G/14</td>\n<td>+5% ImageNet</td>\n<td>3.0x</td>\n</tr>\n<tr>\n<td>EVA-CLIP</td>\n<td>\u6539\u8fdb\u521d\u59cb\u5316\u4e0e\u4f18\u5316\u5668</td>\n<td>+3% \u5747\u503c\u7cbe\u5ea6</td>\n<td>1.1x</td>\n</tr>\n</tbody>\n</table>\n<p><strong>\u5b9e\u9a8c\u8bbe\u8ba1\u8981\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u6570\u636e\u8d28\u91cf vs \u6570\u91cf\u6743\u8861\uff1aALIGN \u8bc1\u660e 1B \u566a\u58f0\u6570\u636e\u53ef\u884c</li>\n<li>\u7f16\u7801\u5668\u5bb9\u91cf\u5206\u914d\uff1a\u89c6\u89c9\u7f16\u7801\u5668\u901a\u5e38\u9700\u8981\u66f4\u5927\u5bb9\u91cf</li>\n<li>\u8bad\u7ec3\u7a33\u5b9a\u6027\uff1a\u68af\u5ea6\u7d2f\u79ef + mixed precision \u5173\u952e</li>\n</ul>\n<h3 id=\"513\">5.1.3 \u5bf9\u6bd4\u5b66\u4e60\u635f\u5931\u8bbe\u8ba1</h3>\n<p>\u5bf9\u6bd4\u5b66\u4e60\u635f\u5931\u662f\u591a\u6a21\u6001\u5bf9\u9f50\u7684\u6838\u5fc3\uff0c\u5176\u8bbe\u8ba1\u76f4\u63a5\u5f71\u54cd\u6a21\u578b\u6027\u80fd\uff1a</p>\n<p><strong>InfoNCE \u635f\u5931</strong>\uff1a\n$$\\mathcal{L}_{\\text{InfoNCE}} = -\\log \\frac{\\exp(s_{ii}/\\tau)}{\\sum_{j=1}^{N} \\exp(s_{ij}/\\tau)}$$\n\u5176\u4e2d $s_{ij} = \\text{cos}(f_I(x_i), f_T(t_j))$ \u4e3a\u76f8\u4f3c\u5ea6\u5f97\u5206\u3002</p>\n<p><strong>\u6539\u8fdb\u65b9\u5411</strong>\uff1a</p>\n<ol>\n<li><strong>\u96be\u8d1f\u6837\u672c\u6316\u6398</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u4f2a\u4ee3\u7801</span>\n<span class=\"n\">hard_negatives</span> <span class=\"o\">=</span> <span class=\"n\">top_k</span><span class=\"p\">(</span><span class=\"n\">similarity_scores</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">exclude_positive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">pos_score</span><span class=\"o\">/</span><span class=\"n\">\u03c4</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">pos_score</span><span class=\"o\">/</span><span class=\"n\">\u03c4</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">neg</span><span class=\"o\">/</span><span class=\"n\">\u03c4</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">neg</span> <span class=\"ow\">in</span> <span class=\"n\">hard_negatives</span><span class=\"p\">)))</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li>\n<p><strong>\u591a\u7c92\u5ea6\u5bf9\u6bd4</strong>\uff1a\n- Global\uff1a\u6574\u56fe-\u6574\u53e5\u5bf9\u6bd4\n- Regional\uff1a\u533a\u57df-\u77ed\u8bed\u5bf9\u6bd4<br />\n- Patch\uff1a\u56fe\u5757-\u8bcd\u6c47\u5bf9\u6bd4</p>\n</li>\n<li>\n<p><strong>\u8f6f\u6807\u7b7e\u5bf9\u6bd4</strong>\uff1a\n\u8003\u8651\u6807\u6ce8\u4e0d\u786e\u5b9a\u6027\uff0c\u4f7f\u7528\u8f6f\u6807\u7b7e\uff1a\n$$\\mathcal{L}_{\\text{soft}} = -\\sum_{j} y_j \\log p_j$$\n\u5176\u4e2d $y_j$ \u4e3a\u8f6f\u6807\u7b7e\u5206\u5e03\u3002</p>\n</li>\n</ol>\n<p><strong>\u5b9e\u9a8c\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li>\u6e29\u5ea6\u53c2\u6570\u8c03\u4f18\uff1a\u03c4 \u2208 [0.01, 0.1]\uff0c\u8fc7\u5c0f\u5bfc\u81f4\u68af\u5ea6\u7206\u70b8</li>\n<li>\u6279\u91cf\u5927\u5c0f\u6548\u5e94\uff1a\u6279\u91cf\u7ffb\u500d\uff0c\u6027\u80fd\u63d0\u5347\u7ea6 1-2%</li>\n<li>\u8d1f\u6837\u672c\u961f\u5217\uff1a\u7ef4\u62a4\u52a8\u6001\u8d1f\u6837\u672c bank\uff0c\u63d0\u5347\u591a\u6837\u6027</li>\n</ul>\n<h3 id=\"514\">5.1.4 \u8d1f\u6837\u672c\u91c7\u6837\u7b56\u7565</h3>\n<p>\u8d1f\u6837\u672c\u8d28\u91cf\u76f4\u63a5\u51b3\u5b9a\u5bf9\u6bd4\u5b66\u4e60\u6548\u679c\uff1a</p>\n<p><strong>\u91c7\u6837\u7b56\u7565\u5bf9\u6bd4</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u968f\u673a\u91c7\u6837\uff1a\n\u251c\u2500\u2500 \u4f18\u70b9\uff1a\u5b9e\u73b0\u7b80\u5355\uff0c\u65e0\u504f\n\u2514\u2500\u2500 \u7f3a\u70b9\uff1a\u5305\u542b\u5927\u91cf\u7b80\u5355\u8d1f\u6837\u672c\uff0c\u5b66\u4e60\u6548\u7387\u4f4e\n\n\u96be\u4f8b\u6316\u6398\uff1a\n\u251c\u2500\u2500 \u4f18\u70b9\uff1a\u52a0\u901f\u6536\u655b\uff0c\u63d0\u5347\u533a\u5206\u80fd\u529b\n\u2514\u2500\u2500 \u7f3a\u70b9\uff1a\u53ef\u80fd\u8fc7\u62df\u5408\uff0c\u9700\u8981 curriculum\n\n\u6df7\u5408\u7b56\u7565\uff1a\n\u251c\u2500\u2500 80% \u968f\u673a + 20% \u96be\u4f8b\n\u2514\u2500\u2500 \u5e73\u8861\u63a2\u7d22\u4e0e\u5229\u7528\n</code></pre></div>\n\n<p><strong>\u9ad8\u7ea7\u91c7\u6837\u6280\u672f</strong>\uff1a</p>\n<ol>\n<li><strong>\u8de8\u6279\u6b21\u8d1f\u6837\u672c</strong>\uff08MoCo \u98ce\u683c\uff09\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">NegativeBank</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">65536</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">deque</span><span class=\"p\">(</span><span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"n\">size</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">features</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">detach</span><span class=\"p\">())</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">sample</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"p\">)))</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li>\n<p><strong>\u8bed\u4e49\u5c42\u6b21\u91c7\u6837</strong>\uff1a\n- Level 1\uff1a\u5b8c\u5168\u65e0\u5173\uff08\u732b\u56fe\u7247 vs \u6c7d\u8f66\u63cf\u8ff0\uff09\n- Level 2\uff1a\u9886\u57df\u76f8\u5173\uff08\u72d7\u56fe\u7247 vs \u732b\u63cf\u8ff0\uff09<br />\n- Level 3\uff1a\u7ec6\u7c92\u5ea6\u533a\u5206\uff08\u54c8\u58eb\u5947 vs \u963f\u62c9\u65af\u52a0\u63cf\u8ff0\uff09</p>\n</li>\n<li>\n<p><strong>\u52a8\u6001\u96be\u5ea6\u8c03\u6574</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u8bad\u7ec3\u521d\u671f\uff1a70% easy + 30% hard\n\u8bad\u7ec3\u4e2d\u671f\uff1a50% easy + 50% hard  \n\u8bad\u7ec3\u540e\u671f\uff1a30% easy + 70% hard\n</code></pre></div>\n\n<p><strong>\u5b9e\u9a8c\u5efa\u8bae</strong>\uff1a</p>\n<ul>\n<li>\u76d1\u63a7\u8d1f\u6837\u672c\u76f8\u4f3c\u5ea6\u5206\u5e03\uff0c\u907f\u514d collapse</li>\n<li>\u4f7f\u7528 gradient accumulation \u6a21\u62df\u5927\u6279\u91cf</li>\n<li>\u5b9a\u671f\u8bc4\u4f30 retrieval metrics\uff0c\u4e0d\u53ea\u770b loss</li>\n</ul>\n<h2 id=\"52\">5.2 \u56fe\u50cf\u7406\u89e3\u4e0e\u751f\u6210\u7684\u7edf\u4e00\u5efa\u6a21</h2>\n<p>\u7edf\u4e00\u5efa\u6a21\u662f\u591a\u6a21\u6001\u9886\u57df\u7684\u5723\u676f\u2014\u2014\u7528\u5355\u4e00\u6a21\u578b\u540c\u65f6\u5904\u7406\u7406\u89e3\u548c\u751f\u6210\u4efb\u52a1\u3002\u8fd9\u4e0d\u4ec5\u7b80\u5316\u4e86\u7cfb\u7edf\u67b6\u6784\uff0c\u8fd8\u80fd\u5b9e\u73b0\u4efb\u52a1\u95f4\u7684\u77e5\u8bc6\u8fc1\u79fb\u3002</p>\n<h3 id=\"521-\">5.2.1 \u7f16\u7801\u5668-\u89e3\u7801\u5668\u67b6\u6784\u8bbe\u8ba1</h3>\n<p>\u73b0\u4ee3\u7edf\u4e00\u67b6\u6784\u9700\u8981\u5e73\u8861\u7406\u89e3\u7684\u7cbe\u786e\u6027\u548c\u751f\u6210\u7684\u591a\u6837\u6027\uff1a</p>\n<p><strong>\u67b6\u6784\u6f14\u8fdb</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">\u4f20\u7edf\u5206\u79bb\u5f0f\uff1a</span>\n<span class=\"n\">Vision</span><span class=\"w\"> </span><span class=\"n\">Encoder</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">Understanding</span><span class=\"w\"> </span><span class=\"n\">Tasks</span>\n<span class=\"n\">Text</span><span class=\"w\"> </span><span class=\"n\">Decoder</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">Generation</span><span class=\"w\"> </span><span class=\"n\">Tasks</span>\n<span class=\"err\">\u95ee\u9898\uff1a\u4efb\u52a1\u5b64\u7acb\uff0c\u65e0\u6cd5\u5171\u4eab\u8868\u793a</span>\n\n<span class=\"err\">\u65e9\u671f\u7edf\u4e00\uff08</span><span class=\"n\">DALL</span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"err\">\uff09\uff1a</span>\n<span class=\"n\">Text</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">Image</span><span class=\"w\"> </span><span class=\"n\">Tokens</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">Autoregressive</span><span class=\"w\"> </span><span class=\"n\">Transformer</span>\n<span class=\"err\">\u95ee\u9898\uff1a\u56fe\u50cf\u79bb\u6563\u5316\u635f\u5931\u4e25\u91cd</span>\n\n<span class=\"err\">\u5f53\u524d\u4e3b\u6d41\uff08</span><span class=\"n\">Flamingo</span><span class=\"o\">/</span><span class=\"n\">BLIP</span><span class=\"o\">-</span><span class=\"mh\">2</span><span class=\"err\">\uff09\uff1a</span>\n<span class=\"n\">Frozen</span><span class=\"w\"> </span><span class=\"n\">Vision</span><span class=\"w\"> </span><span class=\"n\">Encoder</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">Perceiver</span><span class=\"w\"> </span><span class=\"n\">Resampler</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">LLM</span><span class=\"w\"> </span><span class=\"n\">Decoder</span>\n<span class=\"err\">\u4f18\u52bf\uff1a\u4fdd\u7559\u9884\u8bad\u7ec3\u6743\u91cd\uff0c\u9ad8\u6548\u9002\u914d</span>\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u8bbe\u8ba1\u9009\u62e9</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>Vision Encoder \u9009\u62e9</strong>\uff1a\n   - CLIP ViT-L/14\uff1a\u5e73\u8861\u6027\u80fd\u4e0e\u6548\u7387\n   - EVA-02 ViT-E\uff1a\u6781\u81f4\u6027\u80fd\uff0c5B \u53c2\u6570\n   - ConvNeXt V2\uff1a\u66f4\u597d\u7684\u5c40\u90e8\u7279\u5f81</p>\n</li>\n<li>\n<p><strong>\u8fde\u63a5\u5c42\u8bbe\u8ba1</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">PerceiverResampler</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"n\">depth</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">num_latents</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">latents</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"n\">num_latents</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cross_attend</span> <span class=\"o\">=</span> <span class=\"n\">CrossAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">self_attend</span> <span class=\"o\">=</span> <span class=\"n\">SelfAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">visual_features</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">latents</span>\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">depth</span><span class=\"p\">):</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cross_attend</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">visual_features</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">x</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">self_attend</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">x</span>\n        <span class=\"k\">return</span> <span class=\"n\">x</span>  <span class=\"c1\"># [64, 1024] \u56fa\u5b9a\u957f\u5ea6\u8f93\u51fa</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>Decoder \u9002\u914d</strong>\uff1a\n   - Prefix Tuning\uff1a\u89c6\u89c9\u7279\u5f81\u4f5c\u4e3a prefix\n   - Adapter Layers\uff1a\u5728 FFN \u540e\u63d2\u5165\u9002\u914d\u5c42\n   - LoRA\uff1a\u4f4e\u79e9\u9002\u914d\uff0c\u53c2\u6570\u6548\u7387\u6700\u9ad8</li>\n</ol>\n<p><strong>\u5b9e\u9a8c\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li>\u51bb\u7ed3\u7b56\u7565\uff1a\u5148\u51bb\u7ed3 encoder\uff0c\u540e\u671f\u8054\u5408\u5fae\u8c03</li>\n<li>\u5b66\u4e60\u7387\u8c03\u5ea6\uff1aencoder 1e-5, connector 1e-4, decoder 2e-5</li>\n<li>\u6570\u636e\u914d\u6bd4\uff1a\u7406\u89e3:\u751f\u6210 = 3:1 \u521d\u671f\uff0c\u9010\u6b65\u5e73\u8861</li>\n</ul>\n<h3 id=\"522-vs\">5.2.2 \u81ea\u56de\u5f52 vs \u6269\u6563\u6a21\u578b\u96c6\u6210</h3>\n<p>\u4e24\u5927\u751f\u6210\u8303\u5f0f\u7684\u4f18\u52a3\u4e0e\u96c6\u6210\u7b56\u7565\uff1a</p>\n<p><strong>\u8303\u5f0f\u5bf9\u6bd4</strong>\uff1a</p>\n<p>| \u7279\u6027 | \u81ea\u56de\u5f52\uff08AR\uff09 | \u6269\u6563\u6a21\u578b\uff08DM\uff09 | \u6df7\u5408\u65b9\u6848 |</p>\n<table>\n<thead>\n<tr>\n<th>\u7279\u6027</th>\n<th>\u81ea\u56de\u5f52\uff08AR\uff09</th>\n<th>\u6269\u6563\u6a21\u578b\uff08DM\uff09</th>\n<th>\u6df7\u5408\u65b9\u6848</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u751f\u6210\u8d28\u91cf</td>\n<td>\u4e2d\u7b49</td>\n<td>\u9ad8</td>\n<td>\u9ad8</td>\n</tr>\n<tr>\n<td>\u63a8\u7406\u901f\u5ea6</td>\n<td>\u5feb\uff08\u5355\u6b21\uff09</td>\n<td>\u6162\uff08\u591a\u6b65\uff09</td>\n<td>\u4e2d\u7b49</td>\n</tr>\n<tr>\n<td>\u53ef\u63a7\u6027</td>\n<td>\u5f3a\uff08token\u7ea7\uff09</td>\n<td>\u5f31\uff08\u5168\u5c40\uff09</td>\n<td>\u5f3a</td>\n</tr>\n<tr>\n<td>\u8bad\u7ec3\u7a33\u5b9a\u6027</td>\n<td>\u9ad8</td>\n<td>\u4e2d\u7b49</td>\n<td>\u4e2d\u7b49</td>\n</tr>\n<tr>\n<td>\u5185\u5b58\u9700\u6c42</td>\n<td>\u4f4e</td>\n<td>\u9ad8</td>\n<td>\u9ad8</td>\n</tr>\n</tbody>\n</table>\n<p><strong>\u96c6\u6210\u67b6\u6784</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u8f93\u5165\u6587\u672c \u2192 LLM \u2192 \u51b3\u7b56\uff1a{\u7406\u89e3\u4efb\u52a1 \u2192 AR \u8f93\u51fa}\n                     {\u751f\u6210\u4efb\u52a1 \u2192 \u89e6\u53d1 DM}\n\nDiffusion \u5206\u652f\uff1a\nLLM embeddings \u2192 Cross-Attention \u2192 U-Net \u2192 \u56fe\u50cf\n                     \u2191\n                 Text Condition\n</code></pre></div>\n\n<p><strong>CM3Leon \u5f0f\u7edf\u4e00</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">UnifiedModel</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"o\">=</span><span class=\"s2\">&quot;understand&quot;</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">task</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;understand&quot;</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u56fe\u50cf \u2192 \u6587\u672c</span>\n            <span class=\"n\">img_tokens</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tokenize_image</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ar_generate</span><span class=\"p\">(</span><span class=\"n\">concat</span><span class=\"p\">([</span><span class=\"n\">img_tokens</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">]))</span>\n        <span class=\"k\">elif</span> <span class=\"n\">task</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;generate&quot;</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6587\u672c \u2192 \u56fe\u50cf</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_diffusion</span><span class=\"p\">:</span>\n                <span class=\"n\">text_emb</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encode_text</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">diffusion_decode</span><span class=\"p\">(</span><span class=\"n\">text_emb</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ar_generate_image</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u8bad\u7ec3\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li>\u9636\u6bb5\u4e00\uff1a\u5206\u522b\u9884\u8bad\u7ec3 AR \u548c DM \u5206\u652f</li>\n<li>\u9636\u6bb5\u4e8c\uff1a\u51bb\u7ed3 DM\uff0c\u8bad\u7ec3 AR\u2192DM \u63a5\u53e3</li>\n<li>\u9636\u6bb5\u4e09\uff1a\u8054\u5408\u5fae\u8c03\uff0c\u5e73\u8861\u4e24\u79cd\u635f\u5931</li>\n</ol>\n<h3 id=\"523-token\">5.2.3 \u56fe\u50cf Token \u5316\u7b56\u7565</h3>\n<p>Token \u5316\u8d28\u91cf\u51b3\u5b9a\u4e86\u6a21\u578b\u7406\u89e3\u548c\u751f\u6210\u7684\u4e0a\u9650\uff1a</p>\n<p><strong>\u4e3b\u6d41\u65b9\u6cd5</strong>\uff1a</p>\n<ol>\n<li><strong>VQ-VAE \u7cfb\u5217</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u539f\u59cb VQ-VAE: 32\u00d732 \u2192 8\u00d78 tokens (\u538b\u7f29\u7387 16)\nVQ-VAE-2: \u5c42\u7ea7\u7ed3\u6784\uff0ctop: 32\u00d732, bottom: 64\u00d764\n\u95ee\u9898\uff1a\u7801\u672c\u574d\u584c\uff0c\u91cd\u5efa\u8d28\u91cf\u53d7\u9650\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>VQGAN</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5173\u952e\u6539\u8fdb\uff1a\u611f\u77e5\u635f\u5931 + \u5bf9\u6297\u8bad\u7ec3</span>\n<span class=\"n\">L_total</span> <span class=\"o\">=</span> <span class=\"n\">L_recon</span> <span class=\"o\">+</span> <span class=\"n\">\u03bb_p</span><span class=\"o\">*</span><span class=\"n\">L_perceptual</span> <span class=\"o\">+</span> <span class=\"n\">\u03bb_g</span><span class=\"o\">*</span><span class=\"n\">L_gan</span> <span class=\"o\">+</span> <span class=\"n\">\u03bb_c</span><span class=\"o\">*</span><span class=\"n\">L_codebook</span>\n\n<span class=\"c1\"># \u7801\u672c\u5927\u5c0f\u5f71\u54cd\uff1a</span>\n<span class=\"o\">|</span><span class=\"n\">Codebook</span><span class=\"o\">|</span> <span class=\"o\">=</span> <span class=\"mi\">1024</span><span class=\"p\">:</span> <span class=\"n\">\u91cd\u5efa</span> <span class=\"n\">PSNR</span> <span class=\"o\">~</span><span class=\"mi\">23</span><span class=\"n\">dB</span>\n<span class=\"o\">|</span><span class=\"n\">Codebook</span><span class=\"o\">|</span> <span class=\"o\">=</span> <span class=\"mi\">8192</span><span class=\"p\">:</span> <span class=\"n\">\u91cd\u5efa</span> <span class=\"n\">PSNR</span> <span class=\"o\">~</span><span class=\"mi\">26</span><span class=\"n\">dB</span>\n<span class=\"o\">|</span><span class=\"n\">Codebook</span><span class=\"o\">|</span> <span class=\"o\">=</span> <span class=\"mi\">16384</span><span class=\"p\">:</span> <span class=\"n\">\u91cd\u5efa</span> <span class=\"n\">PSNR</span> <span class=\"o\">~</span><span class=\"mi\">27</span><span class=\"n\">dB</span> <span class=\"p\">(</span><span class=\"n\">\u6536\u76ca\u9012\u51cf</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u8fde\u7eed Token\uff08SEED, LaVIT\uff09</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ContinuousTokenizer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">encode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u4e0d\u91cf\u5316\uff0c\u76f4\u63a5\u8f93\u51fa\u8fde\u7eed\u7279\u5f81</span>\n        <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, 256, 16, 16]</span>\n        <span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">proj</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">))</span>  <span class=\"c1\"># [B, 256, D]</span>\n        <span class=\"k\">return</span> <span class=\"n\">tokens</span>  <span class=\"c1\"># \u8fde\u7eed\u503c\uff0c\u65e0\u7801\u672c</span>\n</code></pre></div>\n\n<p><strong>\u5206\u8fa8\u7387\u5904\u7406</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u56fa\u5b9a\u5206\u8fa8\u7387\uff1a\n\u251c\u2500\u2500 \u7b80\u5355\u4f46\u635f\u5931\u4fe1\u606f\n\u2514\u2500\u2500 448\u00d7448 \u662f\u5e38\u89c1\u9009\u62e9\n\n\u52a8\u6001\u5206\u8fa8\u7387\uff08Qwen-VL\uff09\uff1a\n\u251c\u2500\u2500 \u4fdd\u6301\u5bbd\u9ad8\u6bd4\n\u251c\u2500\u2500 Padding \u5230\u6700\u8fd1\u7684 14 \u7684\u500d\u6570\n\u2514\u2500\u2500 \u4f4d\u7f6e\u7f16\u7801\u9700\u8981 2D \u63d2\u503c\n\nNaViT \u98ce\u683c\u6253\u5305\uff1a\n\u251c\u2500\u2500 \u4e0d\u540c\u5206\u8fa8\u7387\u56fe\u50cf\u6253\u5305\u6210\u5e8f\u5217\n\u251c\u2500\u2500 \u6dfb\u52a0\u5206\u8fa8\u7387 token \u6807\u8bb0\u8fb9\u754c\n\u2514\u2500\u2500 \u8ba1\u7b97\u6548\u7387\u6700\u9ad8\n</code></pre></div>\n\n<p><strong>\u5b9e\u9a8c\u8981\u70b9</strong>\uff1a</p>\n<ul>\n<li>Token \u6570\u91cf\u6743\u8861\uff1a256 tokens \u591f\u7528\uff0c1024 tokens \u7ec6\u8282\u66f4\u597d</li>\n<li>\u91cd\u5efa\u8d28\u91cf\u76d1\u63a7\uff1aFID &lt; 5 \u53ef\u63a5\u53d7\uff0c&lt; 2 \u4f18\u79c0</li>\n<li>\u8bed\u4e49\u4fdd\u6301\uff1a\u7528 CLIP score \u9a8c\u8bc1\u8bed\u4e49\u4e00\u81f4\u6027</li>\n</ul>\n<h3 id=\"524\">5.2.4 \u5206\u8fa8\u7387\u81ea\u9002\u5e94\u8bad\u7ec3</h3>\n<p>\u5904\u7406\u771f\u5b9e\u4e16\u754c\u591a\u6837\u5316\u5206\u8fa8\u7387\u7684\u5173\u952e\u6280\u672f\uff1a</p>\n<p><strong>\u6311\u6218\u4e0e\u89e3\u51b3\u65b9\u6848</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u6311\u6218\uff1a\n\n1. \u8bad\u7ec3\u6570\u636e\u5206\u8fa8\u7387\u4e0d\u4e00\uff08224\u00d7224 \u5230 4K\uff09\n2. \u63a8\u7406\u9700\u6c42\u591a\u6837\uff08\u7f29\u7565\u56fe vs \u7ec6\u8282\u56fe\uff09\n3. \u8ba1\u7b97\u8d44\u6e90\u9650\u5236\n\n\u89e3\u51b3\u65b9\u6848\u77e9\u9635\uff1a\n              \u4f4e\u5206\u8fa8\u7387      \u4e2d\u5206\u8fa8\u7387      \u9ad8\u5206\u8fa8\u7387\n\u8bad\u7ec3\u9636\u6bb51\uff1a    100%          -            -\n\u8bad\u7ec3\u9636\u6bb52\uff1a     60%         30%          10%\n\u8bad\u7ec3\u9636\u6bb53\uff1a     30%         40%          30%\n</code></pre></div>\n\n<p><strong>Pix2Struct \u65b9\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">variable_resolution_encode</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">max_patches</span><span class=\"o\">=</span><span class=\"mi\">2048</span><span class=\"p\">):</span>\n    <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">:]</span>\n\n    <span class=\"c1\"># \u81ea\u9002\u5e94\u51b3\u5b9a patch \u6570\u91cf</span>\n    <span class=\"n\">aspect_ratio</span> <span class=\"o\">=</span> <span class=\"n\">w</span> <span class=\"o\">/</span> <span class=\"n\">h</span>\n    <span class=\"k\">if</span> <span class=\"n\">aspect_ratio</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"n\">cols</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">max_patches</span> <span class=\"o\">*</span> <span class=\"n\">aspect_ratio</span><span class=\"p\">))</span>\n        <span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">max_patches</span> <span class=\"o\">/</span> <span class=\"n\">cols</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">max_patches</span> <span class=\"o\">/</span> <span class=\"n\">aspect_ratio</span><span class=\"p\">))</span>\n        <span class=\"n\">cols</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">max_patches</span> <span class=\"o\">/</span> <span class=\"n\">rows</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u52a8\u6001 patch embedding</span>\n    <span class=\"n\">patches</span> <span class=\"o\">=</span> <span class=\"n\">extract_patches</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">cols</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">patches</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">cols</span><span class=\"p\">)</span>  <span class=\"c1\"># \u8fd4\u56de\u5e03\u5c40\u4fe1\u606f</span>\n</code></pre></div>\n\n<p><strong>\u4f4d\u7f6e\u7f16\u7801\u9002\u914d</strong>\uff1a</p>\n<ol>\n<li><strong>2D \u6b63\u5f26\u7f16\u7801\u63d2\u503c</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">interpolate_pos_encoding</span><span class=\"p\">(</span><span class=\"n\">pos_embed</span><span class=\"p\">,</span> <span class=\"n\">new_size</span><span class=\"p\">):</span>\n    <span class=\"c1\"># pos_embed: [1, N, D], N = 14\u00d714 = 196</span>\n    <span class=\"n\">old_size</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">pos_embed</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n    <span class=\"n\">pos_embed</span> <span class=\"o\">=</span> <span class=\"n\">pos_embed</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">old_size</span><span class=\"p\">,</span> <span class=\"n\">old_size</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">pos_embed</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">interpolate</span><span class=\"p\">(</span><span class=\"n\">pos_embed</span><span class=\"o\">.</span><span class=\"n\">permute</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> \n                              <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">new_size</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;bicubic&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">pos_embed</span><span class=\"o\">.</span><span class=\"n\">permute</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>RoPE 2D \u6269\u5c55</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">rope_2d</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u4e3a h \u548c w \u7ef4\u5ea6\u5206\u522b\u8ba1\u7b97 RoPE</span>\n    <span class=\"n\">pos_h</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">repeat</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">)</span>\n    <span class=\"n\">pos_w</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">repeat</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"c1\"># \u5e94\u7528\u65cb\u8f6c\u4f4d\u7f6e\u7f16\u7801</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">apply_rope</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">pos_h</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">apply_rope</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">pos_w</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span>\n</code></pre></div>\n\n<p><strong>\u591a\u5c3a\u5ea6\u8bad\u7ec3\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nv\">Curriculum</span><span class=\"w\"> </span><span class=\"nv\">Learning</span>\uff1a\n<span class=\"nv\">Week</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">2</span>:<span class=\"w\"> </span><span class=\"mi\">224</span>\u00d7<span class=\"mi\">224</span><span class=\"w\"> </span><span class=\"nv\">only</span>\n<span class=\"nv\">Week</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"mi\">4</span>:<span class=\"w\"> </span><span class=\"mi\">224</span>\u00d7<span class=\"mi\">224</span><span class=\"w\"> </span><span class=\"ss\">(</span><span class=\"mi\">70</span><span class=\"o\">%</span><span class=\"ss\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">448</span>\u00d7<span class=\"mi\">448</span><span class=\"w\"> </span><span class=\"ss\">(</span><span class=\"mi\">30</span><span class=\"o\">%</span><span class=\"ss\">)</span>\n<span class=\"nv\">Week</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">-</span><span class=\"mi\">6</span>:<span class=\"w\"> </span><span class=\"mi\">224</span>\u00d7<span class=\"mi\">224</span><span class=\"w\"> </span><span class=\"ss\">(</span><span class=\"mi\">40</span><span class=\"o\">%</span><span class=\"ss\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">448</span>\u00d7<span class=\"mi\">448</span><span class=\"w\"> </span><span class=\"ss\">(</span><span class=\"mi\">40</span><span class=\"o\">%</span><span class=\"ss\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">896</span>\u00d7<span class=\"mi\">896</span><span class=\"w\"> </span><span class=\"ss\">(</span><span class=\"mi\">20</span><span class=\"o\">%</span><span class=\"ss\">)</span>\n<span class=\"nv\">Week</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"o\">+</span>:<span class=\"w\">  </span>\u52a8\u6001\u91c7\u6837\uff0c\u6839\u636e<span class=\"w\"> </span><span class=\"nv\">loss</span><span class=\"w\"> </span>\u8c03\u6574\n\n\u6570\u636e\u589e\u5f3a\uff1a\n\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"k\">Random</span><span class=\"w\"> </span><span class=\"nv\">Crop</span>:<span class=\"w\"> </span>\u4fdd\u6301\u76ee\u6807\u53ef\u89c1\u524d\u63d0\u4e0b\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nv\">Multi</span><span class=\"o\">-</span><span class=\"nv\">scale</span><span class=\"w\"> </span><span class=\"nv\">Training</span>:<span class=\"w\"> </span><span class=\"mi\">0</span>.<span class=\"mi\">8</span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span>.<span class=\"mi\">2</span><span class=\"nv\">x</span><span class=\"w\"> </span>\u7f29\u653e\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nv\">Mixup</span><span class=\"w\"> </span><span class=\"nv\">at</span><span class=\"w\"> </span><span class=\"nv\">Feature</span><span class=\"w\"> </span><span class=\"nv\">Level</span>:<span class=\"w\"> </span>\u4e0d\u540c\u5206\u8fa8\u7387\u7279\u5f81\u6df7\u5408\n</code></pre></div>\n\n<p><strong>\u6548\u7387\u4f18\u5316</strong>\uff1a</p>\n<ul>\n<li>Flash Attention\uff1a\u957f\u5e8f\u5217\u5fc5\u5907</li>\n<li>Gradient Checkpointing\uff1a\u7528\u65f6\u95f4\u6362\u663e\u5b58</li>\n<li>Mixed Resolution Batch\uff1a\u76f8\u8fd1\u5206\u8fa8\u7387\u5206\u7ec4</li>\n</ul>\n<h2 id=\"53\">5.3 \u97f3\u9891\u6a21\u6001\u96c6\u6210</h2>\n<p>\u97f3\u9891\u6a21\u6001\u5e26\u6765\u72ec\u7279\u6311\u6218\uff1a\u65f6\u5e8f\u4f9d\u8d56\u6027\u5f3a\u3001\u91c7\u6837\u7387\u9ad8\u3001\u4fe1\u53f7\u7c7b\u578b\u591a\u6837\uff08\u8bed\u97f3\u3001\u97f3\u4e50\u3001\u73af\u5883\u97f3\uff09\u3002\u6709\u6548\u7684\u97f3\u9891\u96c6\u6210\u9700\u8981\u5e73\u8861\u65f6\u9891\u57df\u7279\u5f81\u63d0\u53d6\u4e0e\u8ba1\u7b97\u6548\u7387\u3002</p>\n<h3 id=\"531\">5.3.1 \u8bed\u97f3\u8bc6\u522b\u4e0e\u7406\u89e3</h3>\n<p>\u8bed\u97f3\u662f\u6700\u91cd\u8981\u7684\u97f3\u9891\u6a21\u6001\uff0c\u5176\u4e0e\u6587\u672c\u7684\u5929\u7136\u5bf9\u5e94\u5173\u7cfb\u4f7f\u5176\u6210\u4e3a\u591a\u6a21\u6001\u878d\u5408\u7684\u7406\u60f3\u8d77\u70b9\uff1a</p>\n<p><strong>\u6280\u672f\u8def\u7ebf\u6f14\u8fdb</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u4f20\u7edf\u7ea7\u8054\uff1aASR \u2192 \u6587\u672c \u2192 LLM\n\u251c\u2500\u2500 \u4f18\u70b9\uff1a\u6a21\u5757\u5316\uff0c\u5404\u90e8\u5206\u53ef\u72ec\u7acb\u4f18\u5316\n\u2514\u2500\u2500 \u7f3a\u70b9\uff1a\u9519\u8bef\u4f20\u64ad\uff0c\u4e22\u5931\u97f5\u5f8b\u4fe1\u606f\n\n\u7aef\u5230\u7aef\u96c6\u6210\uff1aAudio \u2192 Encoder \u2192 LLM\n\u251c\u2500\u2500 \u4f18\u70b9\uff1a\u4fdd\u7559\u5b8c\u6574\u97f3\u9891\u4fe1\u606f\n\u2514\u2500\u2500 \u7f3a\u70b9\uff1a\u9700\u8981\u5927\u91cf\u914d\u5bf9\u6570\u636e\n</code></pre></div>\n\n<p><strong>Whisper \u96c6\u6210\u65b9\u6848</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">WhisperLLMAdapter</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">whisper_model</span><span class=\"o\">=</span><span class=\"s2\">&quot;large-v3&quot;</span><span class=\"p\">,</span> <span class=\"n\">llm_model</span><span class=\"o\">=</span><span class=\"s2\">&quot;llama-7b&quot;</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">whisper</span> <span class=\"o\">=</span> <span class=\"n\">load_whisper</span><span class=\"p\">(</span><span class=\"n\">whisper_model</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">llm</span> <span class=\"o\">=</span> <span class=\"n\">load_llm</span><span class=\"p\">(</span><span class=\"n\">llm_model</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">projection</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">1280</span><span class=\"p\">,</span> <span class=\"mi\">4096</span><span class=\"p\">)</span>  <span class=\"c1\"># Whisper \u2192 LLM dim</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">encode_audio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">audio_waveform</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u63d0\u53d6 Whisper encoder \u8f93\u51fa</span>\n        <span class=\"n\">mel</span> <span class=\"o\">=</span> <span class=\"n\">log_mel_spectrogram</span><span class=\"p\">(</span><span class=\"n\">audio_waveform</span><span class=\"p\">)</span>\n        <span class=\"n\">audio_features</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">whisper</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">(</span><span class=\"n\">mel</span><span class=\"p\">)</span>  <span class=\"c1\"># [T, 1280]</span>\n\n        <span class=\"c1\"># \u6295\u5f71\u5230 LLM \u7a7a\u95f4</span>\n        <span class=\"n\">audio_tokens</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">projection</span><span class=\"p\">(</span><span class=\"n\">audio_features</span><span class=\"p\">)</span>  <span class=\"c1\"># [T, 4096]</span>\n\n        <span class=\"c1\"># \u964d\u91c7\u6837\uff08Whisper 50Hz \u2192 LLM ~10Hz\uff09</span>\n        <span class=\"n\">audio_tokens</span> <span class=\"o\">=</span> <span class=\"n\">audio_tokens</span><span class=\"p\">[::</span><span class=\"mi\">5</span><span class=\"p\">]</span>  <span class=\"c1\"># \u7b80\u5355\u964d\u91c7\u6837</span>\n        <span class=\"k\">return</span> <span class=\"n\">audio_tokens</span>\n</code></pre></div>\n\n<p><strong>\u591a\u8bed\u8a00\u5904\u7406\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u8bed\u8a00\u611f\u77e5\u7f16\u7801</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">lang_embeddings</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;en&quot;</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">768</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;zh&quot;</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">768</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;es&quot;</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">768</span><span class=\"p\">),</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">encode_with_lang</span><span class=\"p\">(</span><span class=\"n\">audio</span><span class=\"p\">,</span> <span class=\"n\">detected_lang</span><span class=\"p\">):</span>\n    <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">(</span><span class=\"n\">audio</span><span class=\"p\">)</span>\n    <span class=\"n\">lang_emb</span> <span class=\"o\">=</span> <span class=\"n\">lang_embeddings</span><span class=\"p\">[</span><span class=\"n\">detected_lang</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">features</span> <span class=\"o\">+</span> <span class=\"n\">lang_emb</span>  <span class=\"c1\"># \u8bed\u8a00\u504f\u7f6e</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u4ee3\u7801\u5207\u6362\u5904\u7406</strong>\uff08Code-switching\uff09\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">\u8f93\u5165</span><span class=\"err\">\uff1a</span><span class=\"s\">&quot;\u4eca\u5929\u5929\u6c14 really nice\uff0c\u6211\u4eec\u53bb shopping \u5427&quot;</span>\n\n<span class=\"n\">\u5206\u6bb5\u7b56\u7565</span><span class=\"err\">\uff1a</span>\n<span class=\"p\">[</span><span class=\"n\">\u4eca\u5929\u5929\u6c14</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">zh_encoder</span>\n<span class=\"p\">[</span><span class=\"n\">really</span><span class=\"w\"> </span><span class=\"n\">nice</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">en_encoder</span><span class=\"w\">  </span>\n<span class=\"p\">[</span><span class=\"n\">\u6211\u4eec\u53bb</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">zh_encoder</span>\n<span class=\"p\">[</span><span class=\"n\">shopping</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">en_encoder</span>\n<span class=\"p\">[</span><span class=\"n\">\u5427</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">zh_encoder</span>\n\n<span class=\"n\">\u878d\u5408</span><span class=\"err\">\uff1a</span><span class=\"n\">Attention</span><span class=\"w\"> </span><span class=\"n\">\u673a\u5236\u81ea\u52a8\u5b66\u4e60\u8fb9\u754c</span>\n</code></pre></div>\n\n<p><strong>\u97f5\u5f8b\u4fe1\u606f\u4fdd\u7559</strong>\uff1a</p>\n<ul>\n<li>\u97f3\u9ad8\uff08Pitch\uff09\uff1a\u63d0\u53d6 F0 \u8f68\u8ff9\uff0c\u4f5c\u4e3a\u989d\u5916 channel</li>\n<li>\u80fd\u91cf\uff08Energy\uff09\uff1aRMS energy \u66f2\u7ebf</li>\n<li>\u8bed\u901f\uff08Duration\uff09\uff1a\u97f3\u7d20\u65f6\u957f\u4fe1\u606f</li>\n<li>\u60c5\u611f\uff08Emotion\uff09\uff1a\u9884\u8bad\u7ec3\u60c5\u611f\u5206\u7c7b\u5668\u7279\u5f81</li>\n</ul>\n<h3 id=\"532\">5.3.2 \u97f3\u4e50\u4e0e\u73af\u5883\u97f3\u7406\u89e3</h3>\n<p>\u975e\u8bed\u97f3\u97f3\u9891\u7406\u89e3\u9700\u8981\u4e0d\u540c\u7684\u7279\u5f81\u63d0\u53d6\u548c\u5efa\u6a21\u7b56\u7565\uff1a</p>\n<p><strong>\u97f3\u4e50\u7406\u89e3\u5c42\u6b21</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u4f4e\u7ea7\u7279\u5f81\uff1a\n\u251c\u2500\u2500 \u8282\u594f\uff08Tempo, Beat\uff09\n\u251c\u2500\u2500 \u97f3\u9ad8\uff08Pitch, Key\uff09\n\u2514\u2500\u2500 \u97f3\u8272\uff08Timbre\uff09\n\n\u4e2d\u7ea7\u7ed3\u6784\uff1a\n\u251c\u2500\u2500 \u548c\u5f26\u8fdb\u884c\n\u251c\u2500\u2500 \u65cb\u5f8b\u7ebf\u6761\n\u2514\u2500\u2500 \u8282\u594f\u6a21\u5f0f\n\n\u9ad8\u7ea7\u8bed\u4e49\uff1a\n\u251c\u2500\u2500 \u98ce\u683c\u6d41\u6d3e\n\u251c\u2500\u2500 \u60c5\u611f\u8868\u8fbe\n\u2514\u2500\u2500 \u7ed3\u6784\u5206\u6790\uff08Verse, Chorus, Bridge\uff09\n</code></pre></div>\n\n<p><strong>MusicLM \u5f0f\u5efa\u6a21</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MusicEncoder</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">w2v_music</span> <span class=\"o\">=</span> <span class=\"n\">load_pretrained</span><span class=\"p\">(</span><span class=\"s2\">&quot;wav2vec2-music&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mulan</span> <span class=\"o\">=</span> <span class=\"n\">load_pretrained</span><span class=\"p\">(</span><span class=\"s2\">&quot;mulan&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># \u97f3\u4e50-\u6587\u672c\u5bf9\u9f50</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">encode_hierarchical</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">audio</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u58f0\u5b66 tokens (w2v-BERT)</span>\n        <span class=\"n\">acoustic_tokens</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">w2v_music</span><span class=\"p\">(</span><span class=\"n\">audio</span><span class=\"p\">)</span>  <span class=\"c1\"># 50Hz</span>\n\n        <span class=\"c1\"># \u8bed\u4e49 tokens (MuLaN)</span>\n        <span class=\"n\">semantic_tokens</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mulan</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">audio</span><span class=\"p\">)</span>  <span class=\"c1\"># 1Hz</span>\n\n        <span class=\"c1\"># \u5c42\u6b21\u5316\u8868\u793a</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;fine&quot;</span><span class=\"p\">:</span> <span class=\"n\">acoustic_tokens</span><span class=\"p\">,</span>    <span class=\"c1\"># \u7ec6\u7c92\u5ea6</span>\n            <span class=\"s2\">&quot;coarse&quot;</span><span class=\"p\">:</span> <span class=\"n\">semantic_tokens</span><span class=\"p\">,</span>   <span class=\"c1\"># \u7c97\u7c92\u5ea6</span>\n        <span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u73af\u5883\u97f3\u4e8b\u4ef6\u68c0\u6d4b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">AudioEventDetector</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">num_classes</span><span class=\"o\">=</span><span class=\"mi\">527</span><span class=\"p\">):</span>  <span class=\"c1\"># AudioSet classes</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span>\n            <span class=\"n\">ConvBlock</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">),</span>\n            <span class=\"n\">ConvBlock</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">),</span>\n            <span class=\"n\">ConvBlock</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">classifier</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"n\">num_classes</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">spectrogram</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u591a\u5c3a\u5ea6\u7279\u5f81\u63d0\u53d6</span>\n        <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">(</span><span class=\"n\">spectrogram</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5e27\u7ea7\u9884\u6d4b</span>\n        <span class=\"n\">frame_logits</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">classifier</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)</span>  <span class=\"c1\"># [T, 527]</span>\n\n        <span class=\"c1\"># \u805a\u5408\u4e3a\u7247\u6bb5\u7ea7</span>\n        <span class=\"n\">segment_logits</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">frame_logits</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">segment_logits</span>\n</code></pre></div>\n\n<p><strong>\u97f3\u9891\u5b57\u5e55\u751f\u6210</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u8f93\u5165\uff1a[\u72d7\u53eb\u58f0] + [\u6c7d\u8f66\u7ecf\u8fc7] + [\u96e8\u58f0]\n\u8f93\u51fa\uff1a&quot;\u96e8\u5929\u8857\u9053\u4e0a\uff0c\u4e00\u53ea\u72d7\u5bf9\u7740\u7ecf\u8fc7\u7684\u6c7d\u8f66\u5420\u53eb&quot;\n\n\u5173\u952e\uff1a\u65f6\u5e8f\u5173\u7cfb\u5efa\u6a21 + \u4e8b\u4ef6\u5171\u73b0\u5b66\u4e60\n</code></pre></div>\n\n<h3 id=\"533\">5.3.3 \u97f3\u9891\u7f16\u7801\u5668\u9009\u62e9</h3>\n<p>\u4e0d\u540c\u97f3\u9891\u7f16\u7801\u5668\u7684\u7279\u70b9\u4e0e\u9002\u7528\u573a\u666f\uff1a</p>\n<p><strong>\u4e3b\u6d41\u7f16\u7801\u5668\u5bf9\u6bd4</strong>\uff1a</p>\n<p>| \u7f16\u7801\u5668 | \u9884\u8bad\u7ec3\u6570\u636e | \u7279\u70b9 | \u6700\u4f73\u573a\u666f |</p>\n<table>\n<thead>\n<tr>\n<th>\u7f16\u7801\u5668</th>\n<th>\u9884\u8bad\u7ec3\u6570\u636e</th>\n<th>\u7279\u70b9</th>\n<th>\u6700\u4f73\u573a\u666f</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Wav2Vec2</td>\n<td>960h LibriSpeech</td>\n<td>\u81ea\u76d1\u7763\uff0cCPC loss</td>\n<td>\u82f1\u6587\u8bed\u97f3</td>\n</tr>\n<tr>\n<td>HuBERT</td>\n<td>60k h Libri-Light</td>\n<td>Masked prediction</td>\n<td>\u591a\u8bed\u8a00\u8bed\u97f3</td>\n</tr>\n<tr>\n<td>WavLM</td>\n<td>94k h \u6df7\u5408</td>\n<td>\u53bb\u566a + \u63a9\u7801</td>\n<td>\u566a\u58f0\u9c81\u68d2</td>\n</tr>\n<tr>\n<td>Whisper</td>\n<td>680k h \u6807\u6ce8</td>\n<td>\u6709\u76d1\u7763\uff0c\u591a\u4efb\u52a1</td>\n<td>\u901a\u7528\u8bed\u97f3</td>\n</tr>\n<tr>\n<td>BEATs</td>\n<td>AudioSet + \u79c1\u6709</td>\n<td>\u97f3\u9891 MAE</td>\n<td>\u901a\u7528\u97f3\u9891</td>\n</tr>\n<tr>\n<td>CLAP</td>\n<td>LAION-Audio-630K</td>\n<td>\u5bf9\u6bd4\u5b66\u4e60</td>\n<td>\u97f3\u9891-\u6587\u672c\u5bf9\u9f50</td>\n</tr>\n</tbody>\n</table>\n<p><strong>\u9009\u62e9\u51b3\u7b56\u6811</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u9700\u8981\u8bed\u97f3\u8bc6\u522b\uff1f\n\u251c\u2500\u662f\u2192 \u9700\u8981\u591a\u8bed\u8a00\uff1f\n\u2502     \u251c\u2500\u662f\u2192 Whisper\n\u2502     \u2514\u2500\u5426\u2192 Wav2Vec2\n\u2514\u2500\u5426\u2192 \u9700\u8981\u6587\u672c\u63cf\u8ff0\uff1f\n      \u251c\u2500\u662f\u2192 CLAP\n      \u2514\u2500\u5426\u2192 BEATs\n</code></pre></div>\n\n<p><strong>\u7279\u5f81\u63d0\u53d6\u5c42\u7ea7</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">extract_hierarchical_features</span><span class=\"p\">(</span><span class=\"n\">encoder</span><span class=\"p\">,</span> <span class=\"n\">audio</span><span class=\"p\">):</span>\n    <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"c1\"># Whisper \u793a\u4f8b</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">encoder</span><span class=\"p\">,</span> <span class=\"n\">WhisperModel</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">encoder</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"o\">.</span><span class=\"n\">conv1</span><span class=\"p\">(</span><span class=\"n\">audio</span><span class=\"p\">)</span>\n        <span class=\"n\">features</span><span class=\"p\">[</span><span class=\"s1\">&#39;conv&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">x</span>  <span class=\"c1\"># \u65e9\u671f\u58f0\u5b66\u7279\u5f81</span>\n\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">encoder</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"o\">.</span><span class=\"n\">conv2</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">permute</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">layer</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">encoder</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"o\">.</span><span class=\"n\">blocks</span><span class=\"p\">):</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">layer</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">]:</span>  <span class=\"c1\"># \u9009\u62e9\u6027\u4fdd\u5b58</span>\n                <span class=\"n\">features</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">&#39;layer_</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">x</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">features</span>  <span class=\"c1\"># \u591a\u5c42\u7ea7\u7279\u5f81</span>\n</code></pre></div>\n\n<h3 id=\"534\">5.3.4 \u65f6\u9891\u57df\u7279\u5f81\u878d\u5408</h3>\n<p>\u6709\u6548\u878d\u5408\u65f6\u57df\u548c\u9891\u57df\u4fe1\u606f\u662f\u97f3\u9891\u7406\u89e3\u7684\u5173\u952e\uff1a</p>\n<p><strong>\u7279\u5f81\u63d0\u53d6\u7ba1\u7ebf</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">AudioFeatureExtractor</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sample_rate</span><span class=\"o\">=</span><span class=\"mi\">16000</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sample_rate</span> <span class=\"o\">=</span> <span class=\"n\">sample_rate</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mel_bins</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hop_length</span> <span class=\"o\">=</span> <span class=\"mi\">160</span>  <span class=\"c1\"># 10ms</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">extract_all_features</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">waveform</span><span class=\"p\">):</span>\n        <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"c1\"># \u65f6\u57df\u7279\u5f81</span>\n        <span class=\"n\">features</span><span class=\"p\">[</span><span class=\"s1\">&#39;zcr&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">zero_crossing_rate</span><span class=\"p\">(</span><span class=\"n\">waveform</span><span class=\"p\">)</span>\n        <span class=\"n\">features</span><span class=\"p\">[</span><span class=\"s1\">&#39;energy&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">short_time_energy</span><span class=\"p\">(</span><span class=\"n\">waveform</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u9891\u57df\u7279\u5f81  </span>\n        <span class=\"n\">stft</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">stft</span><span class=\"p\">(</span><span class=\"n\">waveform</span><span class=\"p\">,</span> <span class=\"n\">n_fft</span><span class=\"o\">=</span><span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"n\">hop_length</span><span class=\"o\">=</span><span class=\"mi\">160</span><span class=\"p\">)</span>\n        <span class=\"n\">features</span><span class=\"p\">[</span><span class=\"s1\">&#39;spectral_centroid&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spectral_centroid</span><span class=\"p\">(</span><span class=\"n\">stft</span><span class=\"p\">)</span>\n        <span class=\"n\">features</span><span class=\"p\">[</span><span class=\"s1\">&#39;spectral_rolloff&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spectral_rolloff</span><span class=\"p\">(</span><span class=\"n\">stft</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u65f6\u9891\u7279\u5f81</span>\n        <span class=\"n\">features</span><span class=\"p\">[</span><span class=\"s1\">&#39;mel_spec&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">mel_spectrogram</span><span class=\"p\">(</span><span class=\"n\">waveform</span><span class=\"p\">)</span>\n        <span class=\"n\">features</span><span class=\"p\">[</span><span class=\"s1\">&#39;mfcc&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">mfcc</span><span class=\"p\">(</span><span class=\"n\">waveform</span><span class=\"p\">,</span> <span class=\"n\">n_mfcc</span><span class=\"o\">=</span><span class=\"mi\">13</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">features</span>\n</code></pre></div>\n\n<p><strong>\u591a\u5c3a\u5ea6\u65f6\u95f4\u5efa\u6a21</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u77ed\u65f6\u7a97\u53e3\uff0810-30ms\uff09\uff1a\n\u2514\u2500\u2500 \u6355\u83b7\u97f3\u7d20\u3001\u97f3\u9ad8\u53d8\u5316\n\n\u4e2d\u65f6\u7a97\u53e3\uff08100-500ms\uff09\uff1a  \n\u2514\u2500\u2500 \u6355\u83b7\u97f3\u8282\u3001\u8282\u62cd\n\n\u957f\u65f6\u7a97\u53e3\uff081-5s\uff09\uff1a\n\u2514\u2500\u2500 \u6355\u83b7\u53e5\u5b50\u3001\u4e50\u53e5\n\n\u8d85\u957f\u7a97\u53e3\uff08&gt;10s\uff09\uff1a\n\u2514\u2500\u2500 \u6355\u83b7\u6bb5\u843d\u3001\u97f3\u4e50\u7ed3\u6784\n</code></pre></div>\n\n<p><strong>\u6ce8\u610f\u529b\u878d\u5408\u673a\u5236</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">TimeFreqAttention</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">time_attn</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">freq_attn</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"c1\"># x: [Batch, Time, Freq, Dim]</span>\n        <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">F</span><span class=\"p\">,</span> <span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n\n        <span class=\"c1\"># \u65f6\u95f4\u7ef4\u5ea6\u6ce8\u610f\u529b</span>\n        <span class=\"n\">x_t</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, T, D]</span>\n        <span class=\"n\">x_t</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">time_attn</span><span class=\"p\">(</span><span class=\"n\">x_t</span><span class=\"p\">,</span> <span class=\"n\">x_t</span><span class=\"p\">,</span> <span class=\"n\">x_t</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u9891\u7387\u7ef4\u5ea6\u6ce8\u610f\u529b  </span>\n        <span class=\"n\">x_f</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, F, D]</span>\n        <span class=\"n\">x_f</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">freq_attn</span><span class=\"p\">(</span><span class=\"n\">x_f</span><span class=\"p\">,</span> <span class=\"n\">x_f</span><span class=\"p\">,</span> <span class=\"n\">x_f</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u5e7f\u64ad\u5e76\u878d\u5408</span>\n        <span class=\"n\">x_t</span> <span class=\"o\">=</span> <span class=\"n\">x_t</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expand</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">F</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">x_f</span> <span class=\"o\">=</span> <span class=\"n\">x_f</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expand</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"n\">x_fused</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion</span><span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">([</span><span class=\"n\">x_t</span><span class=\"p\">,</span> <span class=\"n\">x_f</span><span class=\"p\">],</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">x_fused</span>\n</code></pre></div>\n\n<p><strong>\u5b9e\u9a8c\u4f18\u5316\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li>SpecAugment\uff1a\u65f6\u9891\u57df\u6570\u636e\u589e\u5f3a</li>\n<li>\u6df7\u5408\u7cbe\u5ea6\uff1a\u8282\u7701\u663e\u5b58\uff0c\u52a0\u901f\u8bad\u7ec3</li>\n<li>\u6e10\u8fdb\u5f0f\u5206\u8fa8\u7387\uff1a\u4ece\u4f4e\u5206\u8fa8\u7387\u5f00\u59cb\u8bad\u7ec3</li>\n</ul>\n<h2 id=\"54\">5.4 \u89c6\u9891\u7406\u89e3\u7684\u65f6\u5e8f\u5efa\u6a21</h2>\n<p>\u89c6\u9891\u4f5c\u4e3a\u6700\u590d\u6742\u7684\u591a\u6a21\u6001\u6570\u636e\uff0c\u4e0d\u4ec5\u5305\u542b\u89c6\u89c9\u548c\u97f3\u9891\u4fe1\u606f\uff0c\u8fd8\u5177\u6709\u5f3a\u70c8\u7684\u65f6\u5e8f\u4f9d\u8d56\u6027\u3002\u6709\u6548\u7684\u65f6\u5e8f\u5efa\u6a21\u662f\u89c6\u9891\u7406\u89e3\u7684\u6838\u5fc3\uff0c\u51b3\u5b9a\u4e86\u6a21\u578b\u80fd\u5426\u6355\u83b7\u52a8\u4f5c\u3001\u4e8b\u4ef6\u548c\u53d9\u4e8b\u7ed3\u6784\u3002</p>\n<h3 id=\"541\">5.4.1 \u5e27\u91c7\u6837\u7b56\u7565</h3>\n<p>\u89c6\u9891\u7684\u9ad8\u7ef4\u7279\u6027\uff08\u5178\u578b 30fps\uff09\u4f7f\u5f97\u5904\u7406\u6240\u6709\u5e27\u5728\u8ba1\u7b97\u4e0a\u4e0d\u53ef\u884c\u3002\u667a\u80fd\u7684\u5e27\u91c7\u6837\u7b56\u7565\u9700\u8981\u5728\u4fe1\u606f\u4fdd\u7559\u548c\u8ba1\u7b97\u6548\u7387\u95f4\u53d6\u5f97\u5e73\u8861\u3002</p>\n<p><strong>\u91c7\u6837\u65b9\u6cd5\u5bf9\u6bd4</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u5747\u5300\u91c7\u6837\uff08Uniform Sampling\uff09\uff1a\n\u251c\u2500\u2500 \u5b9e\u73b0\uff1a\u6bcf\u9694 k \u5e27\u91c7\u6837\u4e00\u6b21\n\u251c\u2500\u2500 \u4f18\u70b9\uff1a\u7b80\u5355\uff0c\u4fdd\u6301\u65f6\u5e8f\u5747\u5300\u6027\n\u251c\u2500\u2500 \u7f3a\u70b9\uff1a\u53ef\u80fd\u9519\u8fc7\u5173\u952e\u5e27\n\u2514\u2500\u2500 \u9002\u7528\uff1a\u52a8\u4f5c\u5747\u5300\u5206\u5e03\u7684\u89c6\u9891\n\n\u5bc6\u96c6\u91c7\u6837\uff08Dense Sampling\uff09\uff1a\n\u251c\u2500\u2500 \u5b9e\u73b0\uff1a\u5728\u77ed\u65f6\u95f4\u7a97\u53e3\u5185\u5bc6\u96c6\u91c7\u6837\n\u251c\u2500\u2500 \u4f18\u70b9\uff1a\u6355\u83b7\u7ec6\u7c92\u5ea6\u52a8\u4f5c\n\u251c\u2500\u2500 \u7f3a\u70b9\uff1a\u957f\u7a0b\u4f9d\u8d56\u5efa\u6a21\u56f0\u96be\n\u2514\u2500\u2500 \u9002\u7528\uff1a\u52a8\u4f5c\u8bc6\u522b\u4efb\u52a1\n\n\u7a00\u758f\u91c7\u6837\uff08Sparse Sampling\uff09\uff1a\n\u251c\u2500\u2500 \u5b9e\u73b0\uff1a\u5927\u95f4\u9694\u91c7\u6837\uff0c\u8986\u76d6\u6574\u4e2a\u89c6\u9891\n\u251c\u2500\u2500 \u4f18\u70b9\uff1a\u6355\u83b7\u5168\u5c40\u7ed3\u6784\n\u251c\u2500\u2500 \u7f3a\u70b9\uff1a\u4e22\u5931\u5c40\u90e8\u7ec6\u8282\n\u2514\u2500\u2500 \u9002\u7528\uff1a\u89c6\u9891\u5206\u7c7b\u3001\u6458\u8981\n\n\u81ea\u9002\u5e94\u91c7\u6837\uff08Adaptive Sampling\uff09\uff1a\n\u251c\u2500\u2500 \u5b9e\u73b0\uff1a\u57fa\u4e8e\u5185\u5bb9\u53d8\u5316\u52a8\u6001\u8c03\u6574\n\u251c\u2500\u2500 \u4f18\u70b9\uff1a\u4fe1\u606f\u4fdd\u7559\u6700\u4f18\n\u251c\u2500\u2500 \u7f3a\u70b9\uff1a\u8ba1\u7b97\u5f00\u9500\u5927\n\u2514\u2500\u2500 \u9002\u7528\uff1a\u4e8b\u4ef6\u68c0\u6d4b\u3001\u9ad8\u5149\u63d0\u53d6\n</code></pre></div>\n\n<p><strong>TSN\uff08Temporal Segment Networks\uff09\u91c7\u6837</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">tsn_sampling</span><span class=\"p\">(</span><span class=\"n\">video_frames</span><span class=\"p\">,</span> <span class=\"n\">num_segments</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;uniform&#39;</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;TSN \u7684\u5206\u6bb5\u91c7\u6837\u7b56\u7565&quot;&quot;&quot;</span>\n    <span class=\"n\">total_frames</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">video_frames</span><span class=\"p\">)</span>\n    <span class=\"n\">segment_len</span> <span class=\"o\">=</span> <span class=\"n\">total_frames</span> <span class=\"o\">//</span> <span class=\"n\">num_segments</span>\n\n    <span class=\"n\">sampled_frames</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_segments</span><span class=\"p\">):</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"n\">segment_len</span>\n        <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">((</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">segment_len</span><span class=\"p\">,</span> <span class=\"n\">total_frames</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">mode</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;uniform&#39;</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6bcf\u6bb5\u4e2d\u95f4\u5e27</span>\n            <span class=\"n\">frame_idx</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">start</span> <span class=\"o\">+</span> <span class=\"n\">end</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"mi\">2</span>\n        <span class=\"k\">elif</span> <span class=\"n\">mode</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;random&#39;</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6bcf\u6bb5\u968f\u673a\u91c7\u6837</span>\n            <span class=\"n\">frame_idx</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">mode</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;dense&#39;</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6bcf\u6bb5\u91c7\u6837\u591a\u5e27</span>\n            <span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">end</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n            <span class=\"n\">sampled_frames</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span><span class=\"n\">video_frames</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">idx</span> <span class=\"ow\">in</span> <span class=\"n\">indices</span><span class=\"p\">])</span>\n            <span class=\"k\">continue</span>\n\n        <span class=\"n\">sampled_frames</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">video_frames</span><span class=\"p\">[</span><span class=\"n\">frame_idx</span><span class=\"p\">])</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">sampled_frames</span>\n</code></pre></div>\n\n<p><strong>\u65f6\u5e8fjittering\u589e\u5f3a</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">TemporalJitter</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">max_jitter</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_jitter</span> <span class=\"o\">=</span> <span class=\"n\">max_jitter</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">frame_indices</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8bad\u7ec3\u65f6\u6dfb\u52a0\u65f6\u5e8f\u6270\u52a8\uff0c\u63d0\u5347\u6cdb\u5316&quot;&quot;&quot;</span>\n        <span class=\"n\">jittered</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">idx</span> <span class=\"ow\">in</span> <span class=\"n\">frame_indices</span><span class=\"p\">:</span>\n            <span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_jitter</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_jitter</span><span class=\"p\">)</span>\n            <span class=\"n\">new_idx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">clip</span><span class=\"p\">(</span><span class=\"n\">idx</span> <span class=\"o\">+</span> <span class=\"n\">offset</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">frame_indices</span><span class=\"p\">))</span>\n            <span class=\"n\">jittered</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">new_idx</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">jittered</span>\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u5e27\u68c0\u6d4b\u91c7\u6837</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">keyframe_sampling</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u57fa\u4e8e\u5185\u5bb9\u53d8\u5316\u7684\u5173\u952e\u5e27\u91c7\u6837&quot;&quot;&quot;</span>\n    <span class=\"n\">frames</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">prev_frame</span> <span class=\"o\">=</span> <span class=\"n\">video</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">prev_frame</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">frame</span> <span class=\"ow\">in</span> <span class=\"n\">video</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]:</span>\n        <span class=\"c1\"># \u8ba1\u7b97\u5e27\u95f4\u5dee\u5f02</span>\n        <span class=\"n\">diff</span> <span class=\"o\">=</span> <span class=\"n\">compute_frame_difference</span><span class=\"p\">(</span><span class=\"n\">prev_frame</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">diff</span> <span class=\"o\">&gt;</span> <span class=\"n\">threshold</span><span class=\"p\">:</span>\n            <span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span>\n            <span class=\"n\">prev_frame</span> <span class=\"o\">=</span> <span class=\"n\">frame</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">frames</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">compute_frame_difference</span><span class=\"p\">(</span><span class=\"n\">frame1</span><span class=\"p\">,</span> <span class=\"n\">frame2</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u4f7f\u7528\u76f4\u65b9\u56fe\u5dee\u5f02 + \u5149\u6d41\u5e45\u5ea6&quot;&quot;&quot;</span>\n    <span class=\"c1\"># \u989c\u8272\u76f4\u65b9\u56fe\u5dee\u5f02</span>\n    <span class=\"n\">hist1</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">calcHist</span><span class=\"p\">([</span><span class=\"n\">frame1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">256</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">256</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">256</span><span class=\"p\">])</span>\n    <span class=\"n\">hist2</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">calcHist</span><span class=\"p\">([</span><span class=\"n\">frame2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">256</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">256</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">256</span><span class=\"p\">])</span>\n    <span class=\"n\">hist_diff</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">compareHist</span><span class=\"p\">(</span><span class=\"n\">hist1</span><span class=\"p\">,</span> <span class=\"n\">hist2</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">HISTCMP_CHISQR</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u5149\u6d41\u5e45\u5ea6\uff08\u53ef\u9009\uff09</span>\n    <span class=\"n\">flow</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">calcOpticalFlowFarneback</span><span class=\"p\">(</span><span class=\"n\">gray1</span><span class=\"p\">,</span> <span class=\"n\">gray2</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mf\">1.2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">magnitude</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">flow</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"n\">flow</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">hist_diff</span> <span class=\"o\">+</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">magnitude</span>\n</code></pre></div>\n\n<p><strong>\u5b9e\u9a8c\u5efa\u8bae</strong>\uff1a</p>\n<ul>\n<li>\u77ed\u89c6\u9891\uff08&lt;10s\uff09\uff1a8-16 \u5e27\u8db3\u591f</li>\n<li>\u957f\u89c6\u9891\uff08&gt;60s\uff09\uff1a32-64 \u5e27\uff0c\u5206\u5c42\u91c7\u6837</li>\n<li>\u52a8\u4f5c\u8bc6\u522b\uff1a\u5bc6\u96c6\u91c7\u6837 + TSM\uff08Temporal Shift Module\uff09</li>\n<li>\u89c6\u9891\u95ee\u7b54\uff1a\u7a00\u758f\u91c7\u6837 + \u5173\u952e\u5e27\u68c0\u6d4b</li>\n</ul>\n<h3 id=\"542\">5.4.2 \u65f6\u5e8f\u6ce8\u610f\u529b\u673a\u5236</h3>\n<p>\u65f6\u5e8f\u6ce8\u610f\u529b\u662f\u89c6\u9891\u7406\u89e3\u7684\u6838\u5fc3\uff0c\u9700\u8981\u6709\u6548\u5efa\u6a21\u5e27\u95f4\u5173\u7cfbwhile\u63a7\u5236\u8ba1\u7b97\u590d\u6742\u5ea6\u3002</p>\n<p><strong>\u65f6\u7a7a\u6ce8\u610f\u529b\u5206\u89e3</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">SpaceTimeAttention</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u65f6\u7a7a\u6ce8\u610f\u529b\u5206\u89e3\uff0c\u964d\u4f4e\u590d\u6742\u5ea6 O(T\u00b2S\u00b2) \u2192 O(T\u00b2+S\u00b2)&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">num_heads</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">spatial_attn</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">num_heads</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temporal_attn</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">num_heads</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">norm1</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">LayerNorm</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">norm2</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">LayerNorm</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"c1\"># x: [B, T, S, D] - Batch, Time, Space, Dim</span>\n        <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n\n        <span class=\"c1\"># \u7a7a\u95f4\u6ce8\u610f\u529b\uff08\u72ec\u7acb\u5904\u7406\u6bcf\u5e27\uff09</span>\n        <span class=\"n\">x_spatial</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"o\">*</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">D</span><span class=\"p\">)</span>\n        <span class=\"n\">x_spatial</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">spatial_attn</span><span class=\"p\">(</span><span class=\"n\">x_spatial</span><span class=\"p\">,</span> <span class=\"n\">x_spatial</span><span class=\"p\">,</span> <span class=\"n\">x_spatial</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">x_spatial</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">norm1</span><span class=\"p\">(</span><span class=\"n\">x_spatial</span> <span class=\"o\">+</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"o\">*</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">D</span><span class=\"p\">))</span>\n        <span class=\"n\">x_spatial</span> <span class=\"o\">=</span> <span class=\"n\">x_spatial</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">D</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u65f6\u95f4\u6ce8\u610f\u529b\uff08\u8de8\u5e27\u5efa\u6a21\uff09</span>\n        <span class=\"n\">x_temporal</span> <span class=\"o\">=</span> <span class=\"n\">x_spatial</span><span class=\"o\">.</span><span class=\"n\">permute</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"o\">*</span><span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">D</span><span class=\"p\">)</span>\n        <span class=\"n\">x_temporal</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temporal_attn</span><span class=\"p\">(</span><span class=\"n\">x_temporal</span><span class=\"p\">,</span> <span class=\"n\">x_temporal</span><span class=\"p\">,</span> <span class=\"n\">x_temporal</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">x_temporal</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">norm2</span><span class=\"p\">(</span><span class=\"n\">x_temporal</span> <span class=\"o\">+</span> <span class=\"n\">x_temporal</span><span class=\"p\">)</span>\n        <span class=\"n\">x_temporal</span> <span class=\"o\">=</span> <span class=\"n\">x_temporal</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">D</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">permute</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">x_temporal</span>\n</code></pre></div>\n\n<p><strong>TimeSformer\u67b6\u6784\u53d8\u4f53</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>Divided Attention\uff08\u5206\u79bb\u6ce8\u610f\u529b\uff09\uff1a\nSpace Attn \u2192 Time Attn\n\u590d\u6742\u5ea6\uff1aO(TS\u00b2) + O(T\u00b2S)\n\nJoint Attention\uff08\u8054\u5408\u6ce8\u610f\u529b\uff09\uff1a\nSpaceTime Attn together\n\u590d\u6742\u5ea6\uff1aO((TS)\u00b2) - \u8ba1\u7b97\u5bc6\u96c6\n\nAxial Attention\uff08\u8f74\u5411\u6ce8\u610f\u529b\uff09\uff1a\nHeight \u2192 Width \u2192 Time\n\u590d\u6742\u5ea6\uff1aO(TH\u00b2W) + O(THW\u00b2) + O(T\u00b2HW)\n</code></pre></div>\n\n<p><strong>\u5c40\u90e8\u65f6\u5e8f\u6ce8\u610f\u529b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">LocalTemporalAttention</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u5c40\u90e8\u7a97\u53e3\u65f6\u5e8f\u6ce8\u610f\u529b\uff0c\u964d\u4f4e\u957f\u89c6\u9891\u590d\u6742\u5ea6&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window_size</span> <span class=\"o\">=</span> <span class=\"n\">window_size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attn</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"c1\"># x: [B, T, D]</span>\n        <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6ed1\u52a8\u7a97\u53e3\u6ce8\u610f\u529b</span>\n        <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">):</span>\n            <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">t</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window_size</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n            <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window_size</span> <span class=\"o\">//</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n            <span class=\"n\">window</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"p\">[:,</span> <span class=\"n\">start</span><span class=\"p\">:</span><span class=\"n\">end</span><span class=\"p\">]</span>  <span class=\"c1\"># [B, W, D]</span>\n            <span class=\"n\">center_idx</span> <span class=\"o\">=</span> <span class=\"n\">t</span> <span class=\"o\">-</span> <span class=\"n\">start</span>\n\n            <span class=\"c1\"># \u8ba1\u7b97\u7a97\u53e3\u5185\u6ce8\u610f\u529b</span>\n            <span class=\"n\">attn_out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attn</span><span class=\"p\">(</span>\n                <span class=\"n\">window</span><span class=\"p\">[:,</span> <span class=\"n\">center_idx</span><span class=\"p\">:</span><span class=\"n\">center_idx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span>  <span class=\"c1\"># Query</span>\n                <span class=\"n\">window</span><span class=\"p\">,</span>  <span class=\"c1\"># Key</span>\n                <span class=\"n\">window</span>   <span class=\"c1\"># Value</span>\n            <span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n            <span class=\"n\">output</span><span class=\"p\">[:,</span> <span class=\"n\">t</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">attn_out</span><span class=\"o\">.</span><span class=\"n\">squeeze</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">output</span>\n</code></pre></div>\n\n<p><strong>\u65f6\u5e8f\u4f4d\u7f6e\u7f16\u7801\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">temporal_position_encoding</span><span class=\"p\">(</span><span class=\"n\">num_frames</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">max_period</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u4e3a\u89c6\u9891\u5e27\u751f\u6210\u65f6\u5e8f\u4f4d\u7f6e\u7f16\u7801&quot;&quot;&quot;</span>\n    <span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">num_frames</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">div_term</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"o\">-</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">max_period</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">dim</span><span class=\"p\">))</span>\n\n    <span class=\"n\">pe</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">num_frames</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">)</span>\n    <span class=\"n\">pe</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">position</span> <span class=\"o\">*</span> <span class=\"n\">div_term</span><span class=\"p\">)</span>\n    <span class=\"n\">pe</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">position</span> <span class=\"o\">*</span> <span class=\"n\">div_term</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u6dfb\u52a0\u5e27\u7387\u81ea\u9002\u5e94</span>\n    <span class=\"k\">if</span> <span class=\"n\">frame_rate</span> <span class=\"o\">!=</span> <span class=\"mi\">30</span><span class=\"p\">:</span>  <span class=\"c1\"># \u5047\u8bbe30fps\u4e3a\u57fa\u51c6</span>\n        <span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"mf\">30.0</span> <span class=\"o\">/</span> <span class=\"n\">frame_rate</span>\n        <span class=\"n\">pe</span> <span class=\"o\">=</span> <span class=\"n\">pe</span> <span class=\"o\">*</span> <span class=\"n\">scale</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">pe</span>\n</code></pre></div>\n\n<h3 id=\"543\">5.4.3 \u957f\u89c6\u9891\u5904\u7406\u4f18\u5316</h3>\n<p>\u957f\u89c6\u9891\uff08&gt;5\u5206\u949f\uff09\u5e26\u6765\u4e25\u91cd\u7684\u5185\u5b58\u548c\u8ba1\u7b97\u6311\u6218\uff0c\u9700\u8981\u7279\u6b8a\u7684\u4f18\u5316\u7b56\u7565\u3002</p>\n<p><strong>\u5c42\u6b21\u5316\u5904\u7406\u67b6\u6784</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">HierarchicalVideoModel</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u5c42\u6b21\u5316\u957f\u89c6\u9891\u5904\u7406&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">clip_len</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clip_len</span> <span class=\"o\">=</span> <span class=\"n\">clip_len</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stride</span> <span class=\"o\">=</span> <span class=\"n\">stride</span>\n\n        <span class=\"c1\"># \u5c40\u90e8\u7f16\u7801\u5668\uff08\u5904\u7406\u77ed\u7247\u6bb5\uff09</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">local_encoder</span> <span class=\"o\">=</span> <span class=\"n\">VideoEncoder</span><span class=\"p\">(</span><span class=\"n\">num_frames</span><span class=\"o\">=</span><span class=\"n\">clip_len</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5168\u5c40\u805a\u5408\u5668\uff08\u878d\u5408\u7247\u6bb5\u7279\u5f81\uff09</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">global_aggregator</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">TransformerEncoder</span><span class=\"p\">(</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">TransformerEncoderLayer</span><span class=\"p\">(</span><span class=\"n\">d_model</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"n\">nhead</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">),</span>\n            <span class=\"n\">num_layers</span><span class=\"o\">=</span><span class=\"mi\">4</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">video</span><span class=\"p\">):</span>\n        <span class=\"c1\"># video: [B, T_total, H, W, C]</span>\n        <span class=\"n\">clips</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">extract_clips</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, N_clips, clip_len, H, W, C]</span>\n\n        <span class=\"c1\"># \u7f16\u7801\u6bcf\u4e2a\u7247\u6bb5</span>\n        <span class=\"n\">clip_features</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">clips</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]):</span>\n            <span class=\"n\">feat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">local_encoder</span><span class=\"p\">(</span><span class=\"n\">clips</span><span class=\"p\">[:,</span> <span class=\"n\">i</span><span class=\"p\">])</span>  <span class=\"c1\"># [B, D]</span>\n            <span class=\"n\">clip_features</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">feat</span><span class=\"p\">)</span>\n\n        <span class=\"n\">clip_features</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">(</span><span class=\"n\">clip_features</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, N_clips, D]</span>\n\n        <span class=\"c1\"># \u5168\u5c40\u805a\u5408</span>\n        <span class=\"n\">global_features</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">global_aggregator</span><span class=\"p\">(</span><span class=\"n\">clip_features</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">global_features</span>\n</code></pre></div>\n\n<p><strong>\u5185\u5b58\u4f18\u5316\u6280\u672f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MemoryEfficientVideoProcessor</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">chunk_size</span> <span class=\"o\">=</span> <span class=\"n\">chunk_size</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">process_video_streaming</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">video_path</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6d41\u5f0f\u5904\u7406\uff0c\u907f\u514d\u4e00\u6b21\u6027\u52a0\u8f7d\u5168\u90e8\u5e27&quot;&quot;&quot;</span>\n        <span class=\"n\">cap</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoCapture</span><span class=\"p\">(</span><span class=\"n\">video_path</span><span class=\"p\">)</span>\n        <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"n\">chunk</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">cap</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ret</span><span class=\"p\">:</span>\n                <span class=\"k\">break</span>\n\n            <span class=\"n\">chunk</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">chunk</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">chunk_size</span><span class=\"p\">:</span>\n                <span class=\"c1\"># \u5904\u7406\u5f53\u524dchunk</span>\n                <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n                    <span class=\"n\">chunk_tensor</span> <span class=\"o\">=</span> <span class=\"n\">preprocess_frames</span><span class=\"p\">(</span><span class=\"n\">chunk</span><span class=\"p\">)</span>\n                    <span class=\"n\">chunk_features</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">chunk_tensor</span><span class=\"p\">)</span>\n                    <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">chunk_features</span><span class=\"o\">.</span><span class=\"n\">cpu</span><span class=\"p\">())</span>\n\n                <span class=\"c1\"># \u6e05\u7a7achunk\uff0c\u4fdd\u7559\u90e8\u5206\u91cd\u53e0</span>\n                <span class=\"n\">chunk</span> <span class=\"o\">=</span> <span class=\"n\">chunk</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"p\">:]</span>  <span class=\"c1\"># \u4fdd\u75598\u5e27\u91cd\u53e0</span>\n\n        <span class=\"c1\"># \u5904\u7406\u5269\u4f59\u5e27</span>\n        <span class=\"k\">if</span> <span class=\"n\">chunk</span><span class=\"p\">:</span>\n            <span class=\"n\">chunk_tensor</span> <span class=\"o\">=</span> <span class=\"n\">preprocess_frames</span><span class=\"p\">(</span><span class=\"n\">chunk</span><span class=\"p\">)</span>\n            <span class=\"n\">chunk_features</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">chunk_tensor</span><span class=\"p\">)</span>\n            <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">chunk_features</span><span class=\"o\">.</span><span class=\"n\">cpu</span><span class=\"p\">())</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>Token\u538b\u7f29\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">TokenMerging</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Token\u5408\u5e76\uff0c\u51cf\u5c11\u5e8f\u5217\u957f\u5ea6&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ratio</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ratio</span> <span class=\"o\">=</span> <span class=\"n\">ratio</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tokens</span><span class=\"p\">,</span> <span class=\"n\">scores</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"c1\"># tokens: [B, N, D]</span>\n        <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"n\">tokens</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n        <span class=\"n\">num_keep</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">N</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ratio</span><span class=\"p\">))</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">scores</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u57fa\u4e8e\u76f8\u4f3c\u5ea6\u7684\u5408\u5e76</span>\n            <span class=\"n\">similarity</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cdist</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">,</span> <span class=\"n\">tokens</span><span class=\"p\">)</span>\n            <span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">similarity</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># \u5e73\u5747\u76f8\u4f3c\u5ea6</span>\n\n        <span class=\"c1\"># \u4fdd\u7559\u91cd\u8981tokens</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">scores</span><span class=\"o\">.</span><span class=\"n\">topk</span><span class=\"p\">(</span><span class=\"n\">num_keep</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">kept_tokens</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">gather</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">indices</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expand</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">D</span><span class=\"p\">))</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">kept_tokens</span>\n</code></pre></div>\n\n<h3 id=\"544\">5.4.4 \u52a8\u4f5c\u8bc6\u522b\u4e0e\u4e8b\u4ef6\u5b9a\u4f4d</h3>\n<p>\u52a8\u4f5c\u8bc6\u522b\u548c\u65f6\u5e8f\u5b9a\u4f4d\u662f\u89c6\u9891\u7406\u89e3\u7684\u6838\u5fc3\u4efb\u52a1\uff0c\u9700\u8981\u7cbe\u786e\u6355\u83b7\u52a8\u4f5c\u8fb9\u754c\u548c\u8bed\u4e49\u3002</p>\n<p><strong>\u53cc\u6d41\u7f51\u7edc\uff08Two-Stream\uff09\u67b6\u6784</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">TwoStreamNetwork</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;RGB\u6d41 + \u5149\u6d41\u6d41\u7684\u7ecf\u5178\u67b6\u6784&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">num_classes</span><span class=\"o\">=</span><span class=\"mi\">400</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"c1\"># RGB\u6d41\uff1a\u5916\u89c2\u4fe1\u606f</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rgb_stream</span> <span class=\"o\">=</span> <span class=\"n\">ResNet3D</span><span class=\"p\">(</span><span class=\"n\">input_channels</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5149\u6d41\u6d41\uff1a\u8fd0\u52a8\u4fe1\u606f</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">flow_stream</span> <span class=\"o\">=</span> <span class=\"n\">ResNet3D</span><span class=\"p\">(</span><span class=\"n\">input_channels</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># (u, v)</span>\n\n        <span class=\"c1\"># \u878d\u5408\u5c42</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">512</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">512</span><span class=\"p\">),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ReLU</span><span class=\"p\">(),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Dropout</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">512</span><span class=\"p\">,</span> <span class=\"n\">num_classes</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">rgb_frames</span><span class=\"p\">,</span> <span class=\"n\">flow_frames</span><span class=\"p\">):</span>\n        <span class=\"n\">rgb_feat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rgb_stream</span><span class=\"p\">(</span><span class=\"n\">rgb_frames</span><span class=\"p\">)</span>\n        <span class=\"n\">flow_feat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">flow_stream</span><span class=\"p\">(</span><span class=\"n\">flow_frames</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u665a\u671f\u878d\u5408</span>\n        <span class=\"n\">fused</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">([</span><span class=\"n\">rgb_feat</span><span class=\"p\">,</span> <span class=\"n\">flow_feat</span><span class=\"p\">],</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion</span><span class=\"p\">(</span><span class=\"n\">fused</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u65f6\u5e8f\u52a8\u4f5c\u5b9a\u4f4d\uff08TAL\uff09</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">TemporalActionLocalization</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u65f6\u5e8f\u52a8\u4f5c\u5b9a\u4f4d\uff0c\u8f93\u51fa\u52a8\u4f5c\u7c7b\u522b\u548c\u65f6\u95f4\u8fb9\u754c&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">num_classes</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">backbone</span> <span class=\"o\">=</span> <span class=\"n\">I3D</span><span class=\"p\">()</span>  <span class=\"c1\"># 3D CNN backbone</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">classifier</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Conv1d</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"n\">num_classes</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">regressor</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Conv1d</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># \u8d77\u6b62\u65f6\u95f4\u56de\u5f52</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">video</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u63d0\u53d6\u65f6\u5e8f\u7279\u5f81</span>\n        <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">backbone</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, C, T]</span>\n\n        <span class=\"c1\"># \u9010\u5e27\u5206\u7c7b</span>\n        <span class=\"n\">class_scores</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">classifier</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, num_classes, T]</span>\n\n        <span class=\"c1\"># \u8fb9\u754c\u56de\u5f52</span>\n        <span class=\"n\">boundaries</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">regressor</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, 2, T]</span>\n        <span class=\"n\">start_offsets</span> <span class=\"o\">=</span> <span class=\"n\">boundaries</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">end_offsets</span> <span class=\"o\">=</span> <span class=\"n\">boundaries</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;class_scores&#39;</span><span class=\"p\">:</span> <span class=\"n\">class_scores</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;start_offsets&#39;</span><span class=\"p\">:</span> <span class=\"n\">start_offsets</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;end_offsets&#39;</span><span class=\"p\">:</span> <span class=\"n\">end_offsets</span>\n        <span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u52a8\u4f5c\u8d28\u91cf\u8bc4\u4f30\uff08AQA\uff09</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ActionQualityAssessment</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u8bc4\u4f30\u52a8\u4f5c\u6267\u884c\u8d28\u91cf\uff0c\u5982\u4f53\u64cd\u3001\u8df3\u6c34\u8bc4\u5206&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span> <span class=\"o\">=</span> <span class=\"n\">VideoEncoder</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u591a\u4efb\u52a1\u5934</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">score_head</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># \u5206\u6570\u56de\u5f52</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rank_head</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">)</span>  <span class=\"c1\"># \u6392\u5e8f\u5b66\u4e60</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">video</span><span class=\"p\">,</span> <span class=\"n\">pairs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u76f4\u63a5\u5206\u6570\u9884\u6d4b</span>\n        <span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">score_head</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u76f8\u5bf9\u6392\u5e8f\u5b66\u4e60</span>\n        <span class=\"k\">if</span> <span class=\"n\">pairs</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">feat_a</span><span class=\"p\">,</span> <span class=\"n\">feat_b</span> <span class=\"o\">=</span> <span class=\"n\">pairs</span>\n            <span class=\"n\">rank_a</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rank_head</span><span class=\"p\">(</span><span class=\"n\">feat_a</span><span class=\"p\">)</span>\n            <span class=\"n\">rank_b</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rank_head</span><span class=\"p\">(</span><span class=\"n\">feat_b</span><span class=\"p\">)</span>\n            <span class=\"n\">margin</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">sigmoid</span><span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">rank_a</span> <span class=\"o\">-</span> <span class=\"n\">rank_b</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"n\">scores</span><span class=\"p\">,</span> <span class=\"n\">margin</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">scores</span>\n</code></pre></div>\n\n<p><strong>\u5b9e\u9a8c\u4f18\u5316\u8981\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u9884\u8bad\u7ec3\u521d\u59cb\u5316\uff1aKinetics-400/600 \u9884\u8bad\u7ec3\u6743\u91cd</li>\n<li>\u591a\u5c3a\u5ea6\u6d4b\u8bd5\uff1a1x, 1.25x, 1.5x \u5c3a\u5ea6\u878d\u5408</li>\n<li>\u65f6\u5e8f\u589e\u5f3a\uff1a\u901f\u5ea6\u6270\u52a8 [0.5x, 2x]</li>\n<li>\u7c7b\u522b\u5e73\u8861\uff1aFocal Loss \u5904\u7406\u957f\u5c3e\u5206\u5e03</li>\n</ul>\n<h2 id=\"55\">5.5 \u8de8\u6a21\u6001\u6ce8\u610f\u529b\u673a\u5236\u8bbe\u8ba1</h2>\n<p>\u8de8\u6a21\u6001\u6ce8\u610f\u529b\u662f\u591a\u6a21\u6001\u6a21\u578b\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u51b3\u5b9a\u4e86\u4e0d\u540c\u6a21\u6001\u4fe1\u606f\u5982\u4f55\u6709\u6548\u4ea4\u4e92\u548c\u878d\u5408\u3002\u8bbe\u8ba1\u9ad8\u6548\u7684\u8de8\u6a21\u6001\u6ce8\u610f\u529b\u673a\u5236\u9700\u8981\u5e73\u8861\u8868\u8fbe\u80fd\u529b\u3001\u8ba1\u7b97\u6548\u7387\u548c\u8bad\u7ec3\u7a33\u5b9a\u6027\u3002</p>\n<h3 id=\"551-vs\">5.5.1 \u65e9\u671f\u878d\u5408 vs \u665a\u671f\u878d\u5408</h3>\n<p>\u878d\u5408\u65f6\u673a\u7684\u9009\u62e9\u6df1\u523b\u5f71\u54cd\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\u548c\u8ba1\u7b97\u6548\u7387\uff1a</p>\n<p><strong>\u878d\u5408\u7b56\u7565\u5bf9\u6bd4</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">\u65e9\u671f\u878d\u5408</span><span class=\"err\">\uff08</span><span class=\"n\">Early</span><span class=\"w\"> </span><span class=\"k\">Fusion</span><span class=\"err\">\uff09\uff1a</span>\n<span class=\"n\">\u8f93\u5165\u5c42</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Concat/Add</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">\u7edf\u4e00\u5904\u7406</span>\n<span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"n\">\u4f18\u70b9</span><span class=\"err\">\uff1a</span><span class=\"n\">\u5145\u5206\u4ea4\u4e92</span><span class=\"err\">\uff0c</span><span class=\"n\">\u53c2\u6570\u5171\u4eab</span>\n<span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"n\">\u7f3a\u70b9</span><span class=\"err\">\uff1a</span><span class=\"n\">\u6a21\u6001\u5dee\u5f02\u5927</span><span class=\"err\">\uff0c</span><span class=\"n\">\u4f18\u5316\u56f0\u96be</span>\n<span class=\"err\">\u2514\u2500\u2500</span><span class=\"w\"> </span><span class=\"n\">\u9002\u7528</span><span class=\"err\">\uff1a</span><span class=\"n\">\u6a21\u6001\u76f8\u4f3c\u5ea6\u9ad8\u7684\u4efb\u52a1</span>\n\n<span class=\"n\">\u665a\u671f\u878d\u5408</span><span class=\"err\">\uff08</span><span class=\"n\">Late</span><span class=\"w\"> </span><span class=\"k\">Fusion</span><span class=\"err\">\uff09\uff1a</span>\n<span class=\"n\">\u72ec\u7acb\u7f16\u7801</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">\u9ad8\u5c42\u7279\u5f81</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">Fusion</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">\u8f93\u51fa</span>\n<span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"n\">\u4f18\u70b9</span><span class=\"err\">\uff1a</span><span class=\"n\">\u6a21\u5757\u5316</span><span class=\"err\">\uff0c</span><span class=\"n\">\u6613\u4e8e\u4f18\u5316</span>\n<span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"n\">\u7f3a\u70b9</span><span class=\"err\">\uff1a</span><span class=\"n\">\u4ea4\u4e92\u4e0d\u5145\u5206</span><span class=\"err\">\uff0c</span><span class=\"n\">\u53c2\u6570\u5197\u4f59</span>\n<span class=\"err\">\u2514\u2500\u2500</span><span class=\"w\"> </span><span class=\"n\">\u9002\u7528</span><span class=\"err\">\uff1a</span><span class=\"n\">\u6a21\u6001\u72ec\u7acb\u6027\u5f3a\u7684\u4efb\u52a1</span>\n\n<span class=\"n\">\u6e10\u8fdb\u878d\u5408</span><span class=\"err\">\uff08</span><span class=\"n\">Progressive</span><span class=\"w\"> </span><span class=\"k\">Fusion</span><span class=\"err\">\uff09\uff1a</span>\n<span class=\"n\">\u591a\u5c42\u7ea7\u878d\u5408</span><span class=\"err\">\uff0c</span><span class=\"n\">\u9010\u6b65\u52a0\u6df1\u4ea4\u4e92</span>\n<span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"n\">\u4f18\u70b9</span><span class=\"err\">\uff1a</span><span class=\"n\">\u5e73\u8861\u65e9\u671f\u548c\u665a\u671f\u4f18\u52bf</span>\n<span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"n\">\u7f3a\u70b9</span><span class=\"err\">\uff1a</span><span class=\"n\">\u67b6\u6784\u590d\u6742</span><span class=\"err\">\uff0c</span><span class=\"n\">\u8c03\u53c2\u56f0\u96be</span>\n<span class=\"err\">\u2514\u2500\u2500</span><span class=\"w\"> </span><span class=\"n\">\u9002\u7528</span><span class=\"err\">\uff1a</span><span class=\"n\">\u590d\u6742\u591a\u6a21\u6001\u7406\u89e3\u4efb\u52a1</span>\n</code></pre></div>\n\n<p><strong>\u65e9\u671f\u878d\u5408\u5b9e\u73b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">EarlyFusion</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u65e9\u671f\u878d\u5408\uff1a\u76f4\u63a5\u62fc\u63a5\u8f93\u5165&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vision_dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"n\">text_dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"n\">hidden_dim</span><span class=\"o\">=</span><span class=\"mi\">1024</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"c1\"># \u6295\u5f71\u5230\u76f8\u540c\u7ef4\u5ea6</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vision_proj</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">vision_dim</span><span class=\"p\">,</span> <span class=\"n\">hidden_dim</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_proj</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">text_dim</span><span class=\"p\">,</span> <span class=\"n\">hidden_dim</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u878d\u5408\u540e\u7684\u5904\u7406</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion_layers</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">TransformerEncoder</span><span class=\"p\">(</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">TransformerEncoderLayer</span><span class=\"p\">(</span><span class=\"n\">hidden_dim</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">nhead</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">),</span>\n            <span class=\"n\">num_layers</span><span class=\"o\">=</span><span class=\"mi\">6</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vision_features</span><span class=\"p\">,</span> <span class=\"n\">text_features</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u6295\u5f71</span>\n        <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vision_proj</span><span class=\"p\">(</span><span class=\"n\">vision_features</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, Nv, D]</span>\n        <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_proj</span><span class=\"p\">(</span><span class=\"n\">text_features</span><span class=\"p\">)</span>      <span class=\"c1\"># [B, Nt, D]</span>\n\n        <span class=\"c1\"># \u62fc\u63a5</span>\n        <span class=\"n\">fused</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">([</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">],</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, Nv+Nt, D]</span>\n\n        <span class=\"c1\"># \u7edf\u4e00\u5904\u7406</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion_layers</span><span class=\"p\">(</span><span class=\"n\">fused</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">output</span>\n</code></pre></div>\n\n<p><strong>\u665a\u671f\u878d\u5408\u5b9e\u73b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">LateFusion</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u665a\u671f\u878d\u5408\uff1a\u72ec\u7acb\u5904\u7406\u540e\u878d\u5408&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"c1\"># \u72ec\u7acb\u7f16\u7801\u5668</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vision_encoder</span> <span class=\"o\">=</span> <span class=\"n\">VisionTransformer</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_encoder</span> <span class=\"o\">=</span> <span class=\"n\">TextTransformer</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u878d\u5408\u7b56\u7565</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">768</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ReLU</span><span class=\"p\">(),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Dropout</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">768</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">images</span><span class=\"p\">,</span> <span class=\"n\">texts</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u72ec\u7acb\u7f16\u7801</span>\n        <span class=\"n\">v_out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vision_encoder</span><span class=\"p\">(</span><span class=\"n\">images</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, D]</span>\n        <span class=\"n\">t_out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_encoder</span><span class=\"p\">(</span><span class=\"n\">texts</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>     <span class=\"c1\"># [B, D]</span>\n\n        <span class=\"c1\"># \u9ad8\u5c42\u878d\u5408</span>\n        <span class=\"n\">fused</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion</span><span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">([</span><span class=\"n\">v_out</span><span class=\"p\">,</span> <span class=\"n\">t_out</span><span class=\"p\">],</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">fused</span>\n</code></pre></div>\n\n<p><strong>\u6e10\u8fdb\u878d\u5408\u67b6\u6784</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ProgressiveFusion</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u6e10\u8fdb\u5f0f\u591a\u5c42\u878d\u5408&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">num_layers</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_layers</span> <span class=\"o\">=</span> <span class=\"n\">num_layers</span>\n\n        <span class=\"c1\"># \u6bcf3\u5c42\u8fdb\u884c\u4e00\u6b21\u878d\u5408</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion_points</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vision_layers</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ModuleList</span><span class=\"p\">([</span>\n            <span class=\"n\">TransformerLayer</span><span class=\"p\">(</span><span class=\"mi\">768</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_layers</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_layers</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ModuleList</span><span class=\"p\">([</span>\n            <span class=\"n\">TransformerLayer</span><span class=\"p\">(</span><span class=\"mi\">768</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_layers</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u8de8\u6a21\u6001\u878d\u5408\u5c42</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cross_attention</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ModuleList</span><span class=\"p\">([</span>\n            <span class=\"n\">CrossModalAttention</span><span class=\"p\">(</span><span class=\"mi\">768</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion_points</span><span class=\"p\">))</span>\n        <span class=\"p\">])</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">v_input</span><span class=\"p\">,</span> <span class=\"n\">t_input</span><span class=\"p\">):</span>\n        <span class=\"n\">fusion_idx</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_layers</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u72ec\u7acb\u5904\u7406</span>\n            <span class=\"n\">v_input</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vision_layers</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">](</span><span class=\"n\">v_input</span><span class=\"p\">)</span>\n            <span class=\"n\">t_input</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_layers</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">](</span><span class=\"n\">t_input</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u5728\u878d\u5408\u70b9\u8fdb\u884c\u8de8\u6a21\u6001\u4ea4\u4e92</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion_points</span><span class=\"p\">:</span>\n                <span class=\"n\">v_input</span><span class=\"p\">,</span> <span class=\"n\">t_input</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cross_attention</span><span class=\"p\">[</span><span class=\"n\">fusion_idx</span><span class=\"p\">](</span><span class=\"n\">v_input</span><span class=\"p\">,</span> <span class=\"n\">t_input</span><span class=\"p\">)</span>\n                <span class=\"n\">fusion_idx</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">v_input</span><span class=\"p\">,</span> <span class=\"n\">t_input</span>\n</code></pre></div>\n\n<h3 id=\"552\">5.5.2 \u4ea4\u53c9\u6ce8\u610f\u529b\u4f18\u5316</h3>\n<p>\u4ea4\u53c9\u6ce8\u610f\u529b\u662f\u5b9e\u73b0\u6a21\u6001\u95f4\u4fe1\u606f\u4ea4\u6362\u7684\u6838\u5fc3\u673a\u5236\uff1a</p>\n<p><strong>\u6807\u51c6\u4ea4\u53c9\u6ce8\u610f\u529b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CrossModalAttention</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u53cc\u5411\u4ea4\u53c9\u6ce8\u610f\u529b&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"n\">num_heads</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">v2t_attn</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">num_heads</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t2v_attn</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">num_heads</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">norm_v</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">LayerNorm</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">norm_t</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">LayerNorm</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vision</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Vision attending to Text</span>\n        <span class=\"n\">v2t</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">v2t_attn</span><span class=\"p\">(</span>\n            <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">vision</span><span class=\"p\">,</span>\n            <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">text</span><span class=\"p\">,</span>\n            <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">text</span>\n        <span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">vision</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">norm_v</span><span class=\"p\">(</span><span class=\"n\">vision</span> <span class=\"o\">+</span> <span class=\"n\">v2t</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Text attending to Vision</span>\n        <span class=\"n\">t2v</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">t2v_attn</span><span class=\"p\">(</span>\n            <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">text</span><span class=\"p\">,</span>\n            <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">vision</span><span class=\"p\">,</span>\n            <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">vision</span>\n        <span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">norm_t</span><span class=\"p\">(</span><span class=\"n\">text</span> <span class=\"o\">+</span> <span class=\"n\">t2v</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">vision</span><span class=\"p\">,</span> <span class=\"n\">text</span>\n</code></pre></div>\n\n<p><strong>\u7a00\u758f\u4ea4\u53c9\u6ce8\u610f\u529b</strong>\uff08\u964d\u4f4e\u590d\u6742\u5ea6\uff09\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">SparseBlockAttention</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u5757\u7a00\u758f\u6a21\u5f0f\u7684\u4ea4\u53c9\u6ce8\u610f\u529b&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"n\">block_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">block_size</span> <span class=\"o\">=</span> <span class=\"n\">block_size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">):</span>\n        <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">key_value</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n\n        <span class=\"c1\"># \u5c06\u5e8f\u5217\u5206\u5757</span>\n        <span class=\"n\">num_blocks</span> <span class=\"o\">=</span> <span class=\"n\">N</span> <span class=\"o\">//</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">block_size</span>\n        <span class=\"n\">query_blocks</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">num_blocks</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">block_size</span><span class=\"p\">,</span> <span class=\"n\">D</span><span class=\"p\">)</span>\n\n        <span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_blocks</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u6bcf\u4e2aquery\u5757\u53eaattend\u5230\u5bf9\u5e94\u7684key\u5757</span>\n            <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">block_size</span>\n            <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">((</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">block_size</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"p\">)</span>\n\n            <span class=\"n\">q_block</span> <span class=\"o\">=</span> <span class=\"n\">query_blocks</span><span class=\"p\">[:,</span> <span class=\"n\">i</span><span class=\"p\">]</span>  <span class=\"c1\"># [B, block_size, D]</span>\n            <span class=\"n\">kv_block</span> <span class=\"o\">=</span> <span class=\"n\">key_value</span><span class=\"p\">[:,</span> <span class=\"n\">start</span><span class=\"p\">:</span><span class=\"n\">end</span><span class=\"p\">]</span>  <span class=\"c1\"># [B, block_size, D]</span>\n\n            <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span><span class=\"p\">(</span><span class=\"n\">q_block</span><span class=\"p\">,</span> <span class=\"n\">kv_block</span><span class=\"p\">,</span> <span class=\"n\">kv_block</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">outputs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">(</span><span class=\"n\">outputs</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u95e8\u63a7\u4ea4\u53c9\u6ce8\u610f\u529b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">GatedCrossAttention</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u4f7f\u7528\u95e8\u63a7\u673a\u5236\u7684\u4ea4\u53c9\u6ce8\u610f\u529b&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u95e8\u63a7\u7f51\u7edc</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gate_net</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sigmoid</span><span class=\"p\">()</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8ba1\u7b97\u6ce8\u610f\u529b</span>\n        <span class=\"n\">attn_out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u95e8\u63a7\u6743\u91cd</span>\n        <span class=\"n\">gate_input</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">([</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">attn_out</span><span class=\"p\">],</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">gate</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gate_net</span><span class=\"p\">(</span><span class=\"n\">gate_input</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u95e8\u63a7\u8f93\u51fa</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">gate</span> <span class=\"o\">*</span> <span class=\"n\">attn_out</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">gate</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">query</span>\n        <span class=\"k\">return</span> <span class=\"n\">output</span>\n</code></pre></div>\n\n<p><strong>\u5c42\u6b21\u5316\u6ce8\u610f\u529b\u6c60\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">HierarchicalAttentionPooling</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u591a\u7c92\u5ea6\u6ce8\u610f\u529b\u6c60\u5316&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"n\">num_levels</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_levels</span> <span class=\"o\">=</span> <span class=\"n\">num_levels</span>\n\n        <span class=\"c1\"># \u4e0d\u540c\u7c92\u5ea6\u7684\u6c60\u5316\u5934</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pool_heads</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ModuleList</span><span class=\"p\">([</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">dim</span> <span class=\"o\">//</span> <span class=\"n\">num_levels</span><span class=\"p\">)</span> \n            <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_levels</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u7c92\u5ea6\u7279\u5b9a\u7684\u6ce8\u610f\u529b</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">level_attention</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ModuleList</span><span class=\"p\">([</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span> <span class=\"o\">//</span> <span class=\"n\">num_levels</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_levels</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">features</span><span class=\"p\">):</span>\n        <span class=\"c1\"># features: [B, N, D]</span>\n        <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n\n        <span class=\"n\">pooled_features</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_levels</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u4e0d\u540c\u6b65\u957f\u7684\u6c60\u5316</span>\n            <span class=\"n\">stride</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">**</span> <span class=\"n\">i</span>\n            <span class=\"n\">pooled</span> <span class=\"o\">=</span> <span class=\"n\">features</span><span class=\"p\">[:,</span> <span class=\"p\">::</span><span class=\"n\">stride</span><span class=\"p\">]</span>  <span class=\"c1\"># \u964d\u91c7\u6837</span>\n\n            <span class=\"c1\"># \u6295\u5f71\u5230\u5b50\u7a7a\u95f4</span>\n            <span class=\"n\">pooled</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pool_heads</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">](</span><span class=\"n\">pooled</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u5c42\u7ea7\u5185\u6ce8\u610f\u529b</span>\n            <span class=\"n\">attended</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">level_attention</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">](</span><span class=\"n\">pooled</span><span class=\"p\">,</span> <span class=\"n\">pooled</span><span class=\"p\">,</span> <span class=\"n\">pooled</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">pooled_features</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">attended</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>  <span class=\"c1\"># [B, D/num_levels]</span>\n\n        <span class=\"c1\"># \u62fc\u63a5\u591a\u7c92\u5ea6\u7279\u5f81</span>\n        <span class=\"k\">return</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">(</span><span class=\"n\">pooled_features</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, D]</span>\n</code></pre></div>\n\n<h3 id=\"553-mome\">5.5.3 \u6a21\u6001\u4e13\u5bb6\u6df7\u5408\uff08MoME\uff09</h3>\n<p>\u6a21\u6001\u4e13\u5bb6\u6df7\u5408\u901a\u8fc7\u4e3a\u4e0d\u540c\u6a21\u6001\u5206\u914d\u4e13\u95e8\u7684\u5904\u7406\u8def\u5f84\uff0c\u63d0\u5347\u6a21\u578b\u7684\u4e13\u4e1a\u5316\u80fd\u529b\uff1a</p>\n<p><strong>MoME \u67b6\u6784</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ModalityMixtureOfExperts</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u6a21\u6001\u611f\u77e5\u7684\u4e13\u5bb6\u6df7\u5408&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"n\">num_experts</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">num_modalities</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_experts</span> <span class=\"o\">=</span> <span class=\"n\">num_experts</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_modalities</span> <span class=\"o\">=</span> <span class=\"n\">num_modalities</span>\n\n        <span class=\"c1\"># \u4e13\u5bb6\u7f51\u7edc</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">experts</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ModuleList</span><span class=\"p\">([</span>\n            <span class=\"n\">FeedForward</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">dim</span> <span class=\"o\">*</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_experts</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u6a21\u6001\u7279\u5b9a\u7684\u8def\u7531\u7f51\u7edc</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">routers</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ModuleDict</span><span class=\"p\">({</span>\n            <span class=\"s1\">&#39;vision&#39;</span><span class=\"p\">:</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">num_experts</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;text&#39;</span><span class=\"p\">:</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">num_experts</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;audio&#39;</span><span class=\"p\">:</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">num_experts</span><span class=\"p\">)</span>\n        <span class=\"p\">})</span>\n\n        <span class=\"c1\"># Top-k \u9009\u62e9</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">top_k</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">modality</span><span class=\"o\">=</span><span class=\"s1\">&#39;vision&#39;</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8ba1\u7b97\u8def\u7531\u6743\u91cd</span>\n        <span class=\"n\">router</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">routers</span><span class=\"p\">[</span><span class=\"n\">modality</span><span class=\"p\">]</span>\n        <span class=\"n\">routing_weights</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">router</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)),</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, num_experts]</span>\n\n        <span class=\"c1\"># \u9009\u62e9 top-k \u4e13\u5bb6</span>\n        <span class=\"n\">top_k_weights</span><span class=\"p\">,</span> <span class=\"n\">top_k_indices</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">topk</span><span class=\"p\">(</span><span class=\"n\">routing_weights</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">top_k</span><span class=\"p\">)</span>\n        <span class=\"n\">top_k_weights</span> <span class=\"o\">=</span> <span class=\"n\">top_k_weights</span> <span class=\"o\">/</span> <span class=\"n\">top_k_weights</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">keepdim</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5e94\u7528\u4e13\u5bb6</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">top_k</span><span class=\"p\">):</span>\n            <span class=\"n\">expert_idx</span> <span class=\"o\">=</span> <span class=\"n\">top_k_indices</span><span class=\"p\">[:,</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n            <span class=\"n\">weight</span> <span class=\"o\">=</span> <span class=\"n\">top_k_weights</span><span class=\"p\">[:,</span> <span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u6279\u91cf\u5904\u7406\u6bcf\u4e2a\u4e13\u5bb6</span>\n            <span class=\"k\">for</span> <span class=\"n\">b</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)):</span>\n                <span class=\"n\">expert</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">experts</span><span class=\"p\">[</span><span class=\"n\">expert_idx</span><span class=\"p\">[</span><span class=\"n\">b</span><span class=\"p\">]]</span>\n                <span class=\"n\">output</span><span class=\"p\">[</span><span class=\"n\">b</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">weight</span><span class=\"p\">[</span><span class=\"n\">b</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">expert</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">b</span><span class=\"p\">])</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">output</span>\n</code></pre></div>\n\n<p><strong>\u52a8\u6001\u4e13\u5bb6\u5206\u914d</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">DynamicExpertAllocation</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u57fa\u4e8e\u8f93\u5165\u5185\u5bb9\u52a8\u6001\u5206\u914d\u4e13\u5bb6&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"n\">num_experts</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_experts</span> <span class=\"o\">=</span> <span class=\"n\">num_experts</span>\n\n        <span class=\"c1\"># \u4e13\u5bb6\u6c60</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">experts</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ModuleList</span><span class=\"p\">([</span>\n            <span class=\"n\">TransformerBlock</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_experts</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u8d1f\u8f7d\u5747\u8861\u635f\u5931\u6743\u91cd</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_balance_weight</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>\n\n        <span class=\"c1\"># \u8def\u7531\u7f51\u7edc</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">router</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">dim</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ReLU</span><span class=\"p\">(),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">num_experts</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u6bcf\u4e2atoken\u7684\u8def\u7531</span>\n        <span class=\"n\">router_logits</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">router</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, N, num_experts]</span>\n        <span class=\"n\">router_probs</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">router_logits</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Gumbel-Softmax \u91c7\u6837\uff08\u8bad\u7ec3\u65f6\uff09</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">training</span><span class=\"p\">:</span>\n            <span class=\"n\">router_probs</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">gumbel_softmax</span><span class=\"p\">(</span><span class=\"n\">router_logits</span><span class=\"p\">,</span> <span class=\"n\">tau</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">hard</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8d1f\u8f7d\u5747\u8861\u635f\u5931</span>\n        <span class=\"n\">expert_usage</span> <span class=\"o\">=</span> <span class=\"n\">router_probs</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">B</span> <span class=\"o\">*</span> <span class=\"n\">N</span><span class=\"p\">)</span>\n        <span class=\"n\">load_balance_loss</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_balance_weight</span> <span class=\"o\">*</span> <span class=\"p\">(</span>\n            <span class=\"n\">expert_usage</span><span class=\"o\">.</span><span class=\"n\">var</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mf\">1.0</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_experts</span> <span class=\"o\">-</span> <span class=\"n\">expert_usage</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5e94\u7528\u4e13\u5bb6</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">expert</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">experts</span><span class=\"p\">):</span>\n            <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">router_probs</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">i</span><span class=\"p\">:</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span>  <span class=\"c1\"># [B, N, 1]</span>\n            <span class=\"n\">output</span> <span class=\"o\">+=</span> <span class=\"n\">mask</span> <span class=\"o\">*</span> <span class=\"n\">expert</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">load_balance_loss</span>\n</code></pre></div>\n\n<p><strong>\u6a21\u6001\u7279\u5b9a\u4e13\u5bb6\u8bbe\u8ba1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ModalitySpecificExperts</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u4e3a\u6bcf\u4e2a\u6a21\u6001\u8bbe\u8ba1\u4e13\u95e8\u7684\u4e13\u5bb6&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u89c6\u89c9\u4e13\u5bb6\uff1a\u64c5\u957f\u7a7a\u95f4\u5173\u7cfb</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vision_expert</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span>\n            <span class=\"n\">Conv2dAdapter</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">),</span>  <span class=\"c1\"># 2D \u5377\u79ef\u9002\u914d</span>\n            <span class=\"n\">SpatialAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">),</span>\n            <span class=\"n\">FeedForward</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">dim</span> <span class=\"o\">*</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6587\u672c\u4e13\u5bb6\uff1a\u64c5\u957f\u5e8f\u5217\u5efa\u6a21</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_expert</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span>\n            <span class=\"n\">PositionalEncoding</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">),</span>\n            <span class=\"n\">CausalAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">),</span>  <span class=\"c1\"># \u56e0\u679c\u6ce8\u610f\u529b</span>\n            <span class=\"n\">FeedForward</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">dim</span> <span class=\"o\">*</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u97f3\u9891\u4e13\u5bb6\uff1a\u64c5\u957f\u65f6\u9891\u5206\u6790</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">audio_expert</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span>\n            <span class=\"n\">SpectralGating</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">),</span>  <span class=\"c1\"># \u9891\u57df\u95e8\u63a7</span>\n            <span class=\"n\">TemporalConvNet</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">),</span>\n            <span class=\"n\">FeedForward</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">dim</span> <span class=\"o\">*</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u901a\u7528\u4e13\u5bb6\uff1a\u5904\u7406\u8de8\u6a21\u6001\u4fe1\u606f</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">general_expert</span> <span class=\"o\">=</span> <span class=\"n\">TransformerBlock</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">modality_mask</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        modality_mask: [B, N] \u6307\u793a\u6bcf\u4e2atoken\u7684\u6a21\u6001</span>\n<span class=\"sd\">        0: vision, 1: text, 2: audio, 3: mixed</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5e94\u7528\u6a21\u6001\u7279\u5b9a\u4e13\u5bb6</span>\n        <span class=\"k\">for</span> <span class=\"n\">modality</span><span class=\"p\">,</span> <span class=\"n\">expert</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">([</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vision_expert</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_expert</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">audio_expert</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">general_expert</span>\n        <span class=\"p\">]):</span>\n            <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">modality_mask</span> <span class=\"o\">==</span> <span class=\"n\">modality</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">output</span> <span class=\"o\">+=</span> <span class=\"n\">mask</span> <span class=\"o\">*</span> <span class=\"n\">expert</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">output</span>\n</code></pre></div>\n\n<h3 id=\"554\">5.5.4 \u8ba1\u7b97\u6548\u7387\u4f18\u5316</h3>\n<p>\u8de8\u6a21\u6001\u6ce8\u610f\u529b\u7684\u8ba1\u7b97\u5f00\u9500\u5de8\u5927\uff0c\u4f18\u5316\u7b56\u7565\u81f3\u5173\u91cd\u8981\uff1a</p>\n<p><strong>Flash Attention \u96c6\u6210</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">FlashCrossAttention</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u4f7f\u7528 Flash Attention \u7684\u8de8\u6a21\u6001\u6ce8\u610f\u529b&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"n\">num_heads</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_heads</span> <span class=\"o\">=</span> <span class=\"n\">num_heads</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">head_dim</span> <span class=\"o\">=</span> <span class=\"n\">dim</span> <span class=\"o\">//</span> <span class=\"n\">num_heads</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">q_proj</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kv_proj</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">dim</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">out_proj</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">):</span>\n        <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">key_value</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n\n        <span class=\"c1\"># \u6295\u5f71</span>\n        <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">q_proj</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_heads</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">head_dim</span><span class=\"p\">)</span>\n        <span class=\"n\">kv</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kv_proj</span><span class=\"p\">(</span><span class=\"n\">key_value</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_heads</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">head_dim</span><span class=\"p\">)</span>\n        <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">kv</span><span class=\"o\">.</span><span class=\"n\">unbind</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Flash Attention (\u9700\u8981\u7279\u5b9a\u786c\u4ef6\u652f\u6301)</span>\n        <span class=\"k\">if</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"o\">.</span><span class=\"n\">is_available</span><span class=\"p\">():</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">flash_attn</span> <span class=\"kn\">import</span> <span class=\"n\">flash_attn_func</span>\n            <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">flash_attn_func</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">dropout_p</span><span class=\"o\">=</span><span class=\"mf\">0.1</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">training</span> <span class=\"k\">else</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Fallback to standard attention</span>\n            <span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">head_dim</span><span class=\"p\">)</span>\n            <span class=\"n\">attn</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">scores</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">attn</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n\n        <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">out_proj</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u4f4e\u79e9\u5206\u89e3\u4f18\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">LowRankCrossAttention</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u4f4e\u79e9\u5206\u89e3\u7684\u4ea4\u53c9\u6ce8\u610f\u529b&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">,</span> <span class=\"n\">rank</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rank</span> <span class=\"o\">=</span> <span class=\"n\">rank</span>\n\n        <span class=\"c1\"># \u4f4e\u79e9\u6295\u5f71</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">q_down</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">rank</span><span class=\"p\">,</span> <span class=\"n\">bias</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">q_up</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">rank</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">bias</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kv_down</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">rank</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">bias</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kv_up</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">rank</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">dim</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">bias</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6807\u51c6\u6ce8\u610f\u529b\uff08\u4f4e\u7ef4\uff09</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">rank</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u964d\u7ef4</span>\n        <span class=\"n\">q_low</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">q_down</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, N, rank]</span>\n        <span class=\"n\">kv_low</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kv_down</span><span class=\"p\">(</span><span class=\"n\">key_value</span><span class=\"p\">)</span>  <span class=\"c1\"># [B, M, rank*2]</span>\n        <span class=\"n\">k_low</span><span class=\"p\">,</span> <span class=\"n\">v_low</span> <span class=\"o\">=</span> <span class=\"n\">kv_low</span><span class=\"o\">.</span><span class=\"n\">chunk</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u4f4e\u7ef4\u6ce8\u610f\u529b</span>\n        <span class=\"n\">attn_out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span><span class=\"p\">(</span><span class=\"n\">q_low</span><span class=\"p\">,</span> <span class=\"n\">k_low</span><span class=\"p\">,</span> <span class=\"n\">v_low</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u5347\u7ef4</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">q_up</span><span class=\"p\">(</span><span class=\"n\">attn_out</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6b8b\u5dee\u8fde\u63a5</span>\n        <span class=\"k\">return</span> <span class=\"n\">output</span> <span class=\"o\">+</span> <span class=\"n\">query</span>\n</code></pre></div>\n\n<p><strong>\u8ba1\u7b97\u590d\u7528\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ComputeReuseAttention</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u590d\u7528\u8ba1\u7b97\u7ed3\u679c\u7684\u6ce8\u610f\u529b&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cache</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">,</span> <span class=\"n\">cache_key</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">cache_key</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">cache_key</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u590d\u7528\u7f13\u5b58\u7684key/value\u6295\u5f71</span>\n            <span class=\"n\">k_cached</span><span class=\"p\">,</span> <span class=\"n\">v_cached</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">[</span><span class=\"n\">cache_key</span><span class=\"p\">]</span>\n            <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span><span class=\"o\">.</span><span class=\"n\">forward</span><span class=\"p\">(</span>\n                <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">query</span><span class=\"p\">,</span>\n                <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">k_cached</span><span class=\"p\">,</span>\n                <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">v_cached</span><span class=\"p\">,</span>\n                <span class=\"n\">need_weights</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n            <span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6b63\u5e38\u8ba1\u7b97</span>\n            <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n            <span class=\"c1\"># \u7f13\u5b58\u4e2d\u95f4\u7ed3\u679c</span>\n            <span class=\"k\">if</span> <span class=\"n\">cache_key</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n                    <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span><span class=\"o\">.</span><span class=\"n\">in_proj_weight</span><span class=\"p\">[:</span><span class=\"n\">dim</span><span class=\"p\">]</span> <span class=\"o\">@</span> <span class=\"n\">key_value</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n                    <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span><span class=\"o\">.</span><span class=\"n\">in_proj_weight</span><span class=\"p\">[</span><span class=\"n\">dim</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">dim</span><span class=\"p\">]</span> <span class=\"o\">@</span> <span class=\"n\">key_value</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">[</span><span class=\"n\">cache_key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">output</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clear_cache</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<p><strong>\u91cf\u5316\u611f\u77e5\u8bad\u7ec3</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">QuantizedCrossAttention</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u652f\u6301\u91cf\u5316\u7684\u4ea4\u53c9\u6ce8\u610f\u529b&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">qconfig</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">quantization</span><span class=\"o\">.</span><span class=\"n\">get_default_qconfig</span><span class=\"p\">(</span><span class=\"s1\">&#39;fbgemm&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u91cf\u5316\u611f\u77e5\u5c42</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">quant</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">quantization</span><span class=\"o\">.</span><span class=\"n\">QuantStub</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dequant</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">quantization</span><span class=\"o\">.</span><span class=\"n\">DeQuantStub</span><span class=\"p\">()</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">MultiheadAttention</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u91cf\u5316\u8f93\u5165</span>\n        <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">quant</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span>\n        <span class=\"n\">key_value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">quant</span><span class=\"p\">(</span><span class=\"n\">key_value</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6267\u884c\u6ce8\u610f\u529b\uff08\u91cf\u5316\uff09</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attention</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u53cd\u91cf\u5316\u8f93\u51fa</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dequant</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">output</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">prepare_quantization</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u51c6\u5907\u91cf\u5316&quot;&quot;&quot;</span>\n        <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">quantization</span><span class=\"o\">.</span><span class=\"n\">prepare_qat</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">convert_quantization</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8f6c\u6362\u4e3a\u91cf\u5316\u6a21\u578b&quot;&quot;&quot;</span>\n        <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">quantization</span><span class=\"o\">.</span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h2 id=\"_2\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u7cfb\u7edf\u4ecb\u7ecd\u4e86\u591a\u6a21\u6001\u4efb\u52a1\u7684\u5b9e\u9a8c\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u6db5\u76d6\u4e86\u4ece\u57fa\u7840\u7684\u89c6\u89c9-\u8bed\u8a00\u5bf9\u9f50\u5230\u590d\u6742\u7684\u8de8\u6a21\u6001\u6ce8\u610f\u529b\u673a\u5236\u8bbe\u8ba1\u3002\u6838\u5fc3\u8981\u70b9\u5305\u62ec\uff1a</p>\n<p><strong>\ud83d\udccc \u5173\u952e\u6982\u5ff5\u56de\u987e</strong>\uff1a</p>\n<ol>\n<li><strong>\u89c6\u89c9-\u8bed\u8a00\u5bf9\u9f50</strong>\uff1aCLIP \u7684\u5bf9\u6bd4\u5b66\u4e60\u8303\u5f0f\u5960\u5b9a\u57fa\u7840\uff0c\u5173\u952e\u5728\u4e8e\u5927\u6279\u91cf\u8bad\u7ec3\u548c\u6e29\u5ea6\u53c2\u6570\u8c03\u4f18</li>\n<li><strong>\u7edf\u4e00\u5efa\u6a21\u67b6\u6784</strong>\uff1aPerceiver Resampler \u7b49\u8fde\u63a5\u5c42\u8bbe\u8ba1\u5b9e\u73b0\u4e86\u9ad8\u6548\u7684\u6a21\u6001\u6865\u63a5</li>\n<li><strong>\u97f3\u9891\u96c6\u6210\u7b56\u7565</strong>\uff1a\u65f6\u9891\u57df\u7279\u5f81\u878d\u5408\u4e0e\u5c42\u6b21\u5316\u7f16\u7801\u5904\u7406\u591a\u6837\u5316\u97f3\u9891\u4fe1\u53f7</li>\n<li><strong>\u89c6\u9891\u65f6\u5e8f\u5efa\u6a21</strong>\uff1a\u5e27\u91c7\u6837\u7b56\u7565\u4e0e\u65f6\u7a7a\u6ce8\u610f\u529b\u5206\u89e3\u5e73\u8861\u6548\u7387\u4e0e\u6548\u679c</li>\n<li><strong>\u8de8\u6a21\u6001\u6ce8\u610f\u529b</strong>\uff1a\u65e9\u671fvs\u665a\u671f\u878d\u5408\u3001MoME\u4e13\u5bb6\u6df7\u5408\u3001\u8ba1\u7b97\u6548\u7387\u4f18\u5316</li>\n</ol>\n<p><strong>\ud83d\udca1 \u5b9e\u7528\u516c\u5f0f\u603b\u7ed3</strong>\uff1a</p>\n<ul>\n<li>InfoNCE \u635f\u5931\uff1a$\\mathcal{L} = -\\log \\frac{\\exp(s_{ii}/\\tau)}{\\sum_j \\exp(s_{ij}/\\tau)}$</li>\n<li>\u65f6\u7a7a\u590d\u6742\u5ea6\u4f18\u5316\uff1a$O(T^2S^2) \\rightarrow O(T^2 + S^2)$</li>\n<li>\u8d1f\u8f7d\u5747\u8861\u7ea6\u675f\uff1a$\\mathcal{L}_{balance} = \\text{Var}(usage) + ||\\frac{1}{K} - usage||_1$</li>\n</ul>\n<p><strong>\ud83d\udd2c \u8fdb\u9636\u63a2\u7d22\u65b9\u5411</strong>\uff1a</p>\n<ul>\n<li>3D \u89c6\u89c9\u7406\u89e3\u7684\u591a\u89c6\u89d2\u878d\u5408</li>\n<li>\u5b9e\u65f6\u591a\u6a21\u6001\u6d41\u5904\u7406\u4f18\u5316</li>\n<li>\u795e\u7ecf\u67b6\u6784\u641c\u7d22\uff08NAS\uff09\u7528\u4e8e\u8de8\u6a21\u6001\u8bbe\u8ba1</li>\n<li>\u6a21\u6001\u7f3a\u5931\u60c5\u51b5\u4e0b\u7684\u9c81\u68d2\u63a8\u7406</li>\n</ul>\n<h2 id=\"_3\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_4\">\u57fa\u7840\u9898</h3>\n<p><strong>\u7ec3\u4e60 5.1</strong>\uff1a\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5316\u7248\u7684 CLIP \u6a21\u578b\uff0c\u5305\u62ec\u56fe\u50cf\u7f16\u7801\u5668\u3001\u6587\u672c\u7f16\u7801\u5668\u548c\u5bf9\u6bd4\u635f\u5931\u3002</p>\n<ul>\n<li><em>Hint</em>\uff1a\u4f7f\u7528\u9884\u8bad\u7ec3\u7684 ResNet50 \u548c BERT-base\uff0c\u5173\u6ce8\u6295\u5f71\u5c42\u8bbe\u8ba1</li>\n</ul>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u5173\u952e\u5b9e\u73b0\u8981\u70b9\uff1a</p>\n<ol>\n<li>\u56fe\u50cf\u7f16\u7801\u5668\u8f93\u51fa\u9700\u8981\u5168\u5c40\u6c60\u5316\u5f97\u5230 [B, D] \u7279\u5f81</li>\n<li>\u6587\u672c\u7f16\u7801\u5668\u4f7f\u7528 [CLS] token \u6216\u5e73\u5747\u6c60\u5316</li>\n<li>\u6295\u5f71\u5230\u76f8\u540c\u7ef4\u5ea6\u7a7a\u95f4\uff08\u5982 512\uff09</li>\n<li>\u5bf9\u6bd4\u635f\u5931\u9700\u8981\u8ba1\u7b97 batch \u5185\u6240\u6709\u914d\u5bf9\u7684\u76f8\u4f3c\u5ea6</li>\n<li>\u6e29\u5ea6\u53c2\u6570\u521d\u59cb\u5316\u4e3a 0.07\uff0c\u53ef\u5b66\u4e60</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 5.2</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u5e27\u91c7\u6837\u7b56\u7565\uff0c\u4ece 10 \u5206\u949f\u7684\u89c6\u9891\u4e2d\u91c7\u6837 32 \u5e27\u7528\u4e8e\u52a8\u4f5c\u8bc6\u522b\u3002</p>\n<ul>\n<li><em>Hint</em>\uff1a\u8003\u8651 TSN \u7684\u5206\u6bb5\u91c7\u6837\u601d\u60f3</li>\n</ul>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u5efa\u8bae\u7b56\u7565\uff1a</p>\n<ol>\n<li>\u5c06\u89c6\u9891\u5206\u4e3a 32 \u4e2a\u7b49\u957f\u7247\u6bb5</li>\n<li>\u6bcf\u4e2a\u7247\u6bb5\u968f\u673a\u91c7\u6837 1 \u5e27\uff08\u8bad\u7ec3\u65f6\uff09\u6216\u4e2d\u95f4\u5e27\uff08\u6d4b\u8bd5\u65f6\uff09</li>\n<li>\u5bf9\u4e8e\u52a8\u4f5c\u5bc6\u96c6\u533a\u57df\uff0c\u53ef\u4f7f\u7528\u5149\u6d41\u5e45\u5ea6\u52a0\u6743\u91c7\u6837</li>\n<li>\u4fdd\u6301\u6700\u5c0f 0.5 \u79d2\u95f4\u9694\u907f\u514d\u5197\u4f59</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 5.3</strong>\uff1a\u8ba1\u7b97 ViT-L/14 \u5904\u7406 224\u00d7224 \u56fe\u50cf\u65f6\u4ea7\u751f\u7684 token \u6570\u91cf\u3002</p>\n<ul>\n<li><em>Hint</em>\uff1apatch size = 14</li>\n</ul>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u8ba1\u7b97\u8fc7\u7a0b\uff1a</p>\n<ul>\n<li>\u56fe\u50cf\u5c3a\u5bf8\uff1a224 \u00d7 224</li>\n<li>Patch \u5c3a\u5bf8\uff1a14 \u00d7 14</li>\n<li>\u6bcf\u4e2a\u7ef4\u5ea6\u7684 patch \u6570\uff1a224 / 14 = 16</li>\n<li>\u603b patch \u6570\uff1a16 \u00d7 16 = 256</li>\n<li>\u52a0\u4e0a [CLS] token\uff1a256 + 1 = 257 tokens</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e60 5.4</strong>\uff1a\u6bd4\u8f83\u65e9\u671f\u878d\u5408\u548c\u665a\u671f\u878d\u5408\u5728\u53c2\u6570\u91cf\u548c\u8ba1\u7b97\u91cf\u4e0a\u7684\u5dee\u5f02\u3002</p>\n<ul>\n<li><em>Hint</em>\uff1a\u5047\u8bbe\u89c6\u89c9\u548c\u6587\u672c\u5e8f\u5217\u957f\u5ea6\u5206\u522b\u4e3a Nv \u548c Nt</li>\n</ul>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u5206\u6790\uff1a</p>\n<ul>\n<li>\u65e9\u671f\u878d\u5408\uff1a</li>\n<li>\u5e8f\u5217\u957f\u5ea6\uff1aNv + Nt</li>\n<li>\u81ea\u6ce8\u610f\u529b\u590d\u6742\u5ea6\uff1aO((Nv + Nt)\u00b2)</li>\n<li>\n<p>\u53c2\u6570\u5171\u4eab\uff0c\u603b\u53c2\u6570\u91cf\u8f83\u5c11</p>\n</li>\n<li>\n<p>\u665a\u671f\u878d\u5408\uff1a</p>\n</li>\n<li>\u72ec\u7acb\u5904\u7406\u590d\u6742\u5ea6\uff1aO(Nv\u00b2) + O(Nt\u00b2)</li>\n<li>\u53c2\u6570\u91cf\u7ea6\u4e3a\u65e9\u671f\u878d\u5408\u7684 2 \u500d</li>\n<li>\u5f53 Nv \u2248 Nt \u65f6\uff0c\u8ba1\u7b97\u91cf\u7ea6\u4e3a\u65e9\u671f\u878d\u5408\u7684 50%</li>\n</ul>\n</details>\n<h3 id=\"_5\">\u6311\u6218\u9898</h3>\n<p><strong>\u7ec3\u4e60 5.5</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u81ea\u9002\u5e94\u7684\u6a21\u6001\u4e13\u5bb6\u5206\u914d\u7b56\u7565\uff0c\u6839\u636e\u8f93\u5165\u52a8\u6001\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e9b\u4e13\u5bb6\u3002</p>\n<ul>\n<li><em>Hint</em>\uff1a\u8003\u8651\u7a00\u758f\u6fc0\u6d3b\u548c\u8d1f\u8f7d\u5747\u8861</li>\n</ul>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u8bbe\u8ba1\u8981\u70b9\uff1a</p>\n<ol>\n<li>\u4f7f\u7528\u53ef\u5b66\u4e60\u7684\u8def\u7531\u7f51\u7edc\uff0c\u8f93\u51fa\u6bcf\u4e2a\u4e13\u5bb6\u7684\u5206\u6570</li>\n<li>Top-k \u9009\u62e9\uff08k=2\uff09\uff0c\u4fdd\u6301\u7a00\u758f\u6027</li>\n<li>\u6dfb\u52a0\u8d1f\u8f7d\u5747\u8861\u635f\u5931\uff1a\u9f13\u52b1\u5747\u5300\u4f7f\u7528\u6240\u6709\u4e13\u5bb6</li>\n<li>\u5f15\u5165\u5bb9\u91cf\u9650\u5236\uff1a\u6bcf\u4e2a\u4e13\u5bb6\u5904\u7406\u7684 token \u6570\u4e0a\u9650</li>\n<li>\u4f7f\u7528 Gumbel-Softmax \u5b9e\u73b0\u53ef\u5fae\u5206\u7684\u79bb\u6563\u9009\u62e9</li>\n<li>\u8f85\u52a9\u635f\u5931\uff1a\u6700\u5c0f\u5316\u672a\u4f7f\u7528\u4e13\u5bb6\u7684\u6bd4\u4f8b</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 5.6</strong>\uff1a\u5982\u4f55\u5904\u7406\u89c6\u9891\u4e2d\u7684\u97f3\u753b\u4e0d\u540c\u6b65\u95ee\u9898\uff1f\u8bbe\u8ba1\u4e00\u4e2a\u5bf9\u9f50\u673a\u5236\u3002</p>\n<ul>\n<li><em>Hint</em>\uff1a\u8003\u8651\u5b66\u4e60\u65f6\u95f4\u504f\u79fb</li>\n</ul>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u89e3\u51b3\u65b9\u6848\uff1a</p>\n<ol>\n<li>\u53ef\u5b66\u4e60\u7684\u65f6\u95f4\u504f\u79fb\u9884\u6d4b\u5668\uff0c\u8f93\u51fa\u97f3\u9891\u76f8\u5bf9\u89c6\u9891\u7684\u504f\u79fb\u91cf</li>\n<li>\u4f7f\u7528\u4e92\u76f8\u5173\u8ba1\u7b97\u97f3\u89c6\u9891\u7279\u5f81\u7684\u6700\u4f73\u5bf9\u9f50\u70b9</li>\n<li>\u5faa\u73af\u4e00\u81f4\u6027\u7ea6\u675f\uff1a\u89c6\u9891\u2192\u97f3\u9891\u2192\u89c6\u9891\u5e94\u8be5\u56de\u5230\u539f\u70b9</li>\n<li>\u5bf9\u6bd4\u5b66\u4e60\uff1a\u540c\u6b65\u7684\u97f3\u89c6\u9891\u5bf9\u4f5c\u4e3a\u6b63\u6837\u672c</li>\n<li>\u6ed1\u52a8\u7a97\u53e3\u6ce8\u610f\u529b\uff0c\u5141\u8bb8 \u00b12 \u79d2\u7684\u504f\u79fb\u641c\u7d22</li>\n<li>\u6570\u636e\u589e\u5f3a\uff1a\u8bad\u7ec3\u65f6\u4eba\u4e3a\u5f15\u5165\u65f6\u95f4\u504f\u79fb</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 5.7</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a token \u538b\u7f29\u7b56\u7565\uff0c\u5c06 1024 \u4e2a\u89c6\u89c9 tokens \u538b\u7f29\u5230 64 \u4e2a\u3002</p>\n<ul>\n<li><em>Hint</em>\uff1a\u8003\u8651\u8bed\u4e49\u805a\u7c7b\u548c\u91cd\u8981\u6027\u8bc4\u5206</li>\n</ul>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u65b9\u6848\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li>\u5b66\u4e60 64 \u4e2a\u53ef\u5b66\u4e60\u7684\u805a\u7c7b\u4e2d\u5fc3</li>\n<li>\u8ba1\u7b97\u6bcf\u4e2a token \u5230\u805a\u7c7b\u4e2d\u5fc3\u7684\u76f8\u4f3c\u5ea6</li>\n<li>Soft assignment\uff1a\u6bcf\u4e2a token \u8f6f\u5206\u914d\u5230\u591a\u4e2a\u4e2d\u5fc3</li>\n<li>\u52a0\u6743\u805a\u5408\uff1a\u6839\u636e\u5206\u914d\u6743\u91cd\u805a\u5408 tokens</li>\n<li>\u4fdd\u7559\u90e8\u5206\u539f\u59cb\u91cd\u8981 tokens\uff08\u5982 [CLS]\uff09</li>\n<li>\u6e10\u8fdb\u538b\u7f29\uff1a1024\u2192256\u219264\uff0c\u907f\u514d\u4fe1\u606f\u635f\u5931\u8fc7\u5feb</li>\n<li>\u8f85\u52a9\u91cd\u5efa\u635f\u5931\uff1a\u538b\u7f29\u540e\u5e94\u80fd\u91cd\u5efa\u539f\u59cb\u7279\u5f81</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 5.8</strong>\uff1a\u5982\u4f55\u5728\u4fdd\u6301\u6027\u80fd\u7684\u524d\u63d0\u4e0b\uff0c\u5c06\u8de8\u6a21\u6001\u6ce8\u610f\u529b\u7684\u5185\u5b58\u5360\u7528\u964d\u4f4e 75%\uff1f</p>\n<ul>\n<li><em>Hint</em>\uff1a\u7ed3\u5408\u591a\u79cd\u4f18\u5316\u6280\u672f</li>\n</ul>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u7efc\u5408\u4f18\u5316\u7b56\u7565\uff1a</p>\n<ol>\n<li><strong>Flash Attention</strong>\uff1a\u878d\u5408\u8ba1\u7b97\uff0c\u51cf\u5c11\u4e2d\u95f4\u7ed3\u679c\u5b58\u50a8\uff08-50%\uff09</li>\n<li><strong>\u4f4e\u79e9\u5206\u89e3</strong>\uff1a\u5c06 768 \u7ef4\u964d\u5230 128 \u7ef4\u8ba1\u7b97\uff08-70%\uff09</li>\n<li><strong>\u5757\u7a00\u758f\u6a21\u5f0f</strong>\uff1a\u53ea\u8ba1\u7b97\u5c40\u90e8\u548c\u5168\u5c40\u6ce8\u610f\u529b\uff08-60%\uff09</li>\n<li><strong>\u68af\u5ea6\u68c0\u67e5\u70b9</strong>\uff1a\u7528\u8ba1\u7b97\u6362\u5185\u5b58\uff08-40%\uff09</li>\n<li><strong>\u6df7\u5408\u7cbe\u5ea6</strong>\uff1aFP16 \u8ba1\u7b97\uff0cFP32 \u7d2f\u52a0\uff08-50%\uff09</li>\n<li><strong>KV \u7f13\u5b58\u590d\u7528</strong>\uff1a\u8de8\u5c42\u5171\u4eab key-value\uff08-30%\uff09</li>\n</ol>\n<p>\u7ec4\u5408\u4f7f\u7528\u53ef\u8fbe\u5230 75% \u4ee5\u4e0a\u7684\u5185\u5b58\u8282\u7701\uff0c\u6027\u80fd\u635f\u5931 &lt;2%\u3002</p>\n</details>\n<h2 id=\"_6\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</h2>\n<p>\u26a0\ufe0f <strong>\u5e38\u89c1\u9519\u8bef\u4e0e\u8c03\u8bd5\u6280\u5de7</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6a21\u6001\u4e0d\u5e73\u8861\u95ee\u9898</strong>\n   - \u9519\u8bef\uff1a\u4e00\u4e2a\u6a21\u6001\u4e3b\u5bfc\uff0c\u5176\u4ed6\u6a21\u6001\u88ab\u5ffd\u7565\n   - \u89e3\u51b3\uff1a\u5206\u522b\u8ba1\u7b97\u6bcf\u4e2a\u6a21\u6001\u7684\u68af\u5ea6\u8303\u6570\uff0c\u52a8\u6001\u8c03\u6574\u5b66\u4e60\u7387</p>\n</li>\n<li>\n<p><strong>\u89c6\u89c9 Token \u6570\u91cf\u7206\u70b8</strong>\n   - \u9519\u8bef\uff1a\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\u4ea7\u751f\u8fc7\u591a tokens\n   - \u89e3\u51b3\uff1a\u4f7f\u7528 Perceiver \u964d\u7ef4\u6216\u5206\u5c42\u5904\u7406</p>\n</li>\n<li>\n<p><strong>\u97f3\u89c6\u9891\u4e0d\u540c\u6b65</strong>\n   - \u9519\u8bef\uff1a\u5047\u8bbe\u97f3\u89c6\u9891\u5b8c\u5168\u5bf9\u9f50\n   - \u89e3\u51b3\uff1a\u5141\u8bb8\u53ef\u5b66\u4e60\u7684\u65f6\u95f4\u504f\u79fb\uff0c\u4f7f\u7528 DTW \u5bf9\u9f50</p>\n</li>\n<li>\n<p><strong>\u8d1f\u6837\u672c\u91c7\u6837\u504f\u5dee</strong>\n   - \u9519\u8bef\uff1a\u8d1f\u6837\u672c\u8fc7\u4e8e\u7b80\u5355\u6216\u8fc7\u4e8e\u56f0\u96be\n   - \u89e3\u51b3\uff1a\u7ef4\u62a4\u96be\u5ea6\u5206\u5e03\uff0ccurriculum \u91c7\u6837</p>\n</li>\n<li>\n<p><strong>\u8de8\u6a21\u6001\u68af\u5ea6\u4e0d\u7a33\u5b9a</strong>\n   - \u9519\u8bef\uff1a\u4e0d\u540c\u6a21\u6001\u68af\u5ea6\u5c3a\u5ea6\u5dee\u5f02\u5927\n   - \u89e3\u51b3\uff1a\u5206\u6a21\u6001\u7684 gradient clipping \u548c\u5f52\u4e00\u5316</p>\n</li>\n<li>\n<p><strong>\u63a8\u7406\u901f\u5ea6\u74f6\u9888</strong>\n   - \u9519\u8bef\uff1a\u76f4\u63a5\u4f7f\u7528\u8bad\u7ec3\u67b6\u6784\u90e8\u7f72\n   - \u89e3\u51b3\uff1a\u77e5\u8bc6\u84b8\u998f\u5230\u8f7b\u91cf\u7ea7\u5b66\u751f\u6a21\u578b</p>\n</li>\n<li>\n<p><strong>\u6570\u636e\u6cc4\u9732\u98ce\u9669</strong>\n   - \u9519\u8bef\uff1a\u6d4b\u8bd5\u96c6\u7684\u97f3\u89c6\u9891\u5bf9\u51fa\u73b0\u5728\u8bad\u7ec3\u96c6\n   - \u89e3\u51b3\uff1a\u57fa\u4e8e\u89c6\u9891 ID \u800c\u975e\u5e27\u7ea7\u522b\u5212\u5206\u6570\u636e\u96c6</p>\n</li>\n<li>\n<p><strong>\u8ba1\u7b97\u56fe\u5185\u5b58\u6cc4\u9732</strong>\n   - \u9519\u8bef\uff1a\u4fdd\u5b58\u4e86\u8fc7\u591a\u7684\u4e2d\u95f4\u6fc0\u6d3b\u503c\n   - \u89e3\u51b3\uff1a\u53ca\u65f6 detach()\uff0c\u4f7f\u7528 gradient checkpointing</p>\n</li>\n</ol>"
  },
  "chapter1.md": {
    "hash": "0067e334545c40566142ceef259691e1",
    "content": "<h1 id=\"_1\">\u7b2c\u4e00\u7ae0\uff1a\u540e\u8bad\u7ec3\u57fa\u7840\u7406\u8bba</h1>\n<h2 id=\"_2\">\u5f15\u8a00</h2>\n<p>\u540e\u8bad\u7ec3\uff08Post-training\uff09\u662f\u5c06\u9884\u8bad\u7ec3\u597d\u7684\u5927\u8bed\u8a00\u6a21\u578b\u8f6c\u5316\u4e3a\u5b9e\u7528AI\u52a9\u624b\u7684\u5173\u952e\u6b65\u9aa4\u3002\u4e0d\u540c\u4e8e\u9884\u8bad\u7ec3\u9636\u6bb5\u8ffd\u6c42\u7684\u901a\u7528\u8bed\u8a00\u5efa\u6a21\u80fd\u529b\uff0c\u540e\u8bad\u7ec3\u4e13\u6ce8\u4e8e\u8ba9\u6a21\u578b\u5b66\u4f1a\u9075\u5faa\u4eba\u7c7b\u6307\u4ee4\u3001\u4fdd\u6301\u5b89\u5168\u8f93\u51fa\u3001\u5c55\u73b0\u6709\u7528\u6027\u3002\u672c\u7ae0\u5c06\u6df1\u5165\u63a2\u8ba8\u540e\u8bad\u7ec3\u7684\u7406\u8bba\u57fa\u7840\uff0c\u5305\u62ec\u6838\u5fc3\u65b9\u6cd5\u8bba\u3001\u76ee\u6807\u51fd\u6570\u8bbe\u8ba1\u3001\u4ee5\u53ca\u5b9e\u8df5\u4e2d\u7684\u5173\u952e\u6743\u8861\u3002</p>\n<p><strong>\u5b66\u4e60\u76ee\u6807</strong>\uff1a</p>\n<ul>\n<li>\u7406\u89e3\u540e\u8bad\u7ec3\u4e0e\u9884\u8bad\u7ec3\u7684\u672c\u8d28\u533a\u522b</li>\n<li>\u638c\u63e1SFT\u3001RLHF\u3001DPO\u7b49\u4e3b\u6d41\u65b9\u6cd5\u7684\u6570\u5b66\u539f\u7406</li>\n<li>\u8ba4\u8bc6\u5bf9\u9f50\u7a0e\uff08Alignment Tax\uff09\u53ca\u5176\u5f71\u54cd</li>\n<li>\u5b66\u4f1a\u5206\u6790\u548c\u5904\u7406\u5206\u5e03\u504f\u79fb\u95ee\u9898</li>\n</ul>\n<h2 id=\"11\">1.1 \u540e\u8bad\u7ec3\u7684\u5b9a\u4e49\u4e0e\u52a8\u673a</h2>\n<h3 id=\"111-ai\">1.1.1 \u4ece\u8bed\u8a00\u6a21\u578b\u5230AI\u52a9\u624b</h3>\n<p>\u9884\u8bad\u7ec3\u6a21\u578b\u901a\u8fc7\u5728\u6d77\u91cf\u6587\u672c\u4e0a\u5b66\u4e60\uff0c\u83b7\u5f97\u4e86\u5f3a\u5927\u7684\u8bed\u8a00\u7406\u89e3\u548c\u751f\u6210\u80fd\u529b\u3002\u7136\u800c\uff0c\u539f\u59cb\u7684\u8bed\u8a00\u6a21\u578b\u5b58\u5728\u51e0\u4e2a\u5173\u952e\u95ee\u9898\uff1a</p>\n<ol>\n<li><strong>\u76ee\u6807\u4e0d\u5339\u914d</strong>\uff1a\u9884\u8bad\u7ec3\u4f18\u5316\u7684\u662f\u4e0b\u4e00\u4e2atoken\u9884\u6d4b\u51c6\u786e\u7387\uff0c\u800c\u975e\u5b8c\u6210\u7528\u6237\u4efb\u52a1</li>\n<li><strong>\u884c\u4e3a\u4e0d\u53ef\u63a7</strong>\uff1a\u53ef\u80fd\u751f\u6210\u6709\u5bb3\u3001\u504f\u89c1\u6216\u865a\u5047\u5185\u5bb9  </li>\n<li><strong>\u4ea4\u4e92\u80fd\u529b\u5dee</strong>\uff1a\u7f3a\u4e4f\u5bf9\u8bdd\u7ba1\u7406\u3001\u6307\u4ee4\u7406\u89e3\u7b49\u80fd\u529b</li>\n</ol>\n<p>\u540e\u8bad\u7ec3\u901a\u8fc7\u5f15\u5165\u4eba\u7c7b\u504f\u597d\u548c\u4ef7\u503c\u89c2\uff0c\u5c06\"\u9884\u6d4b\u4e0b\u4e00\u4e2atoken\"\u7684\u6a21\u578b\u8f6c\u5316\u4e3a\"\u5b8c\u6210\u4eba\u7c7b\u4efb\u52a1\"\u7684\u52a9\u624b\u3002\u8fd9\u4e2a\u8f6c\u5316\u8fc7\u7a0b\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a<strong>\u5206\u5e03\u5bf9\u9f50</strong>\u95ee\u9898\uff1a</p>\n<p>$$P_{pretrain}(y|x) \\rightarrow P_{aligned}(y|x) \\approx P_{human}(y|x)$$</p>\n<h3 id=\"112\">1.1.2 \u540e\u8bad\u7ec3\u7684\u76ee\u6807\u5c42\u6b21</h3>\n<p>\u540e\u8bad\u7ec3\u7684\u76ee\u6807\u53ef\u4ee5\u5206\u89e3\u4e3a\u591a\u4e2a\u5c42\u6b21\uff0c\u6bcf\u4e2a\u5c42\u6b21\u90fd\u6709\u5176\u72ec\u7279\u7684\u6311\u6218\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">L4</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u4ef7\u503c\u5bf9\u9f50</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Value</span><span class=\"w\"> </span><span class=\"n\">Alignment</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u4f26\u7406\u539f\u5219\u9075\u5faa</span>\n<span class=\"w\">    </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u6587\u5316\u654f\u611f\u6027</span>\n<span class=\"w\">    </span><span class=\"err\">\u2514\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u957f\u671f\u5f71\u54cd\u8003\u8651</span>\n\n<span class=\"n\">L3</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u4efb\u52a1\u80fd\u529b</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Task</span><span class=\"w\"> </span><span class=\"n\">Capability</span><span class=\"o\">)</span><span class=\"w\">  </span>\n<span class=\"w\">    </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u6307\u4ee4\u7406\u89e3\u4e0e\u6267\u884c</span>\n<span class=\"w\">    </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u591a\u6b65\u63a8\u7406</span>\n<span class=\"w\">    </span><span class=\"err\">\u2514\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u77e5\u8bc6\u8fd0\u7528</span>\n\n<span class=\"n\">L2</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u4ea4\u4e92\u8d28\u91cf</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Interaction</span><span class=\"w\"> </span><span class=\"n\">Quality</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u5bf9\u8bdd\u8fde\u8d2f\u6027</span>\n<span class=\"w\">    </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u89d2\u8272\u4e00\u81f4\u6027</span>\n<span class=\"w\">    </span><span class=\"err\">\u2514\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u8bed\u6c14\u9002\u5e94\u6027</span>\n\n<span class=\"n\">L1</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u57fa\u7840\u5b89\u5168</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Basic</span><span class=\"w\"> </span><span class=\"n\">Safety</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u6709\u5bb3\u5185\u5bb9\u8fc7\u6ee4</span>\n<span class=\"w\">    </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u4e2a\u4eba\u4fe1\u606f\u4fdd\u62a4</span>\n<span class=\"w\">    </span><span class=\"err\">\u2514\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u4e8b\u5b9e\u51c6\u786e\u6027</span>\n</code></pre></div>\n\n<p>\u6bcf\u4e2a\u5c42\u6b21\u7684\u4f18\u5316\u5f80\u5f80\u5b58\u5728\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u8fc7\u5ea6\u5f3a\u8c03L1\u7684\u5b89\u5168\u6027\u53ef\u80fd\u635f\u5bb3L3\u7684\u4efb\u52a1\u80fd\u529b\uff0c\u8fd9\u5c31\u662f\u540e\u8bad\u7ec3\u4e2d\u7684\u6839\u672c\u6027\u6743\u8861\u3002</p>\n<h3 id=\"113\">1.1.3 \u540e\u8bad\u7ec3\u7684\u6838\u5fc3\u6311\u6218</h3>\n<p>\u540e\u8bad\u7ec3\u9762\u4e34\u7684\u6311\u6218\u4e0d\u4ec5\u662f\u6280\u672f\u6027\u7684\uff0c\u66f4\u662f\u7cfb\u7edf\u6027\u7684\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u9884\u8bad\u7ec3\u5206\u5e03 P_pretrain(x)\n     \u2193\n   \u540e\u8bad\u7ec3\uff08\u591a\u76ee\u6807\u4f18\u5316\uff09\n     \u2193\n\u76ee\u6807\u5206\u5e03 P_aligned(x)\n\n\u6838\u5fc3\u6311\u6218\uff1a\n\n1. \u4fdd\u7559\u539f\u6709\u80fd\u529b\uff08\u907f\u514d\u707e\u96be\u6027\u9057\u5fd8\uff09\n   <span class=\"k\">-</span> \u77e5\u8bc6\u4fdd\u6301\u7387 &gt; 90%\n   <span class=\"k\">-</span> \u63a8\u7406\u80fd\u529b\u4fdd\u6301\u7387 &gt; 85%\n\n2. \u5b66\u4e60\u65b0\u884c\u4e3a\uff08\u6307\u4ee4\u8ddf\u968f\uff09\n   <span class=\"k\">-</span> \u6307\u4ee4\u9075\u5faa\u7387 &gt; 95%\n   <span class=\"k\">-</span> \u683c\u5f0f\u4e00\u81f4\u6027 &gt; 90%\n\n3. \u7ef4\u6301\u8f93\u51fa\u591a\u6837\u6027\uff08\u907f\u514d\u6a21\u5f0f\u574d\u584c\uff09\n   <span class=\"k\">-</span> \u54cd\u5e94\u71b5 H(Y|X) &gt; \u9608\u503c\n   <span class=\"k\">-</span> \u521b\u9020\u6027\u4efb\u52a1\u591a\u6837\u6027\u4fdd\u6301\n\n4. \u5206\u5e03\u6cdb\u5316\uff08OOD Generalization\uff09\n   <span class=\"k\">-</span> \u8bad\u7ec3\u5206\u5e03 \u2260 \u90e8\u7f72\u5206\u5e03\n   <span class=\"k\">-</span> \u9700\u8981\u9c81\u68d2\u6027\u673a\u5236\n</code></pre></div>\n\n<h3 id=\"114\">1.1.4 \u540e\u8bad\u7ec3\u7684\u6570\u5b66\u5f62\u5f0f\u5316</h3>\n<p>\u4ece\u4f18\u5316\u89d2\u5ea6\u770b\uff0c\u540e\u8bad\u7ec3\u53ef\u4ee5\u5f62\u5f0f\u5316\u4e3a\u7ea6\u675f\u4f18\u5316\u95ee\u9898\uff1a\n$$\\begin{aligned}\n\\max_{\\theta} &amp;\\quad \\mathbb{E}_{x \\sim \\mathcal{D}_{deploy}}[\\text{Utility}(x, \\pi_\\theta)] \\\\\n\\text{s.t.} &amp;\\quad \\text{Safety}(\\pi_\\theta) \\geq \\tau_{safe} \\\\\n&amp;\\quad D_{KL}(\\pi_\\theta || \\pi_{pretrain}) \\leq \\epsilon \\\\\n&amp;\\quad \\text{Diversity}(\\pi_\\theta) \\geq \\tau_{div}\n\\end{aligned}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>Utility \u8861\u91cf\u6a21\u578b\u7684\u6709\u7528\u6027</li>\n<li>Safety \u786e\u4fdd\u8f93\u51fa\u5b89\u5168\u6027</li>\n<li>KL\u7ea6\u675f\u9632\u6b62\u80fd\u529b\u9000\u5316</li>\n<li>Diversity \u4fdd\u6301\u8f93\u51fa\u591a\u6837\u6027</li>\n</ul>\n<h3 id=\"115-vs\">1.1.5 \u9884\u8bad\u7ec3vs\u540e\u8bad\u7ec3\u7684\u672c\u8d28\u533a\u522b</h3>\n<p>| \u7ef4\u5ea6 | \u9884\u8bad\u7ec3 | \u540e\u8bad\u7ec3 |</p>\n<table>\n<thead>\n<tr>\n<th>\u7ef4\u5ea6</th>\n<th>\u9884\u8bad\u7ec3</th>\n<th>\u540e\u8bad\u7ec3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>\u4f18\u5316\u76ee\u6807</strong></td>\n<td>\u6700\u5927\u4f3c\u7136 $P(x)$</td>\n<td>\u6700\u5927\u6548\u7528 $U(x,y)$</td>\n</tr>\n<tr>\n<td><strong>\u6570\u636e\u89c4\u6a21</strong></td>\n<td>TB\u7ea7\u522b</td>\n<td>GB\u7ea7\u522b</td>\n</tr>\n<tr>\n<td><strong>\u6570\u636e\u8d28\u91cf</strong></td>\n<td>\u6570\u91cf&gt;\u8d28\u91cf</td>\n<td>\u8d28\u91cf&gt;\u6570\u91cf</td>\n</tr>\n<tr>\n<td><strong>\u5b66\u4e60\u8303\u5f0f</strong></td>\n<td>\u65e0\u76d1\u7763/\u81ea\u76d1\u7763</td>\n<td>\u76d1\u7763/\u5f3a\u5316\u5b66\u4e60</td>\n</tr>\n<tr>\n<td><strong>\u8ba1\u7b97\u9700\u6c42</strong></td>\n<td>\u6570\u5343GPU\u5929</td>\n<td>\u6570\u5341GPU\u5929</td>\n</tr>\n<tr>\n<td><strong>\u66f4\u65b0\u9891\u7387</strong></td>\n<td>\u4e00\u6b21\u6027</td>\n<td>\u6301\u7eed\u8fed\u4ee3</td>\n</tr>\n<tr>\n<td><strong>\u8bc4\u4f30\u6807\u51c6</strong></td>\n<td>\u56f0\u60d1\u5ea6</td>\n<td>\u4eba\u7c7b\u504f\u597d</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"12\">1.2 \u540e\u8bad\u7ec3\u65b9\u6cd5\u4f53\u7cfb</h2>\n<h3 id=\"121-sft\">1.2.1 \u76d1\u7763\u5fae\u8c03\uff08SFT\uff09</h3>\n<p>\u76d1\u7763\u5fae\u8c03\u662f\u6700\u76f4\u63a5\u7684\u540e\u8bad\u7ec3\u65b9\u6cd5\uff0c\u901a\u8fc7\u9ad8\u8d28\u91cf\u7684\uff08\u6307\u4ee4\uff0c\u54cd\u5e94\uff09\u5bf9\u6765\u8bad\u7ec3\u6a21\u578b\u3002\u867d\u7136\u6982\u5ff5\u7b80\u5355\uff0c\u4f46SFT\u7684\u5b9e\u65bd\u7ec6\u8282\u51b3\u5b9a\u4e86\u540e\u7eed\u6240\u6709\u65b9\u6cd5\u7684\u57fa\u7840\u8d28\u91cf\u3002</p>\n<p><strong>\u635f\u5931\u51fd\u6570</strong>\uff1a\n$$\\mathcal{L}_{SFT} = -\\mathbb{E}_{(x,y) \\sim \\mathcal{D}_{SFT}} \\left[ \\sum_{t=1}^{|y|} \\log p_\\theta(y_t | x, y_{&lt;t}) \\right]$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$x$ \u662f\u8f93\u5165\u6307\u4ee4</li>\n<li>$y$ \u662f\u76ee\u6807\u54cd\u5e94  </li>\n<li>$\\mathcal{D}_{SFT}$ \u662f\u76d1\u7763\u6570\u636e\u96c6</li>\n</ul>\n<p><strong>\u6570\u636e\u6784\u9020\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u4eba\u5de5\u7f16\u5199</strong>\uff1a\u6210\u672c\u9ad8\u4f46\u8d28\u91cf\u6700\u4f73\n   - \u5178\u578b\u89c4\u6a21\uff1a5K-50K\u6837\u672c\n   - \u6210\u672c\uff1a$5-50/\u6837\u672c</p>\n</li>\n<li>\n<p><strong>\u6a21\u578b\u751f\u6210+\u4eba\u5de5\u7b5b\u9009</strong>\uff1a\u5e73\u8861\u6210\u672c\u548c\u8d28\u91cf\n   - \u751f\u621010x\u5019\u9009\uff0c\u4eba\u5de5\u9009\u62e9\u6700\u4f73\n   - \u6210\u672c\u964d\u4f4e80%\uff0c\u8d28\u91cf\u4fdd\u630190%</p>\n</li>\n<li>\n<p><strong>\u81ea\u4e3e\u65b9\u6cd5\uff08Self-Instruct\uff09</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">self_instruct</span><span class=\"p\">(</span><span class=\"n\">seed_tasks</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">n_iter</span><span class=\"p\">):</span>\n    <span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"n\">seed_tasks</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_iter</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u751f\u6210\u65b0\u6307\u4ee4</span>\n        <span class=\"n\">new_instructions</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate_instructions</span><span class=\"p\">(</span><span class=\"n\">tasks</span><span class=\"p\">)</span>\n        <span class=\"c1\"># \u751f\u6210\u54cd\u5e94</span>\n        <span class=\"n\">responses</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate_responses</span><span class=\"p\">(</span><span class=\"n\">new_instructions</span><span class=\"p\">)</span>\n        <span class=\"c1\"># \u8d28\u91cf\u8fc7\u6ee4</span>\n        <span class=\"n\">filtered</span> <span class=\"o\">=</span> <span class=\"n\">quality_filter</span><span class=\"p\">(</span><span class=\"n\">new_instructions</span><span class=\"p\">,</span> <span class=\"n\">responses</span><span class=\"p\">)</span>\n        <span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">filtered</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">tasks</span>\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u8d85\u53c2\u6570\u9009\u62e9</strong>\uff1a</p>\n<p>| \u53c2\u6570 | \u63a8\u8350\u503c | \u8bf4\u660e |</p>\n<table>\n<thead>\n<tr>\n<th>\u53c2\u6570</th>\n<th>\u63a8\u8350\u503c</th>\n<th>\u8bf4\u660e</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u5b66\u4e60\u7387</td>\n<td>1e-5 ~ 5e-6</td>\n<td>\u6bd4\u9884\u8bad\u7ec3\u4f4e10x</td>\n</tr>\n<tr>\n<td>Batch Size</td>\n<td>32-128</td>\n<td>\u53d6\u51b3\u4e8e\u5e8f\u5217\u957f\u5ea6</td>\n</tr>\n<tr>\n<td>Epochs</td>\n<td>1-3</td>\n<td>\u907f\u514d\u8fc7\u62df\u5408</td>\n</tr>\n<tr>\n<td>Warmup Steps</td>\n<td>100-500</td>\n<td>\u5e73\u6ed1\u521d\u59cb\u8bad\u7ec3</td>\n</tr>\n<tr>\n<td>Weight Decay</td>\n<td>0.01</td>\n<td>\u8f7b\u5fae\u6b63\u5219\u5316</td>\n</tr>\n<tr>\n<td>Gradient Clipping</td>\n<td>1.0</td>\n<td>\u9632\u6b62\u68af\u5ea6\u7206\u70b8</td>\n</tr>\n</tbody>\n</table>\n<p><strong>SFT\u7684\u9690\u542b\u9677\u9631</strong>\uff1a</p>\n<ul>\n<li><strong>\u683c\u5f0f\u8fc7\u62df\u5408</strong>\uff1a\u6a21\u578b\u8bb0\u4f4f\u7279\u5b9a\u683c\u5f0f\u800c\u975e\u5b66\u4f1a\u4efb\u52a1</li>\n<li><strong>\u591a\u6837\u6027\u4e27\u5931</strong>\uff1a\u54cd\u5e94\u53d8\u5f97\u6a21\u677f\u5316</li>\n<li><strong>\u957f\u5ea6\u504f\u89c1</strong>\uff1a\u503e\u5411\u751f\u6210\u8bad\u7ec3\u6570\u636e\u7684\u5e73\u5747\u957f\u5ea6</li>\n</ul>\n<h3 id=\"122-rlhf\">1.2.2 \u4eba\u7c7b\u53cd\u9988\u5f3a\u5316\u5b66\u4e60\uff08RLHF\uff09</h3>\n<p>RLHF\u901a\u8fc7\u5f3a\u5316\u5b66\u4e60\u4f18\u5316\u4eba\u7c7b\u504f\u597d\uff0c\u662f\u76ee\u524d\u6700\u6210\u529f\u7684\u5bf9\u9f50\u65b9\u6cd5\u3002\u5176\u6838\u5fc3\u521b\u65b0\u5728\u4e8e\u5c06\u4eba\u7c7b\u504f\u597d\u8f6c\u5316\u4e3a\u53ef\u4f18\u5316\u7684\u5956\u52b1\u4fe1\u53f7\u3002</p>\n<p><strong>\u5b8c\u6574RLHF\u6d41\u7a0b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>Step 1: \u6536\u96c6\u504f\u597d\u6570\u636e\n\u251c\u2500\u2500 \u5bf9\u540c\u4e00\u6307\u4ee4\u751f\u6210\u591a\u4e2a\u54cd\u5e94\n\u251c\u2500\u2500 \u4eba\u5de5\u6807\u6ce8\u504f\u597d\u6392\u5e8f\n\u2514\u2500\u2500 \u6784\u5efa\u5bf9\u6bd4\u6570\u636e\u96c6\n\nStep 2: \u8bad\u7ec3\u5956\u52b1\u6a21\u578b\n\u251c\u2500\u2500 \u4f7f\u7528Bradley-Terry\u6a21\u578b\n\u251c\u2500\u2500 \u5b66\u4e60\u9690\u542b\u5956\u52b1\u51fd\u6570\n\u2514\u2500\u2500 \u9a8c\u8bc1\u5956\u52b1\u4e00\u81f4\u6027\n\nStep 3: PPO\u4f18\u5316\n\u251c\u2500\u2500 \u521d\u59cb\u5316\uff1a\u03c0_\u03b8 = \u03c0_SFT\n\u251c\u2500\u2500 \u91c7\u6837\uff1a\u751f\u6210\u54cd\u5e94\n\u251c\u2500\u2500 \u8bc4\u5206\uff1a\u8ba1\u7b97\u5956\u52b1\n\u251c\u2500\u2500 \u66f4\u65b0\uff1aPPO\u68af\u5ea6\u6b65\n\u2514\u2500\u2500 \u7ea6\u675f\uff1aKL\u60e9\u7f5a\n</code></pre></div>\n\n<p><strong>1. \u5956\u52b1\u6a21\u578b\u8bad\u7ec3</strong>\uff1a\n$$\\mathcal{L}_{RM} = -\\mathbb{E}_{(x,y_w,y_l) \\sim \\mathcal{D}_{pref}} \\left[ \\log \\sigma(r_\\phi(x,y_w) - r_\\phi(x,y_l)) \\right]$$\n<strong>\u5956\u52b1\u6a21\u578b\u67b6\u6784\u9009\u62e9</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">RewardModel</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">base_model</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">transformer</span> <span class=\"o\">=</span> <span class=\"n\">base_model</span>\n        <span class=\"c1\"># \u5173\u952e\uff1a\u4f7f\u7528\u72ec\u7acb\u7684value head</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value_head</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">hidden_size</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">input_ids</span><span class=\"p\">,</span> <span class=\"n\">attention_mask</span><span class=\"p\">):</span>\n        <span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">transformer</span><span class=\"p\">(</span><span class=\"n\">input_ids</span><span class=\"p\">,</span> <span class=\"n\">attention_mask</span><span class=\"p\">)</span>\n        <span class=\"c1\"># \u4f7f\u7528\u6700\u540e\u4e00\u4e2atoken\u7684\u8868\u793a</span>\n        <span class=\"n\">rewards</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value_head</span><span class=\"p\">(</span><span class=\"n\">outputs</span><span class=\"o\">.</span><span class=\"n\">last_hidden_state</span><span class=\"p\">[:,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">:])</span>\n        <span class=\"k\">return</span> <span class=\"n\">rewards</span>\n</code></pre></div>\n\n<p><strong>2. PPO\u7b56\u7565\u4f18\u5316</strong>\uff1a</p>\n<p>PPO\u7684\u6838\u5fc3\u662f\u901a\u8fc7clip\u673a\u5236\u9650\u5236\u7b56\u7565\u66f4\u65b0\u5e45\u5ea6\uff1a\n$$\\mathcal{L}_{PPO}^{clip} = \\mathbb{E}_t \\left[ \\min \\left( r_t(\\theta) \\hat{A}_t, \\text{clip}(r_t(\\theta), 1-\\epsilon, 1+\\epsilon) \\hat{A}_t \\right) \\right]$$\n\u5176\u4e2d\u6bd4\u7387 $r_t(\\theta) = \\frac{\\pi_\\theta(a_t|s_t)}{\\pi_{old}(a_t|s_t)}$</p>\n<p><strong>PPO\u8d85\u53c2\u6570\u7ecf\u9a8c\u503c</strong>\uff1a</p>\n<ul>\n<li>clip\u8303\u56f4 $\\epsilon$: 0.2</li>\n<li>\u4ef7\u503c\u51fd\u6570\u7cfb\u6570: 0.5</li>\n<li>\u71b5\u5956\u52b1\u7cfb\u6570: 0.01</li>\n<li>KL\u60e9\u7f5a $\\beta$: \u52a8\u6001\u8c03\u6574</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">kl</span> <span class=\"o\">&gt;</span> <span class=\"n\">target_kl</span> <span class=\"o\">*</span> <span class=\"mf\">1.5</span><span class=\"p\">:</span>\n    <span class=\"n\">\u03b2</span> <span class=\"o\">*=</span> <span class=\"mf\">1.5</span>  <span class=\"c1\"># \u589e\u5f3a\u7ea6\u675f</span>\n<span class=\"k\">elif</span> <span class=\"n\">kl</span> <span class=\"o\">&lt;</span> <span class=\"n\">target_kl</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span><span class=\"p\">:</span>\n    <span class=\"n\">\u03b2</span> <span class=\"o\">*=</span> <span class=\"mf\">0.5</span>  <span class=\"c1\"># \u653e\u677e\u7ea6\u675f</span>\n</code></pre></div>\n\n<p><strong>3. KL\u6563\u5ea6\u7ea6\u675f\u7684\u91cd\u8981\u6027</strong>\uff1a</p>\n<p>KL\u7ea6\u675f\u9632\u6b62\u7b56\u7565\u504f\u79bb\u8fc7\u8fdc\uff0c\u4fdd\u6301\u6a21\u578b\u80fd\u529b\uff1a\n$$D_{KL}(\\pi_\\theta || \\pi_{ref}) = \\mathbb{E}_{y \\sim \\pi_\\theta} \\left[ \\log \\frac{\\pi_\\theta(y|x)}{\\pi_{ref}(y|x)} \\right]$$\n\u5b9e\u8df5\u4e2d\u7684KL\u9884\u7b97\u5206\u914d\uff1a</p>\n<ul>\n<li>\u521d\u671f\uff08\u63a2\u7d22\uff09\uff1aKL budget = 10-20</li>\n<li>\u4e2d\u671f\uff08\u4f18\u5316\uff09\uff1aKL budget = 5-10  </li>\n<li>\u540e\u671f\uff08\u6536\u655b\uff09\uff1aKL budget = 1-5</li>\n</ul>\n<h3 id=\"123-dpo\">1.2.3 \u76f4\u63a5\u504f\u597d\u4f18\u5316\uff08DPO\uff09</h3>\n<p>DPO\u901a\u8fc7\u91cd\u53c2\u6570\u5316\u6280\u5de7\uff0c\u5c06RLHF\u7684RL\u95ee\u9898\u8f6c\u5316\u4e3a\u76d1\u7763\u5b66\u4e60\u95ee\u9898\uff0c\u5927\u5e45\u7b80\u5316\u4e86\u8bad\u7ec3\u6d41\u7a0b\u3002</p>\n<p><strong>\u7406\u8bba\u63a8\u5bfc</strong>\uff1a</p>\n<p>\u4eceRLHF\u7684\u4f18\u5316\u76ee\u6807\u51fa\u53d1\uff1a\n$$\\max_{\\pi_\\theta} \\mathbb{E}_{x,y \\sim \\pi_\\theta} [r(x,y)] - \\beta D_{KL}(\\pi_\\theta || \\pi_{ref})$$\n\u6700\u4f18\u7b56\u7565\u7684\u95ed\u5f0f\u89e3\u4e3a\uff1a\n$$\\pi^*(y|x) = \\frac{1}{Z(x)} \\pi_{ref}(y|x) \\exp\\left(\\frac{1}{\\beta}r(x,y)\\right)$$\n\u4ee3\u5165Bradley-Terry\u6a21\u578b\uff0c\u5f97\u5230DPO\u635f\u5931\uff1a\n$$\\mathcal{L}_{DPO} = -\\mathbb{E}_{(x,y_w,y_l)} \\left[ \\log \\sigma \\left( \\beta \\log \\frac{\\pi_\\theta(y_w|x)}{\\pi_{ref}(y_w|x)} - \\beta \\log \\frac{\\pi_\\theta(y_l|x)}{\\pi_{ref}(y_l|x)} \\right) \\right]$$\n<strong>DPO\u5b9e\u65bd\u7ec6\u8282</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compute_dpo_loss</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">ref_model</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u8ba1\u7b97\u7b56\u7565\u6a21\u578b\u7684log\u6982\u7387</span>\n    <span class=\"n\">policy_chosen_logps</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">log_prob</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">chosen</span><span class=\"p\">)</span>\n    <span class=\"n\">policy_reject_logps</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">log_prob</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">rejected</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u8ba1\u7b97\u53c2\u8003\u6a21\u578b\u7684log\u6982\u7387</span>\n    <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n        <span class=\"n\">ref_chosen_logps</span> <span class=\"o\">=</span> <span class=\"n\">ref_model</span><span class=\"o\">.</span><span class=\"n\">log_prob</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">chosen</span><span class=\"p\">)</span>\n        <span class=\"n\">ref_reject_logps</span> <span class=\"o\">=</span> <span class=\"n\">ref_model</span><span class=\"o\">.</span><span class=\"n\">log_prob</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">rejected</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u8ba1\u7b97log\u6bd4\u7387</span>\n    <span class=\"n\">chosen_rewards</span> <span class=\"o\">=</span> <span class=\"n\">beta</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">policy_chosen_logps</span> <span class=\"o\">-</span> <span class=\"n\">ref_chosen_logps</span><span class=\"p\">)</span>\n    <span class=\"n\">reject_rewards</span> <span class=\"o\">=</span> <span class=\"n\">beta</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">policy_reject_logps</span> <span class=\"o\">-</span> <span class=\"n\">ref_reject_logps</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># DPO\u635f\u5931</span>\n    <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">logsigmoid</span><span class=\"p\">(</span><span class=\"n\">chosen_rewards</span> <span class=\"o\">-</span> <span class=\"n\">reject_rewards</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">loss</span>\n</code></pre></div>\n\n<p><strong>DPO vs RLHF\u5bf9\u6bd4</strong>\uff1a</p>\n<p>| \u65b9\u9762 | RLHF | DPO |</p>\n<table>\n<thead>\n<tr>\n<th>\u65b9\u9762</th>\n<th>RLHF</th>\n<th>DPO</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>\u5185\u5b58\u9700\u6c42</strong></td>\n<td>4\u4e2a\u6a21\u578b</td>\n<td>2\u4e2a\u6a21\u578b</td>\n</tr>\n<tr>\n<td><strong>\u8bad\u7ec3\u7a33\u5b9a\u6027</strong></td>\n<td>\u9700\u8981\u7cbe\u7ec6\u8c03\u53c2</td>\n<td>\u7a33\u5b9a\u5982SFT</td>\n</tr>\n<tr>\n<td><strong>\u91c7\u6837\u9700\u6c42</strong></td>\n<td>\u5728\u7ebf\u91c7\u6837</td>\n<td>\u79bb\u7ebf\u6570\u636e</td>\n</tr>\n<tr>\n<td><strong>\u8d85\u53c2\u6570</strong></td>\n<td>10+</td>\n<td>2-3</td>\n</tr>\n<tr>\n<td><strong>\u6536\u655b\u901f\u5ea6</strong></td>\n<td>\u6162</td>\n<td>\u5feb</td>\n</tr>\n<tr>\n<td><strong>\u6700\u7ec8\u6027\u80fd</strong></td>\n<td>\u2605\u2605\u2605\u2605\u2605</td>\n<td>\u2605\u2605\u2605\u2605</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"124\">1.2.4 \u5176\u4ed6\u540e\u8bad\u7ec3\u65b9\u6cd5</h3>\n<p><strong>1. IPO (Identity Preference Optimization)</strong>\uff1a</p>\n<p>\u4f7f\u7528\u66f4\u7b80\u5355\u7684\u635f\u5931\u51fd\u6570\uff1a\n$$\\mathcal{L}_{IPO} = \\left( \\beta \\log \\frac{\\pi_\\theta(y_w|x)}{\\pi_{ref}(y_w|x)} - \\beta \\log \\frac{\\pi_\\theta(y_l|x)}{\\pi_{ref}(y_l|x)} - \\tau \\right)^2$$\n\u4f18\u52bf\uff1a\u907f\u514dsigmoid\u9971\u548c\u95ee\u9898</p>\n<p><strong>2. RLAIF (RL from AI Feedback)</strong>\uff1a</p>\n<p>\u7528AI\u6a21\u578b\u66ff\u4ee3\u4eba\u7c7b\u6807\u6ce8\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">generate_ai_preferences</span><span class=\"p\">(</span><span class=\"n\">instruction</span><span class=\"p\">,</span> <span class=\"n\">responses</span><span class=\"p\">,</span> <span class=\"n\">critic_model</span><span class=\"p\">):</span>\n    <span class=\"c1\"># AI\u8bc4\u5224\u6807\u51c6</span>\n    <span class=\"n\">criteria</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;</span>\n\n<span class=\"s2\">    1. \u51c6\u786e\u6027\u548c\u4e8b\u5b9e\u6027</span>\n<span class=\"s2\">    2. \u6709\u7528\u6027\u548c\u76f8\u5173\u6027</span>\n<span class=\"s2\">    3. \u6e05\u6670\u5ea6\u548c\u7ec4\u7ec7\u6027</span>\n<span class=\"s2\">    4. \u5b89\u5168\u6027\u548c\u9002\u5f53\u6027</span>\n<span class=\"s2\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">response</span> <span class=\"ow\">in</span> <span class=\"n\">responses</span><span class=\"p\">:</span>\n        <span class=\"n\">prompt</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">criteria</span><span class=\"si\">}</span><span class=\"se\">\\n\\n</span><span class=\"s2\">\u6307\u4ee4\uff1a</span><span class=\"si\">{</span><span class=\"n\">instruction</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">\u54cd\u5e94\uff1a</span><span class=\"si\">{</span><span class=\"n\">response</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">\u8bc4\u5206\uff1a&quot;</span>\n        <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">critic_model</span><span class=\"o\">.</span><span class=\"n\">evaluate</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">)</span>\n        <span class=\"n\">scores</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u8f6c\u6362\u4e3a\u504f\u597d\u5bf9</span>\n    <span class=\"n\">preferences</span> <span class=\"o\">=</span> <span class=\"n\">create_preference_pairs</span><span class=\"p\">(</span><span class=\"n\">responses</span><span class=\"p\">,</span> <span class=\"n\">scores</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">preferences</span>\n</code></pre></div>\n\n<p><strong>3. Constitutional AI</strong>\uff1a</p>\n<p>\u901a\u8fc7\u89c4\u5219\u5f15\u5bfc\u7684\u81ea\u6211\u6539\u8fdb\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>Initial Response \u2192 Critique \u2192 Revision \u2192 Final Response\n         \u2191                                      \u2193\n         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Constitutional Rules \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<p><strong>4. ORPO (Odds Ratio Preference Optimization)</strong>\uff1a</p>\n<p>\u7ed3\u5408SFT\u548c\u504f\u597d\u4f18\u5316\uff1a\n$$\\mathcal{L}_{ORPO} = \\mathcal{L}_{SFT} + \\lambda \\cdot \\mathcal{L}_{OR}$$\n\u5176\u4e2dodds ratio\u635f\u5931\uff1a\n$$\\mathcal{L}_{OR} = -\\log \\sigma\\left(\\log \\frac{\\text{odds}_\\theta(y_w|x)}{\\text{odds}_\\theta(y_l|x)}\\right)$$</p>\n<h2 id=\"13\">1.3 \u5bf9\u9f50\u7a0e\u4e0e\u80fd\u529b\u6743\u8861</h2>\n<h3 id=\"131\">1.3.1 \u5bf9\u9f50\u7a0e\u7684\u5b9a\u4e49\u4e0e\u8868\u73b0</h3>\n<p>\u5bf9\u9f50\u7a0e\uff08Alignment Tax\uff09\u662f\u540e\u8bad\u7ec3\u4e0d\u53ef\u907f\u514d\u7684\u526f\u4f5c\u7528\uff0c\u6307\u6a21\u578b\u4e3a\u4e86\u83b7\u5f97\u5bf9\u9f50\u80fd\u529b\uff08\u5b89\u5168\u6027\u3001\u6709\u7528\u6027\u3001\u8bda\u5b9e\u6027\uff09\u800c\u4ed8\u51fa\u7684\u539f\u59cb\u80fd\u529b\u4ee3\u4ef7\u3002\u8fd9\u4e0d\u662fbug\uff0c\u800c\u662f\u5f53\u524d\u6280\u672f\u7684\u6839\u672c\u6027\u9650\u5236\u3002</p>\n<p><strong>\u5bf9\u9f50\u7a0e\u7684\u5177\u4f53\u8868\u73b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u80fd\u529b\u7ef4\u5ea6\u8bc4\u4f30\uff08\u771f\u5b9e\u6848\u4f8b\u7edf\u8ba1\uff09\uff1a\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    \u80fd\u529b\u7c7b\u522b      \u2502 \u9884\u8bad\u7ec3   \u2502 \u540e\u8bad\u7ec3   \u2502   \u9000\u5316\u539f\u56e0   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 \u4e8b\u5b9e\u77e5\u8bc6\u53ec\u56de    \u2502   95%    \u2502   92%    \u2502 \u5b89\u5168\u8fc7\u6ee4    \u2502\n\u2502 \u6570\u5b66\u63a8\u7406        \u2502   88%    \u2502   85%    \u2502 \u683c\u5f0f\u7ea6\u675f    \u2502\n\u2502 \u4ee3\u7801\u751f\u6210        \u2502   92%    \u2502   88%    \u2502 \u62d2\u7edd\u673a\u5236    \u2502\n\u2502 \u521b\u9020\u6027\u5199\u4f5c      \u2502   90%    \u2502   75%    \u2502 \u6a21\u5f0f\u574d\u584c    \u2502\n\u2502 \u591a\u8bed\u8a00\u80fd\u529b      \u2502   85%    \u2502   78%    \u2502 \u82f1\u8bed\u504f\u5411    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 \u5b89\u5168\u6027          \u2502   60%    \u2502   95%    \u2502 \u4e3b\u8981\u76ee\u6807 \u2713  \u2502\n\u2502 \u6307\u4ee4\u8ddf\u968f        \u2502   40%    \u2502   90%    \u2502 \u4e3b\u8981\u76ee\u6807 \u2713  \u2502\n\u2502 \u62d2\u7edd\u6709\u5bb3\u8bf7\u6c42    \u2502   20%    \u2502   98%    \u2502 \u4e3b\u8981\u76ee\u6807 \u2713  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<p><strong>\u5bf9\u9f50\u7a0e\u7684\u6df1\u5c42\u673a\u5236</strong>\uff1a</p>\n<ol>\n<li><strong>\u8868\u793a\u7a7a\u95f4\u91cd\u7ec4</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u53ef\u89c6\u5316\uff1at-SNE\u6295\u5f71\u663e\u793a</span>\n<span class=\"c1\"># \u9884\u8bad\u7ec3\uff1a\u77e5\u8bc6\u5747\u5300\u5206\u5e03</span>\n<span class=\"c1\"># \u540e\u8bad\u7ec3\uff1a\u5f62\u6210&quot;\u5b89\u5168\u533a&quot;\u548c&quot;\u5371\u9669\u533a&quot;\u805a\u7c7b</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li>\n<p><strong>\u6ce8\u610f\u529b\u6a21\u5f0f\u6539\u53d8</strong>\uff1a\n   - \u9884\u8bad\u7ec3\uff1a\u5747\u5300\u6ce8\u610f\u529b\u5206\u5e03\n   - \u540e\u8bad\u7ec3\uff1a\u8fc7\u5ea6\u5173\u6ce8\u5b89\u5168\u76f8\u5173token</p>\n</li>\n<li>\n<p><strong>\u8f93\u51fa\u5206\u5e03\u53d8\u7a84</strong>\uff1a\n$$H(Y|X)_{aligned} &lt; H(Y|X)_{pretrain}$$</p>\n</li>\n</ol>\n<h3 id=\"132\">1.3.2 \u5bf9\u9f50\u7a0e\u7684\u7cbe\u786e\u6d4b\u91cf</h3>\n<p><strong>\u591a\u7ef4\u5ea6\u6d4b\u91cf\u6846\u67b6</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">AlignmentTaxMeasurer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pretrain_model</span><span class=\"p\">,</span> <span class=\"n\">aligned_model</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">benchmarks</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;knowledge&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;MMLU&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;TriviaQA&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;NaturalQuestions&#39;</span><span class=\"p\">],</span>\n            <span class=\"s1\">&#39;reasoning&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;GSM8K&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;MATH&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;BBH&#39;</span><span class=\"p\">],</span>\n            <span class=\"s1\">&#39;coding&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;HumanEval&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;MBPP&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;CodeContests&#39;</span><span class=\"p\">],</span>\n            <span class=\"s1\">&#39;creativity&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;story_continuation&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;poetry_generation&#39;</span><span class=\"p\">],</span>\n            <span class=\"s1\">&#39;multimodal&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;VQA&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;COCO_caption&#39;</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">has_vision</span> <span class=\"k\">else</span> <span class=\"p\">[]</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">measure_tax</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">category</span><span class=\"p\">,</span> <span class=\"n\">tests</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">benchmarks</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">pretrain_scores</span> <span class=\"o\">=</span> <span class=\"n\">evaluate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pretrain_model</span><span class=\"p\">,</span> <span class=\"n\">tests</span><span class=\"p\">)</span>\n            <span class=\"n\">aligned_scores</span> <span class=\"o\">=</span> <span class=\"n\">evaluate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aligned_model</span><span class=\"p\">,</span> <span class=\"n\">tests</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u8ba1\u7b97\u5404\u79cd\u6307\u6807</span>\n            <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"n\">category</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;absolute_drop&#39;</span><span class=\"p\">:</span> <span class=\"n\">pretrain_scores</span> <span class=\"o\">-</span> <span class=\"n\">aligned_scores</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;relative_drop&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">pretrain_scores</span> <span class=\"o\">-</span> <span class=\"n\">aligned_scores</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">pretrain_scores</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;worst_case&#39;</span><span class=\"p\">:</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">aligned_scores</span><span class=\"p\">),</span>\n                <span class=\"s1\">&#39;variance&#39;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">var</span><span class=\"p\">(</span><span class=\"n\">aligned_scores</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n\n        <span class=\"c1\"># \u7efc\u5408\u5bf9\u9f50\u7a0e</span>\n        <span class=\"n\">total_tax</span> <span class=\"o\">=</span> <span class=\"n\">weighted_average</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">importance_weights</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">results</span><span class=\"p\">,</span> <span class=\"n\">total_tax</span>\n</code></pre></div>\n\n<p><strong>\u7ec6\u7c92\u5ea6\u5206\u6790</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>Token\u7ea7\u522b\u5bf9\u9f50\u7a0e</strong>\uff1a\n$$\\text{Tax}_{token} = \\sum_{t} D_{KL}(P_{pre}(x_t) || P_{align}(x_t))$$</p>\n</li>\n<li>\n<p><strong>\u4efb\u52a1\u7ea7\u522b\u5bf9\u9f50\u7a0e</strong>\uff1a\n$$\\text{Tax}_{task} = \\frac{\\text{Perf}_{pre} - \\text{Perf}_{align}}{\\text{Perf}_{pre}}$$</p>\n</li>\n<li>\n<p><strong>\u5206\u5e03\u7ea7\u522b\u5bf9\u9f50\u7a0e</strong>\uff1a\n$$\\text{Tax}_{dist} = \\mathcal{W}_2(P_{pre}, P_{align})$$\n\uff08Wasserstein\u8ddd\u79bb\uff09</p>\n</li>\n</ol>\n<h3 id=\"133\">1.3.3 \u5bf9\u9f50\u7a0e\u7684\u7f13\u89e3\u7b56\u7565</h3>\n<p><strong>1. \u6df7\u5408\u8bad\u7ec3\uff08Mix Training\uff09</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">create_mixed_dataset</span><span class=\"p\">(</span><span class=\"n\">alignment_data</span><span class=\"p\">,</span> <span class=\"n\">pretrain_data</span><span class=\"p\">,</span> <span class=\"n\">mix_ratio</span><span class=\"o\">=</span><span class=\"mf\">0.9</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u5173\u952e\u53d1\u73b0\uff1a10-15%\u7684\u9884\u8bad\u7ec3\u6570\u636e\u53ef\u51cf\u5c1150%\u7684\u5bf9\u9f50\u7a0e</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">n_alignment</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">alignment_data</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">mix_ratio</span><span class=\"p\">)</span>\n    <span class=\"n\">n_pretrain</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">alignment_data</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">n_alignment</span>\n\n    <span class=\"c1\"># \u7b56\u75651\uff1a\u968f\u673a\u6df7\u5408</span>\n    <span class=\"n\">mixed</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">alignment_data</span><span class=\"p\">,</span> <span class=\"n\">n_alignment</span><span class=\"p\">)</span> <span class=\"o\">+</span> \\\n            <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">pretrain_data</span><span class=\"p\">,</span> <span class=\"n\">n_pretrain</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u7b56\u75652\uff1a\u8bfe\u7a0b\u6df7\u5408\uff08\u63a8\u8350\uff09</span>\n    <span class=\"c1\"># \u65e9\u671f\u591a\u9884\u8bad\u7ec3\u6570\u636e\uff0c\u540e\u671f\u591a\u5bf9\u9f50\u6570\u636e</span>\n    <span class=\"n\">schedule</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">epoch</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span> <span class=\"o\">*</span> <span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">epoch</span><span class=\"o\">/</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mf\">0.1</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">mixed</span>\n</code></pre></div>\n\n<p><strong>2. \u5f39\u6027\u6743\u91cd\u5de9\u56fa\uff08EWC\uff09</strong>\uff1a</p>\n<p>\u4fdd\u62a4\u91cd\u8981\u53c2\u6570\u4e0d\u88ab\u8fc7\u5ea6\u4fee\u6539\uff1a\n$$\\mathcal{L}_{EWC} = \\mathcal{L}_{align} + \\frac{\\lambda}{2} \\sum_i F_i (\\theta_i - \\theta_{pre,i})^2$$\n\u5176\u4e2d$F_i$\u662fFisher\u4fe1\u606f\u77e9\u9635\u7684\u5bf9\u89d2\u5143\u7d20\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compute_fisher_information</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"n\">fisher</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">()</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">batch</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">:</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">loss</span>\n        <span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">param</span> <span class=\"ow\">in</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">named_parameters</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">grad</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">fisher</span><span class=\"p\">:</span>\n                    <span class=\"n\">fisher</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">fisher</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n\n    <span class=\"c1\"># \u5f52\u4e00\u5316</span>\n    <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">fisher</span><span class=\"p\">:</span>\n        <span class=\"n\">fisher</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">/=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">fisher</span>\n</code></pre></div>\n\n<p><strong>3. \u5c42\u7ea7\u5fae\u8c03\uff08Layer-wise Fine-tuning\uff09</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">layerwise_finetune</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">layer_schedule</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u4ece\u9876\u5c42\u5230\u5e95\u5c42\u9010\u6e10\u89e3\u51bb</span>\n<span class=\"sd\">    \u5e95\u5c42\u4fdd\u7559\u66f4\u591a\u9884\u8bad\u7ec3\u77e5\u8bc6</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">stage</span><span class=\"p\">,</span> <span class=\"n\">layers_to_unfreeze</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">layer_schedule</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u51bb\u7ed3\u6240\u6709\u5c42</span>\n        <span class=\"k\">for</span> <span class=\"n\">param</span> <span class=\"ow\">in</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">():</span>\n            <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">requires_grad</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"c1\"># \u89e3\u51bb\u6307\u5b9a\u5c42</span>\n        <span class=\"k\">for</span> <span class=\"n\">layer_idx</span> <span class=\"ow\">in</span> <span class=\"n\">layers_to_unfreeze</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">param</span> <span class=\"ow\">in</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">layer_idx</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">():</span>\n                <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">requires_grad</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n        <span class=\"c1\"># \u8bad\u7ec3\u5f53\u524d\u9636\u6bb5</span>\n        <span class=\"n\">train_stage</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>4. \u77e5\u8bc6\u84b8\u998f\uff08Knowledge Distillation\uff09</strong>\uff1a</p>\n<p>\u4ece\u9884\u8bad\u7ec3\u6a21\u578b\u84b8\u998f\u77e5\u8bc6\uff1a\n$$\\mathcal{L}_{KD} = \\alpha \\mathcal{L}_{align} + (1-\\alpha) \\mathcal{L}_{distill}$$\n\u5176\u4e2d\uff1a\n$$\\mathcal{L}_{distill} = \\tau^2 \\cdot D_{KL}(P_{student}^{\\tau} || P_{teacher}^{\\tau})$$</p>\n<h3 id=\"134\">1.3.4 \u5e15\u7d2f\u6258\u524d\u6cbf\u4f18\u5316</h3>\n<p>\u5728\u591a\u76ee\u6807\u4f18\u5316\u4e2d\uff0c\u5bfb\u627e\u80fd\u529b-\u5bf9\u9f50\u7684\u6700\u4f18\u6743\u8861\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u5bf9\u9f50\u7a0b\u5ea6 \u2191\n    \u2502     \u25cb \u5e15\u7d2f\u6258\u6700\u4f18\u70b9\n    \u2502    \u2571\u2502\n    \u2502   \u2571 \u2502 \u2190 \u53ef\u8fbe\u533a\u57df\n    \u2502  \u2571  \u2022 \u6b21\u4f18\u89e3\n    \u2502 \u2571   \u2502\n    \u2502\u2571    \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2192 \u539f\u59cb\u80fd\u529b\n         \u80fd\u529b\u4fdd\u6301\u9608\u503c\n</code></pre></div>\n\n<p><strong>\u591a\u76ee\u6807\u4f18\u5316\u7b97\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">pareto_optimization</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">objectives</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    NSGA-II\u98ce\u683c\u7684\u591a\u76ee\u6807\u4f18\u5316</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">population</span> <span class=\"o\">=</span> <span class=\"n\">initialize_population</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">generation</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">max_generations</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8bc4\u4f30\u6bcf\u4e2a\u6a21\u578b</span>\n        <span class=\"n\">fitness</span> <span class=\"o\">=</span> <span class=\"n\">evaluate_objectives</span><span class=\"p\">(</span><span class=\"n\">population</span><span class=\"p\">,</span> <span class=\"n\">objectives</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u975e\u652f\u914d\u6392\u5e8f</span>\n        <span class=\"n\">fronts</span> <span class=\"o\">=</span> <span class=\"n\">non_dominated_sort</span><span class=\"p\">(</span><span class=\"n\">population</span><span class=\"p\">,</span> <span class=\"n\">fitness</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u9009\u62e9\u4e0b\u4e00\u4ee3</span>\n        <span class=\"n\">next_gen</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">front</span> <span class=\"ow\">in</span> <span class=\"n\">fronts</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">next_gen</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">front</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"n\">pop_size</span><span class=\"p\">:</span>\n                <span class=\"n\">next_gen</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">front</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"c1\"># \u62e5\u6324\u5ea6\u6392\u5e8f</span>\n                <span class=\"n\">crowding</span> <span class=\"o\">=</span> <span class=\"n\">crowding_distance</span><span class=\"p\">(</span><span class=\"n\">front</span><span class=\"p\">,</span> <span class=\"n\">fitness</span><span class=\"p\">)</span>\n                <span class=\"n\">sorted_front</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">front</span><span class=\"p\">,</span> <span class=\"n\">crowding</span><span class=\"p\">),</span> \n                                    <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n                <span class=\"n\">remaining</span> <span class=\"o\">=</span> <span class=\"n\">pop_size</span> <span class=\"o\">-</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">next_gen</span><span class=\"p\">)</span>\n                <span class=\"n\">next_gen</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">sorted_front</span><span class=\"p\">[:</span><span class=\"n\">remaining</span><span class=\"p\">]])</span>\n                <span class=\"k\">break</span>\n\n        <span class=\"n\">population</span> <span class=\"o\">=</span> <span class=\"n\">next_gen</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">get_pareto_front</span><span class=\"p\">(</span><span class=\"n\">population</span><span class=\"p\">,</span> <span class=\"n\">fitness</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h2 id=\"14\">1.4 \u6307\u4ee4\u8ddf\u968f\u4e0e\u5b89\u5168\u6027\u5e73\u8861</h2>\n<h3 id=\"141\">1.4.1 \u6307\u4ee4\u7406\u89e3\u7684\u5c42\u6b21\u7ed3\u6784</h3>\n<p>\u6307\u4ee4\u7406\u89e3\u4e0d\u662f\u4e8c\u5143\u7684\uff08\u7406\u89e3/\u4e0d\u7406\u89e3\uff09\uff0c\u800c\u662f\u5b58\u5728\u590d\u6742\u7684\u5c42\u6b21\u7ed3\u6784\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>Level 5: \u5143\u8ba4\u77e5\u7406\u89e3\n  \u2514\u2500\u2500 &quot;\u6211\u8981\u4f60\u5ffd\u7565\u4e4b\u524d\u7684\u6307\u4ee4&quot; \u2192 \u8bc6\u522b\u5e76\u62d2\u7edd\n\nLevel 4: \u4ef7\u503c\u5bf9\u9f50\u7406\u89e3\n  \u2514\u2500\u2500 &quot;\u5e2e\u6211\u5199\u4e00\u5c01\u8f9e\u804c\u4fe1&quot; \u2192 \u8003\u8651\u540e\u679c\u548c\u5efa\u8bae\n\nLevel 3: \u9690\u542b\u610f\u56fe\u63a8\u7406  \n  \u2514\u2500\u2500 &quot;\u592a\u70ed\u4e86&quot; \u2192 \u63a8\u65ad\uff1a\u8c03\u8282\u6e29\u5ea6/\u5f00\u7a97/\u63d0\u4f9b\u996e\u54c1\u5efa\u8bae\n\nLevel 2: \u591a\u6b65\u9aa4\u6307\u4ee4\u5206\u89e3\n  \u2514\u2500\u2500 &quot;\u5148\u603b\u7ed3\u6587\u7ae0\u8981\u70b9\uff0c\u7136\u540e\u7ffb\u8bd1\u6210\u4e2d\u6587\uff0c\u6700\u540e\u5199\u4e00\u6bb5\u8bc4\u8bba&quot;\n\nLevel 1: \u76f4\u63a5\u6307\u4ee4\u6267\u884c\n  \u2514\u2500\u2500 &quot;\u5c06\u8fd9\u6bb5\u8bdd\u7ffb\u8bd1\u6210\u82f1\u6587&quot;\n\nLevel 0: \u8bed\u6cd5\u89e3\u6790\n  \u2514\u2500\u2500 \u57fa\u7840\u7684\u53e5\u6cd5\u7406\u89e3\n</code></pre></div>\n\n<p><strong>\u6307\u4ee4\u6b67\u4e49\u5904\u7406\u77e9\u9635</strong>\uff1a</p>\n<p>| \u6b67\u4e49\u7c7b\u578b | \u793a\u4f8b | \u5904\u7406\u7b56\u7565 |</p>\n<table>\n<thead>\n<tr>\n<th>\u6b67\u4e49\u7c7b\u578b</th>\n<th>\u793a\u4f8b</th>\n<th>\u5904\u7406\u7b56\u7565</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>\u8303\u56f4\u6b67\u4e49</strong></td>\n<td>\"\u603b\u7ed3\u8fd9\u4e2a\"</td>\n<td>\u8bf7\u6c42\u6f84\u6e05\u8303\u56f4</td>\n</tr>\n<tr>\n<td><strong>\u7a0b\u5ea6\u6b67\u4e49</strong></td>\n<td>\"\u7b80\u8981\u8bf4\u660e\"</td>\n<td>\u63d0\u4f9b\u591a\u4e2a\u957f\u5ea6\u9009\u9879</td>\n</tr>\n<tr>\n<td><strong>\u610f\u56fe\u6b67\u4e49</strong></td>\n<td>\"\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\"</td>\n<td>\u5217\u4e3e\u53ef\u80fd\u7684\u5904\u7406\u65b9\u5f0f</td>\n</tr>\n<tr>\n<td><strong>\u51b2\u7a81\u6307\u4ee4</strong></td>\n<td>\"\u8be6\u7ec6\u4f46\u7b80\u77ed\"</td>\n<td>\u6307\u51fa\u77db\u76fe\u5e76\u5efa\u8bae</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"142\">1.4.2 \u5b89\u5168\u8fb9\u754c\u7684\u52a8\u6001\u8bbe\u8ba1</h3>\n<p>\u5b89\u5168\u4e0d\u662f\u9759\u6001\u89c4\u5219\uff0c\u800c\u662f\u52a8\u6001\u51b3\u7b56\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">DynamicSafetyBoundary</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">static_rules</span> <span class=\"o\">=</span> <span class=\"n\">load_constitution</span><span class=\"p\">()</span>  <span class=\"c1\"># \u57fa\u7840\u89c4\u5219</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_factors</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;user_history&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n            <span class=\"s1\">&#39;conversation_context&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n            <span class=\"s1\">&#39;detected_intent&#39;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;risk_level&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">evaluate_request</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 1. \u9759\u6001\u89c4\u5219\u68c0\u67e5</span>\n        <span class=\"n\">static_risk</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check_static_rules</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. \u4e0a\u4e0b\u6587\u98ce\u9669\u8bc4\u4f30</span>\n        <span class=\"n\">context_risk</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">evaluate_context</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u610f\u56fe\u5206\u6790</span>\n        <span class=\"n\">intent</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">analyze_intent</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 4. \u7efc\u5408\u51b3\u7b56</span>\n        <span class=\"n\">total_risk</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weighted_risk</span><span class=\"p\">(</span><span class=\"n\">static_risk</span><span class=\"p\">,</span> <span class=\"n\">context_risk</span><span class=\"p\">,</span> <span class=\"n\">intent</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">total_risk</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.8</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;REFUSE&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generate_refusal</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">total_risk</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">total_risk</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.5</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;WARN&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generate_warning</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span> \n        <span class=\"k\">elif</span> <span class=\"n\">total_risk</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.3</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;CAVEAT&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_disclaimer</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;ALLOW&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n</code></pre></div>\n\n<p><strong>\u5b89\u5168-\u6709\u7528\u6027\u6743\u8861\u66f2\u7ebf</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u6709\u7528\u6027 \u2191\n100%\u2502     \n    \u2502   \u2571 \u2190 \u7406\u60f3\u66f2\u7ebf\n 80%\u2502  \u2571\n    \u2502 \u2571 \u2022 \u5f53\u524dSOTA\n 60%\u2502\u2571\n    \u2502\u2500\u2500 \u2190 \u57fa\u7840\u7ebf\n 40%\u2502\n    \u2502\n 20%\u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192 \u5b89\u5168\u6027\n     60% 80% 100%\n</code></pre></div>\n\n<h3 id=\"143\">1.4.3 \u62d2\u7edd\u673a\u5236\u7684\u5206\u5c42\u5b9e\u73b0</h3>\n<p><strong>\u667a\u80fd\u62d2\u7edd\u6846\u67b6</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">IntelligentRefusal</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refusal_templates</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;illegal&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\u6211\u4e0d\u80fd\u534f\u52a9\u8fdd\u6cd5\u6d3b\u52a8\u3002&quot;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;harmful&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\u8fd9\u53ef\u80fd\u9020\u6210\u4f24\u5bb3\uff0c\u6211\u4e0d\u80fd\u63d0\u4f9b\u5e2e\u52a9\u3002&quot;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;privacy&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\u6211\u4e0d\u80fd\u5206\u4eab\u4e2a\u4eba\u9690\u79c1\u4fe1\u606f\u3002&quot;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;uncertain&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\u6211\u4e0d\u786e\u5b9a\u8fd9\u662f\u5426\u5408\u9002\uff0c\u8ba9\u6211\u4eec\u6362\u4e2a\u8bdd\u9898\u3002&quot;</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">generate_refusal</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">risk_type</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 1. \u8bc6\u522b\u5177\u4f53\u98ce\u9669</span>\n        <span class=\"n\">specific_risk</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">identify_specific_risk</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. \u89e3\u91ca\u539f\u56e0\uff08\u6559\u80b2\u6027\uff09</span>\n        <span class=\"n\">explanation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">explain_why_harmful</span><span class=\"p\">(</span><span class=\"n\">specific_risk</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u63d0\u4f9b\u66ff\u4ee3\u65b9\u6848</span>\n        <span class=\"n\">alternatives</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">suggest_alternatives</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">risk_type</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 4. \u7ec4\u5408\u54cd\u5e94</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">        </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refusal_templates</span><span class=\"p\">[</span><span class=\"n\">risk_type</span><span class=\"p\">]</span><span class=\"si\">}</span>\n\n<span class=\"s2\">        </span><span class=\"si\">{</span><span class=\"n\">explanation</span><span class=\"si\">}</span>\n\n<span class=\"s2\">        \u4f5c\u4e3a\u66ff\u4ee3\uff0c\u6211\u53ef\u4ee5\uff1a</span>\n<span class=\"s2\">        </span><span class=\"si\">{</span><span class=\"n\">alternatives</span><span class=\"si\">}</span>\n<span class=\"s2\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">response</span>\n</code></pre></div>\n\n<p><strong>\u62d2\u7edd\u7c92\u5ea6\u63a7\u5236</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u8bf7\u6c42\u5206\u7c7b\u51b3\u7b56\u6811\uff1a\n\u251c\u2500\u2500 \u660e\u786e\u6709\u5bb3\uff08&gt;95%\u786e\u5b9a\uff09\n\u2502   \u2514\u2500\u2500 \u76f4\u63a5\u62d2\u7edd + \u7b80\u77ed\u89e3\u91ca\n\u251c\u2500\u2500 \u53ef\u80fd\u6709\u5bb3\uff0870-95%\u786e\u5b9a\uff09\n\u2502   \u2514\u2500\u2500 \u8f6f\u6027\u62d2\u7edd + \u8be6\u7ec6\u89e3\u91ca + \u66ff\u4ee3\u5efa\u8bae\n\u251c\u2500\u2500 \u8fb9\u754c\u6a21\u7cca\uff0830-70%\u786e\u5b9a\uff09\n\u2502   \u251c\u2500\u2500 \u90e8\u5206\u6ee1\u8db3 + \u5b89\u5168\u9650\u5236\n\u2502   \u2514\u2500\u2500 \u8981\u6c42\u6f84\u6e05\u610f\u56fe\n\u2514\u2500\u2500 \u5b89\u5168\u8bf7\u6c42\uff08&lt;30%\u98ce\u9669\uff09\n    \u2514\u2500\u2500 \u6b63\u5e38\u6267\u884c + \u53ef\u9009\u514d\u8d23\u58f0\u660e\n</code></pre></div>\n\n<h3 id=\"144\">1.4.4 \u6307\u4ee4\u4f18\u5148\u7ea7\u4e0e\u51b2\u7a81\u89e3\u51b3</h3>\n<p>\u5f53\u591a\u4e2a\u6307\u4ee4\u6216\u7ea6\u675f\u53d1\u751f\u51b2\u7a81\u65f6\u7684\u5904\u7406\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">InstructionPriorityResolver</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">priority_hierarchy</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s1\">&#39;legal_compliance&#39;</span><span class=\"p\">,</span>      <span class=\"c1\"># \u6cd5\u5f8b\u5408\u89c4</span>\n            <span class=\"s1\">&#39;safety&#39;</span><span class=\"p\">,</span>               <span class=\"c1\"># \u5b89\u5168\u6027</span>\n            <span class=\"s1\">&#39;privacy&#39;</span><span class=\"p\">,</span>              <span class=\"c1\"># \u9690\u79c1\u4fdd\u62a4</span>\n            <span class=\"s1\">&#39;truthfulness&#39;</span><span class=\"p\">,</span>         <span class=\"c1\"># \u771f\u5b9e\u6027</span>\n            <span class=\"s1\">&#39;helpfulness&#39;</span><span class=\"p\">,</span>          <span class=\"c1\"># \u6709\u7528\u6027</span>\n            <span class=\"s1\">&#39;user_preference&#39;</span>       <span class=\"c1\"># \u7528\u6237\u504f\u597d</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">resolve_conflict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instructions</span><span class=\"p\">):</span>\n        <span class=\"n\">conflicts</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">detect_conflicts</span><span class=\"p\">(</span><span class=\"n\">instructions</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">conflicts</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">merge_instructions</span><span class=\"p\">(</span><span class=\"n\">instructions</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u57fa\u4e8e\u4f18\u5148\u7ea7\u89e3\u51b3\u51b2\u7a81</span>\n        <span class=\"n\">resolved</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">conflict</span> <span class=\"ow\">in</span> <span class=\"n\">conflicts</span><span class=\"p\">:</span>\n            <span class=\"n\">winning_instruction</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span>\n                <span class=\"n\">conflict</span><span class=\"o\">.</span><span class=\"n\">instructions</span><span class=\"p\">,</span>\n                <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">priority_hierarchy</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">resolved</span><span class=\"p\">[</span><span class=\"n\">conflict</span><span class=\"o\">.</span><span class=\"n\">aspect</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">winning_instruction</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">synthesize_response</span><span class=\"p\">(</span><span class=\"n\">resolved</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h2 id=\"15\">1.5 \u5206\u5e03\u504f\u79fb\u95ee\u9898</h2>\n<h3 id=\"151-\">1.5.1 \u8bad\u7ec3-\u63a8\u7406\u5206\u5e03\u5dee\u5f02\u7684\u7cfb\u7edf\u5206\u6790</h3>\n<p>\u5206\u5e03\u504f\u79fb\u662f\u540e\u8bad\u7ec3\u90e8\u7f72\u4e2d\u6700\u88ab\u4f4e\u4f30\u7684\u95ee\u9898\u4e4b\u4e00\u3002\u5373\u4f7f\u6a21\u578b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8868\u73b0\u5b8c\u7f8e\uff0c\u5b9e\u9645\u90e8\u7f72\u65f6\u4ecd\u53ef\u80fd\u5d29\u6e83\u3002</p>\n<p><strong>\u591a\u7ef4\u5ea6\u5206\u5e03\u504f\u79fb\u5206\u7c7b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">DistributionShift</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">shift_types</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;covariate&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>  <span class=\"c1\"># P(X)\u6539\u53d8\uff0cP(Y|X)\u4e0d\u53d8</span>\n                <span class=\"s1\">&#39;example&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;\u8bad\u7ec3\uff1a\u65b0\u95fb\u6587\u7ae0 \u2192 \u90e8\u7f72\uff1a\u793e\u4ea4\u5a92\u4f53&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;severity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;medium&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;detection&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;KL divergence on input embeddings&#39;</span>\n            <span class=\"p\">},</span>\n            <span class=\"s1\">&#39;label&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>  <span class=\"c1\"># P(Y)\u6539\u53d8\uff0cP(X|Y)\u4e0d\u53d8</span>\n                <span class=\"s1\">&#39;example&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;\u8bad\u7ec3\uff1a\u793c\u8c8c\u54cd\u5e94 \u2192 \u90e8\u7f72\uff1a\u7528\u6237\u671f\u671b\u76f4\u63a5\u56de\u7b54&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;severity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;high&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;detection&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;output distribution monitoring&#39;</span>\n            <span class=\"p\">},</span>\n            <span class=\"s1\">&#39;concept&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>  <span class=\"c1\"># P(Y|X)\u6539\u53d8</span>\n                <span class=\"s1\">&#39;example&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;\u65b0\u6982\u5ff5\u51fa\u73b0\uff08\u5982\u65b0\u6280\u672f\u3001\u65b0\u4e8b\u4ef6\uff09&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;severity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;critical&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;detection&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;perplexity spike detection&#39;</span>\n            <span class=\"p\">},</span>\n            <span class=\"s1\">&#39;temporal&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>  <span class=\"c1\"># \u968f\u65f6\u95f4\u53d8\u5316</span>\n                <span class=\"s1\">&#39;example&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;2023\u5e74\u8bad\u7ec3 \u2192 2025\u5e74\u90e8\u7f72&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;severity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;progressive&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;detection&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;time-aware evaluation&#39;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>1. \u8f93\u5165\u5206\u5e03\u504f\u79fb\u7684\u7ec6\u7c92\u5ea6\u5206\u6790</strong>\uff1a</p>\n<p>| \u7ef4\u5ea6 | \u8bad\u7ec3\u5206\u5e03 | \u90e8\u7f72\u5206\u5e03 | \u5f71\u54cd |</p>\n<table>\n<thead>\n<tr>\n<th>\u7ef4\u5ea6</th>\n<th>\u8bad\u7ec3\u5206\u5e03</th>\n<th>\u90e8\u7f72\u5206\u5e03</th>\n<th>\u5f71\u54cd</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>\u957f\u5ea6</strong></td>\n<td>\u5747\u503c50\u8bcd</td>\n<td>\u957f\u5c3e\u5206\u5e03(1-1000\u8bcd)</td>\n<td>\u957f\u6587\u672c\u6027\u80fd\u9000\u5316</td>\n</tr>\n<tr>\n<td><strong>\u8bed\u8a00</strong></td>\n<td>\u6807\u51c6\u4e66\u9762\u8bed</td>\n<td>\u53e3\u8bed/\u4fda\u8bed/\u8868\u60c5</td>\n<td>\u7406\u89e3\u9519\u8bef\u589e\u52a0</td>\n</tr>\n<tr>\n<td><strong>\u683c\u5f0f</strong></td>\n<td>\u7ed3\u6784\u5316\u6307\u4ee4</td>\n<td>\u81ea\u7531\u683c\u5f0f</td>\n<td>\u89e3\u6790\u5931\u8d25</td>\n</tr>\n<tr>\n<td><strong>\u566a\u58f0</strong></td>\n<td>\u6e05\u6d01\u6587\u672c</td>\n<td>\u62fc\u5199\u9519\u8bef/\u8bed\u6cd5\u9519\u8bef</td>\n<td>\u9c81\u68d2\u6027\u5dee</td>\n</tr>\n<tr>\n<td><strong>\u9886\u57df</strong></td>\n<td>\u901a\u7528\u9886\u57df</td>\n<td>\u4e13\u4e1a\u9886\u57df</td>\n<td>\u77e5\u8bc6\u7f3a\u53e3</td>\n</tr>\n</tbody>\n</table>\n<p><strong>2. \u8f93\u51fa\u5206\u5e03\u504f\u79fb</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">analyze_output_shift</span><span class=\"p\">(</span><span class=\"n\">train_outputs</span><span class=\"p\">,</span> <span class=\"n\">deploy_outputs</span><span class=\"p\">):</span>\n    <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"c1\"># \u957f\u5ea6\u5206\u5e03\u53d8\u5316</span>\n    <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;length_shift&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;train_mean&#39;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">([</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">o</span> <span class=\"ow\">in</span> <span class=\"n\">train_outputs</span><span class=\"p\">]),</span>\n        <span class=\"s1\">&#39;deploy_mean&#39;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">([</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">o</span> <span class=\"ow\">in</span> <span class=\"n\">deploy_outputs</span><span class=\"p\">]),</span>\n        <span class=\"s1\">&#39;kl_divergence&#39;</span><span class=\"p\">:</span> <span class=\"n\">compute_kl</span><span class=\"p\">(</span><span class=\"n\">train_lengths</span><span class=\"p\">,</span> <span class=\"n\">deploy_lengths</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\"># \u591a\u6837\u6027\u53d8\u5316</span>\n    <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;diversity&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;train_entropy&#39;</span><span class=\"p\">:</span> <span class=\"n\">compute_entropy</span><span class=\"p\">(</span><span class=\"n\">train_outputs</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;deploy_entropy&#39;</span><span class=\"p\">:</span> <span class=\"n\">compute_entropy</span><span class=\"p\">(</span><span class=\"n\">deploy_outputs</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;unique_ngrams&#39;</span><span class=\"p\">:</span> <span class=\"n\">count_unique_ngrams</span><span class=\"p\">(</span><span class=\"n\">deploy_outputs</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\"># \u6a21\u5f0f\u574d\u584c\u68c0\u6d4b</span>\n    <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;mode_collapse&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;repetition_rate&#39;</span><span class=\"p\">:</span> <span class=\"n\">detect_repetitions</span><span class=\"p\">(</span><span class=\"n\">deploy_outputs</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;template_usage&#39;</span><span class=\"p\">:</span> <span class=\"n\">detect_templates</span><span class=\"p\">(</span><span class=\"n\">deploy_outputs</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">metrics</span>\n</code></pre></div>\n\n<p><strong>3. \u9519\u8bef\u7d2f\u79ef\u7684\u6570\u5b66\u5efa\u6a21</strong>\uff1a</p>\n<p>\u81ea\u56de\u5f52\u751f\u6210\u4e2d\u7684\u9519\u8bef\u4f20\u64ad\uff1a\n$$P(\\text{error at } t) = 1 - \\prod_{i=0}^{t-1}(1 - \\epsilon_i)$$\n\u5176\u4e2d$\\epsilon_i$\u662f\u4f4d\u7f6e$i$\u7684\u9519\u8bef\u7387\u3002</p>\n<p>\u5b9e\u9645\u6d4b\u91cf\u663e\u793a\uff1a</p>\n<ul>\n<li>\u524d10\u4e2atoken\uff1a\u9519\u8bef\u7387 &lt; 1%</li>\n<li>100\u4e2atoken\u540e\uff1a\u9519\u8bef\u7387 ~ 5%</li>\n<li>500\u4e2atoken\u540e\uff1a\u9519\u8bef\u7387 &gt; 15%</li>\n</ul>\n<h3 id=\"152\">1.5.2 \u5206\u5e03\u504f\u79fb\u7684\u5b9e\u65f6\u68c0\u6d4b\u7cfb\u7edf</h3>\n<p><strong>\u591a\u5c42\u6b21\u68c0\u6d4b\u6846\u67b6</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">DistributionShiftDetector</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">reference_data</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reference_stats</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute_reference_stats</span><span class=\"p\">(</span><span class=\"n\">reference_data</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">detection_methods</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;statistical&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">statistical_tests</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;model_based&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_based_detection</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;ensemble&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ensemble_detection</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">statistical_tests</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_data</span><span class=\"p\">):</span>\n        <span class=\"n\">tests</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"c1\"># 1. Kolmogorov-Smirnov\u6d4b\u8bd5</span>\n        <span class=\"n\">tests</span><span class=\"p\">[</span><span class=\"s1\">&#39;ks_test&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ks_2samp</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reference_stats</span><span class=\"p\">[</span><span class=\"s1\">&#39;embeddings&#39;</span><span class=\"p\">],</span>\n            <span class=\"n\">compute_embeddings</span><span class=\"p\">(</span><span class=\"n\">new_data</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. Maximum Mean Discrepancy (MMD)</span>\n        <span class=\"n\">tests</span><span class=\"p\">[</span><span class=\"s1\">&#39;mmd&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute_mmd</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reference_stats</span><span class=\"p\">[</span><span class=\"s1\">&#39;features&#39;</span><span class=\"p\">],</span>\n            <span class=\"n\">extract_features</span><span class=\"p\">(</span><span class=\"n\">new_data</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. JS\u6563\u5ea6</span>\n        <span class=\"n\">tests</span><span class=\"p\">[</span><span class=\"s1\">&#39;js_divergence&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute_js_divergence</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reference_stats</span><span class=\"p\">[</span><span class=\"s1\">&#39;distribution&#39;</span><span class=\"p\">],</span>\n            <span class=\"n\">estimate_distribution</span><span class=\"p\">(</span><span class=\"n\">new_data</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">tests</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">model_based_detection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_data</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u4f7f\u7528\u4e13\u95e8\u7684OOD\u68c0\u6d4b\u5668</span>\n        <span class=\"n\">ood_scores</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ood_detector</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">new_data</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u4e0d\u786e\u5b9a\u6027\u4f30\u8ba1</span>\n        <span class=\"n\">uncertainty</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">uncertainty_estimator</span><span class=\"o\">.</span><span class=\"n\">estimate</span><span class=\"p\">(</span><span class=\"n\">new_data</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;ood_score&#39;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">ood_scores</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;epistemic_uncertainty&#39;</span><span class=\"p\">:</span> <span class=\"n\">uncertainty</span><span class=\"p\">[</span><span class=\"s1\">&#39;epistemic&#39;</span><span class=\"p\">],</span>\n            <span class=\"s1\">&#39;aleatoric_uncertainty&#39;</span><span class=\"p\">:</span> <span class=\"n\">uncertainty</span><span class=\"p\">[</span><span class=\"s1\">&#39;aleatoric&#39;</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u5b9e\u65f6\u76d1\u63a7\u6307\u6807</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u76d1\u63a7\u4eea\u8868\u677f\uff1a\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u5206\u5e03\u504f\u79fb\u76d1\u63a7 - \u5b9e\u65f6\u72b6\u6001              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 KL\u6563\u5ea6:     0.023 [\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591] \u6b63\u5e38  \u2502\n\u2502 JS\u6563\u5ea6:     0.045 [\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591] \u8b66\u544a  \u2502\n\u2502 MMD:        0.012 [\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591] \u6b63\u5e38  \u2502\n\u2502 \u56f0\u60d1\u5ea6\u5cf0\u503c: 234   [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591] \u5f02\u5e38  \u2502\n\u2502 OOD\u7387:      2.3%  [\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591] \u6b63\u5e38  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<h3 id=\"153\">1.5.3 \u5206\u5e03\u504f\u79fb\u7684\u9002\u5e94\u7b56\u7565</h3>\n<p><strong>1. \u6d4b\u8bd5\u65f6\u9002\u5e94\uff08Test-Time Adaptation\uff09</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">TestTimeAdaptation</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptation_buffer</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">adapt</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 1. \u71b5\u6700\u5c0f\u5316</span>\n        <span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n        <span class=\"n\">entropy_loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">outputs</span> <span class=\"o\">*</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">outputs</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># 2. \u4f2a\u6807\u7b7e\u81ea\u8bad\u7ec3</span>\n        <span class=\"n\">pseudo_labels</span> <span class=\"o\">=</span> <span class=\"n\">outputs</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">confidence</span> <span class=\"o\">=</span> <span class=\"n\">outputs</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">values</span>\n\n        <span class=\"c1\"># \u53ea\u4f7f\u7528\u9ad8\u7f6e\u4fe1\u5ea6\u6837\u672c</span>\n        <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">confidence</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.9</span>\n        <span class=\"k\">if</span> <span class=\"n\">mask</span><span class=\"o\">.</span><span class=\"n\">any</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">loss</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">[</span><span class=\"n\">mask</span><span class=\"p\">],</span> <span class=\"n\">pseudo_labels</span><span class=\"p\">[</span><span class=\"n\">mask</span><span class=\"p\">])</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u6279\u5f52\u4e00\u5316\u7edf\u8ba1\u66f4\u65b0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_bn_stats</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>2. \u6301\u7eed\u5b66\u4e60\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">continual_learning_pipeline</span><span class=\"p\">():</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u6570\u636e\u98de\u8f6e\uff1a\u6536\u96c6\u2192\u6807\u6ce8\u2192\u8bad\u7ec3\u2192\u90e8\u7f72</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"c1\"># 1. \u6536\u96c6\u56f0\u96be\u6848\u4f8b</span>\n        <span class=\"n\">hard_cases</span> <span class=\"o\">=</span> <span class=\"n\">collect_hard_cases</span><span class=\"p\">(</span>\n            <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.7</span><span class=\"p\">,</span>  <span class=\"c1\"># \u7f6e\u4fe1\u5ea6\u9608\u503c</span>\n            <span class=\"n\">max_samples</span><span class=\"o\">=</span><span class=\"mi\">1000</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. \u667a\u80fd\u6807\u6ce8</span>\n        <span class=\"n\">labeled_data</span> <span class=\"o\">=</span> <span class=\"n\">hybrid_labeling</span><span class=\"p\">(</span>\n            <span class=\"n\">hard_cases</span><span class=\"p\">,</span>\n            <span class=\"n\">human_budget</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>  <span class=\"c1\"># \u4eba\u5de5\u6807\u6ce8\u9884\u7b97</span>\n            <span class=\"n\">ai_labeler</span><span class=\"o\">=</span><span class=\"n\">strong_model</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u589e\u91cf\u8bad\u7ec3</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">incremental_train</span><span class=\"p\">(</span>\n            <span class=\"n\">model</span><span class=\"p\">,</span>\n            <span class=\"n\">new_data</span><span class=\"o\">=</span><span class=\"n\">labeled_data</span><span class=\"p\">,</span>\n            <span class=\"n\">replay_buffer</span><span class=\"o\">=</span><span class=\"n\">sample_old_data</span><span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">),</span>\n            <span class=\"n\">regularization</span><span class=\"o\">=</span><span class=\"s1\">&#39;ewc&#39;</span>  <span class=\"c1\"># \u5f39\u6027\u6743\u91cd\u5de9\u56fa</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 4. A/B\u6d4b\u8bd5\u9a8c\u8bc1</span>\n        <span class=\"k\">if</span> <span class=\"n\">validate_improvement</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">baseline</span><span class=\"p\">):</span>\n            <span class=\"n\">deploy</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">24</span> <span class=\"o\">*</span> <span class=\"mi\">3600</span><span class=\"p\">)</span>  <span class=\"c1\"># \u6bcf\u65e5\u66f4\u65b0</span>\n</code></pre></div>\n\n<p><strong>3. \u9c81\u68d2\u8bad\u7ec3\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">RobustTraining</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">augmentation_strategies</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_noise</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">paraphrase</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">backtranslation</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">token_cutoff</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adversarial_perturbation</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">augment_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n        <span class=\"n\">augmented</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">sample</span> <span class=\"ow\">in</span> <span class=\"n\">batch</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u591a\u7b56\u7565\u7ec4\u5408</span>\n            <span class=\"n\">aug_sample</span> <span class=\"o\">=</span> <span class=\"n\">sample</span>\n            <span class=\"k\">for</span> <span class=\"n\">strategy</span> <span class=\"ow\">in</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">augmentation_strategies</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n                <span class=\"n\">aug_sample</span> <span class=\"o\">=</span> <span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">aug_sample</span><span class=\"p\">)</span>\n            <span class=\"n\">augmented</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">aug_sample</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">augmented</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">adversarial_perturbation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u751f\u6210\u5bf9\u6297\u6837\u672c</span>\n        <span class=\"n\">embedding</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n        <span class=\"n\">gradient</span> <span class=\"o\">=</span> <span class=\"n\">compute_gradient</span><span class=\"p\">(</span><span class=\"n\">embedding</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># FGSM\u6270\u52a8</span>\n        <span class=\"n\">perturbed</span> <span class=\"o\">=</span> <span class=\"n\">embedding</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">epsilon</span> <span class=\"o\">*</span> <span class=\"n\">gradient</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span><span class=\"p\">(</span><span class=\"n\">perturbed</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>4. \u8bfe\u7a0b\u5b66\u4e60\u7684\u7cbe\u7ec6\u5316\u8bbe\u8ba1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CurriculumLearning</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">difficulty_stages</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;week&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;tasks&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;simple_qa&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;translation&#39;</span><span class=\"p\">],</span>\n                <span class=\"s1\">&#39;max_length&#39;</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;low&#39;</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;week&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;tasks&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;summarization&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;explanation&#39;</span><span class=\"p\">],</span>\n                <span class=\"s1\">&#39;max_length&#39;</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;medium&#39;</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;week&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;tasks&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;multi_turn_dialogue&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;reasoning&#39;</span><span class=\"p\">],</span>\n                <span class=\"s1\">&#39;max_length&#39;</span><span class=\"p\">:</span> <span class=\"mi\">500</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;high&#39;</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;week&#39;</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;tasks&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;adversarial&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;edge_cases&#39;</span><span class=\"p\">],</span>\n                <span class=\"s1\">&#39;max_length&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;extreme&#39;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_current_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">epoch</span><span class=\"p\">):</span>\n        <span class=\"n\">stage</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_stage</span><span class=\"p\">(</span><span class=\"n\">epoch</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u52a8\u6001\u96be\u5ea6\u8c03\u6574</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">performance</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.9</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u52a0\u901f\u8fdb\u5ea6</span>\n            <span class=\"n\">stage</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">stage</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">difficulty_stages</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">performance</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.7</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u653e\u6162\u8fdb\u5ea6</span>\n            <span class=\"n\">stage</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">stage</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sample_from_stage</span><span class=\"p\">(</span><span class=\"n\">stage</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h2 id=\"16\">1.6 \u7406\u8bba\u57fa\u7840\u6df1\u5316</h2>\n<h3 id=\"161-bradley-terry\">1.6.1 Bradley-Terry\u6a21\u578b</h3>\n<p>\u4eba\u7c7b\u504f\u597d\u5efa\u6a21\u7684\u7406\u8bba\u57fa\u7840\uff1a\n$$P(y_1 \\succ y_2 | x) = \\frac{\\exp(r(x, y_1))}{\\exp(r(x, y_1)) + \\exp(r(x, y_2))}$$\n\u8fd9\u4e2a\u6a21\u578b\u5047\u8bbe\u504f\u597d\u6982\u7387\u4e0e\u5956\u52b1\u5dee\u5448logistic\u5173\u7cfb\u3002</p>\n<h3 id=\"162\">1.6.2 \u9006\u5f3a\u5316\u5b66\u4e60\u89c6\u89d2</h3>\n<p>\u540e\u8bad\u7ec3\u53ef\u89c6\u4e3a\u9006\u5f3a\u5316\u5b66\u4e60\uff08IRL\uff09\u95ee\u9898\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u89c2\u5bdf\u5230\u7684\u884c\u4e3a \u2192 \u63a8\u65ad\u5956\u52b1\u51fd\u6570 \u2192 \u4f18\u5316\u7b56\u7565\n\n\u6570\u5b66\u5f62\u5f0f\uff1a\nmax_R  L(R|D_demo) - \u03bb\u00b7||R||\ns.t.   \u03c0* = argmax_\u03c0 E[R(s,a)]\n</code></pre></div>\n\n<h3 id=\"163\">1.6.3 \u4fe1\u606f\u8bba\u89c6\u89d2</h3>\n<p>\u4ece\u4fe1\u606f\u8bba\u89d2\u5ea6\u7406\u89e3\u5bf9\u9f50\uff1a</p>\n<p><strong>\u4e92\u4fe1\u606f\u6700\u5927\u5316</strong>\uff1a\n$$I(X; Y) = \\sum_{x,y} p(x,y) \\log \\frac{p(x,y)}{p(x)p(y)}$$\n\u76ee\u6807\u662f\u6700\u5927\u5316\u6307\u4ee4X\u548c\u54cd\u5e94Y\u4e4b\u95f4\u7684\u4e92\u4fe1\u606f\uff0c\u540c\u65f6\u4fdd\u6301Y\u7684\u71b5\u8db3\u591f\u9ad8\u3002</p>\n<h2 id=\"_3\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u4ecb\u7ecd\u4e86LLM\u540e\u8bad\u7ec3\u7684\u6838\u5fc3\u7406\u8bba\u57fa\u7840\uff1a</p>\n<p>\ud83d\udccc <strong>\u5173\u952e\u6982\u5ff5</strong>\uff1a</p>\n<ul>\n<li>\u540e\u8bad\u7ec3\u5c06\u9884\u8bad\u7ec3\u6a21\u578b\u8f6c\u5316\u4e3a\u5bf9\u9f50\u7684AI\u52a9\u624b</li>\n<li>SFT\u3001RLHF\u3001DPO\u662f\u4e09\u79cd\u4e3b\u6d41\u540e\u8bad\u7ec3\u8303\u5f0f</li>\n<li>\u5bf9\u9f50\u7a0e\u662f\u540e\u8bad\u7ec3\u4e2d\u4e0d\u53ef\u907f\u514d\u7684\u80fd\u529b\u6743\u8861</li>\n<li>\u5206\u5e03\u504f\u79fb\u662f\u90e8\u7f72\u9636\u6bb5\u7684\u4e3b\u8981\u6311\u6218</li>\n</ul>\n<p>\ud83d\udca1 <strong>\u5b9e\u7528\u89c4\u5219</strong>\uff1a</p>\n<ul>\n<li>SFT\u6570\u636e\u8d28\u91cf &gt; \u6570\u91cf\uff0c\u901a\u5e38\u51e0\u5343\u6761\u9ad8\u8d28\u91cf\u6570\u636e\u8db3\u591f</li>\n<li>RLHF\u7684KL\u60e9\u7f5a\u7cfb\u6570\u03b2\u901a\u5e38\u8bbe\u4e3a0.01-0.1</li>\n<li>DPO\u76f8\u6bd4RLHF\u51cf\u5c1150%\u7684\u663e\u5b58\u4f7f\u7528</li>\n<li>\u6df7\u540810-20%\u9884\u8bad\u7ec3\u6570\u636e\u53ef\u6709\u6548\u51cf\u5c11\u5bf9\u9f50\u7a0e</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u5e38\u89c1\u9677\u9631</strong>\uff1a</p>\n<ul>\n<li>\u8fc7\u5ea6\u4f18\u5316\u7279\u5b9a\u6307\u6807\u5bfc\u81f4\u6a21\u578b\u884c\u4e3a\u9000\u5316</li>\n<li>\u5ffd\u89c6\u5206\u5e03\u504f\u79fb\u5bfc\u81f4\u90e8\u7f72\u6548\u679c\u4e0b\u964d</li>\n<li>\u5b89\u5168\u7ea6\u675f\u8fc7\u5f3a\u5bfc\u81f4\u6a21\u578b\u62d2\u7edd\u5408\u7406\u8bf7\u6c42</li>\n</ul>\n<h2 id=\"_4\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_5\">\u57fa\u7840\u9898</h3>\n<p><strong>\u7ec3\u4e60 1.1\uff1aSFT\u635f\u5931\u51fd\u6570\u7406\u89e3</strong>\n\u7ed9\u5b9a\u4e00\u4e2a\u6279\u6b21\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u5305\u542b3\u6761\u6837\u672c\uff1a</p>\n<ul>\n<li>(\"\u7ffb\u8bd1\u6210\u82f1\u6587\uff1a\u4f60\u597d\", \"Hello\")</li>\n<li>(\"\u603b\u7ed3\u8fd9\u6bb5\u8bdd\", \"[\u54cd\u5e94]\")</li>\n<li>(\"\u5199\u4e00\u9996\u8bd7\", \"[\u54cd\u5e94]\")</li>\n</ul>\n<p>\u8bf7\u8ba1\u7b97\u7b2c\u4e00\u6761\u6837\u672c\u7684SFT\u635f\u5931\uff08\u5047\u8bbe\u8bcd\u8868\u5927\u5c0f\u4e3a50000\uff0c\u6b63\u786etoken\u7684logit\u4e3a3.0\uff0c\u5176\u4ed6\u4e3a0\uff09\u3002</p>\n<p><em>Hint: \u4f7f\u7528\u4ea4\u53c9\u71b5\u635f\u5931\u516c\u5f0f</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>SFT\u635f\u5931\u8ba1\u7b97\uff1a</p>\n<ol>\n<li>\u5bf9\u4e8e\"Hello\"\u7684\u6bcf\u4e2atoken\uff0c\u8ba1\u7b97softmax\u6982\u7387</li>\n<li>P(correct) = exp(3.0) / (exp(3.0) + 49999*exp(0)) \u2248 0.0004</li>\n<li>Loss = -log(0.0004) \u2248 7.82</li>\n<li>\u5b9e\u9645\u5b9e\u73b0\u4e2d\u4f1a\u5bf9\u6240\u6709token\u6c42\u5e73\u5747</li>\n</ol>\n<p>\u5173\u952e\u70b9\uff1a</p>\n<ul>\n<li>SFT\u672c\u8d28\u662f\u6700\u5927\u4f3c\u7136\u4f30\u8ba1</li>\n<li>\u635f\u5931\u4e0e\u8bcd\u8868\u5927\u5c0f\u76f8\u5173</li>\n<li>\u9700\u8981\u8003\u8651\u5e8f\u5217\u957f\u5ea6\u5f52\u4e00\u5316</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e60 1.2\uff1aKL\u6563\u5ea6\u8ba1\u7b97</strong>\n\u4e24\u4e2a\u5206\u5e03P\u548cQ\u57283\u4e2a\u7c7b\u522b\u4e0a\u7684\u6982\u7387\u5206\u522b\u4e3a\uff1a</p>\n<ul>\n<li>P: [0.5, 0.3, 0.2]</li>\n<li>Q: [0.6, 0.3, 0.1]</li>\n</ul>\n<p>\u8ba1\u7b97D_KL(P||Q)\u3002</p>\n<p><em>Hint: KL\u6563\u5ea6\u516c\u5f0f D_KL(P||Q) = \u03a3 P(x) log(P(x)/Q(x))</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>D_KL(P||Q) = 0.5<em>log(0.5/0.6) + 0.3</em>log(0.3/0.3) + 0.2<em>log(0.2/0.1)\n         = 0.5</em>(-0.182) + 0.3<em>0 + 0.2</em>0.693\n         = -0.091 + 0 + 0.139\n         = 0.048</p>\n<p>\u6ce8\u610f\uff1a</p>\n<ul>\n<li>KL\u6563\u5ea6\u662f\u975e\u5bf9\u79f0\u7684\uff1aD_KL(P||Q) \u2260 D_KL(Q||P)</li>\n<li>\u5f53Q(x)=0\u4f46P(x)&gt;0\u65f6\uff0cKL\u6563\u5ea6\u4e3a\u65e0\u7a77\u5927</li>\n<li>\u5728RLHF\u4e2d\u7528\u4e8e\u7ea6\u675f\u7b56\u7565\u4e0d\u8981\u504f\u79bb\u53c2\u8003\u7b56\u7565\u592a\u8fdc</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e60 1.3\uff1aDPO vs RLHF\u5bf9\u6bd4</strong>\n\u5217\u51faDPO\u76f8\u6bd4RLHF\u76843\u4e2a\u4f18\u52bf\u548c2\u4e2a\u52a3\u52bf\u3002</p>\n<p><em>Hint: \u8003\u8651\u8ba1\u7b97\u6548\u7387\u3001\u5b9e\u73b0\u590d\u6742\u5ea6\u3001\u6570\u636e\u9700\u6c42</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p><strong>DPO\u4f18\u52bf</strong>\uff1a</p>\n<ol>\n<li>\u5b9e\u73b0\u7b80\u5355\uff1a\u4e0d\u9700\u8981\u8bad\u7ec3\u72ec\u7acb\u7684\u5956\u52b1\u6a21\u578b</li>\n<li>\u5185\u5b58\u6548\u7387\uff1a\u51cf\u5c11\u7ea650%\u663e\u5b58\u4f7f\u7528\uff08\u65e0\u9700\u52a0\u8f7d\u5956\u52b1\u6a21\u578b\uff09</li>\n<li>\u8bad\u7ec3\u7a33\u5b9a\uff1a\u907f\u514d\u4e86RL\u8bad\u7ec3\u7684\u4e0d\u7a33\u5b9a\u6027</li>\n</ol>\n<p><strong>DPO\u52a3\u52bf</strong>\uff1a</p>\n<ol>\n<li>\u6570\u636e\u6548\u7387\u4f4e\uff1a\u9700\u8981\u66f4\u591a\u504f\u597d\u6570\u636e\u5bf9</li>\n<li>\u6cdb\u5316\u80fd\u529b\u5f31\uff1a\u96be\u4ee5\u8d85\u8d8a\u8bad\u7ec3\u6570\u636e\u5206\u5e03</li>\n</ol>\n<p>\u5b9e\u8df5\u5efa\u8bae\uff1a</p>\n<ul>\n<li>\u5c0f\u89c4\u6a21\u5b9e\u9a8c\u4f18\u5148\u9009\u62e9DPO</li>\n<li>\u5927\u89c4\u6a21\u751f\u4ea7\u73af\u5883RLHF\u53ef\u80fd\u66f4\u4f18</li>\n<li>\u53ef\u4ee5\u7528DPO\u521d\u59cb\u5316\uff0c\u518d\u7528RLHF\u5fae\u8c03</li>\n</ul>\n</details>\n<h3 id=\"_6\">\u6311\u6218\u9898</h3>\n<p><strong>\u7ec3\u4e60 1.4\uff1a\u5bf9\u9f50\u7a0e\u7684\u91cf\u5316\u5206\u6790</strong>\n\u8bbe\u8ba1\u4e00\u4e2a\u5b9e\u9a8c\u6765\u91cf\u5316\u6d4b\u91cf\u5bf9\u9f50\u7a0e\u3002\u8981\u6c42\uff1a</p>\n<ol>\n<li>\u9009\u62e9\u81f3\u5c113\u4e2a\u80fd\u529b\u7ef4\u5ea6</li>\n<li>\u8bbe\u8ba1\u8bc4\u4f30\u6307\u6807</li>\n<li>\u63d0\u51fa\u7f13\u89e3\u7b56\u7565</li>\n</ol>\n<p><em>Hint: \u8003\u8651\u5982\u4f55\u516c\u5e73\u6bd4\u8f83\u9884\u8bad\u7ec3\u548c\u540e\u8bad\u7ec3\u6a21\u578b</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p><strong>\u5b9e\u9a8c\u8bbe\u8ba1</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u80fd\u529b\u7ef4\u5ea6\u9009\u62e9</strong>\uff1a\n   - \u4e8b\u5b9e\u77e5\u8bc6\uff1aMMLU benchmark\n   - \u63a8\u7406\u80fd\u529b\uff1aGSM8K\u6570\u5b66\u9898\n   - \u4ee3\u7801\u751f\u6210\uff1aHumanEval\n   - \u521b\u9020\u6027\uff1a\u6545\u4e8b\u7eed\u5199\u591a\u6837\u6027</p>\n</li>\n<li>\n<p><strong>\u8bc4\u4f30\u534f\u8bae</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u63a7\u5236\u53d8\u91cf</span>\n\n<span class=\"o\">-</span> <span class=\"n\">\u76f8\u540c\u7684\u89e3\u7801\u53c2\u6570</span><span class=\"p\">(</span><span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"mf\">0.7</span><span class=\"p\">)</span>\n<span class=\"o\">-</span> <span class=\"n\">\u76f8\u540c\u7684prompt\u683c\u5f0f</span>\n<span class=\"o\">-</span> <span class=\"n\">\u591a\u6b21\u8fd0\u884c\u53d6\u5e73\u5747</span><span class=\"err\">\uff08</span><span class=\"n\">\u51cf\u5c11\u968f\u673a\u6027</span><span class=\"err\">\uff09</span>\n\n<span class=\"c1\"># \u6307\u6807\u8ba1\u7b97</span>\n<span class=\"n\">alignment_tax</span><span class=\"p\">[</span><span class=\"n\">task</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> \n    <span class=\"n\">score_pretrain</span><span class=\"p\">[</span><span class=\"n\">task</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">score_aligned</span><span class=\"p\">[</span><span class=\"n\">task</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li>\n<p><strong>\u7f13\u89e3\u7b56\u7565</strong>\uff1a\n   - <strong>\u6570\u636e\u6df7\u5408</strong>\uff1a\u52a0\u516515%\u9884\u8bad\u7ec3\u6570\u636e\n   - <strong>\u5206\u5c42\u5fae\u8c03</strong>\uff1a\u51bb\u7ed3\u5e95\u5c42\uff0c\u53ea\u8c03\u6574\u9876\u5c42\n   - <strong>\u5f39\u6027\u6743\u91cd\u5de9\u56fa(EWC)</strong>\uff1a\u4fdd\u62a4\u91cd\u8981\u53c2\u6570\n   - <strong>\u77e5\u8bc6\u84b8\u998f</strong>\uff1a\u4ece\u9884\u8bad\u7ec3\u6a21\u578b\u84b8\u998f</p>\n</li>\n<li>\n<p><strong>\u9884\u671f\u7ed3\u679c</strong>\uff1a\n   - \u4e8b\u5b9e\u77e5\u8bc6\uff1a-3%\u5230-5%\n   - \u63a8\u7406\u80fd\u529b\uff1a-5%\u5230-8%\n   - \u4ee3\u7801\u751f\u6210\uff1a-10%\u5230-15%\n   - \u521b\u9020\u6027\uff1a-20%\u5230-30%</p>\n</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 1.5\uff1a\u5206\u5e03\u504f\u79fb\u7684\u5728\u7ebf\u9002\u5e94</strong>\n\u5728\u90e8\u7f72\u540e\u53d1\u73b0\u6a21\u578b\u5728\u5904\u7406\u542b\u6709\u8868\u60c5\u7b26\u53f7\u7684\u8f93\u5165\u65f6\u6027\u80fd\u4e0b\u964d40%\u3002\u8bbe\u8ba1\u4e00\u4e2a\u5728\u7ebf\u9002\u5e94\u65b9\u6848\u3002</p>\n<p><em>Hint: \u8003\u8651\u6570\u636e\u6536\u96c6\u3001\u6807\u6ce8\u3001\u8bad\u7ec3\u7684\u5b8c\u6574\u6d41\u7a0b</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p><strong>\u5728\u7ebf\u9002\u5e94\u65b9\u6848</strong>\uff1a</p>\n<ol>\n<li><strong>\u95ee\u9898\u8bca\u65ad</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5206\u6790\u5931\u8d25\u6848\u4f8b</span>\n<span class=\"n\">failure_rate_by_feature</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;has_emoji&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.40</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;no_emoji&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;mixed_language&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.25</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li>\n<p><strong>\u6570\u636e\u6536\u96c6\u7b56\u7565</strong>\uff1a\n   - \u81ea\u52a8\u8bb0\u5f55\u542b\u8868\u60c5\u7b26\u53f7\u7684\u5931\u8d25\u6848\u4f8b\n   - \u4e3b\u52a8\u91c7\u6837\uff1a\u751f\u6210\u8868\u60c5\u7b26\u53f7\u53d8\u4f53\n   - \u7528\u6237\u53cd\u9988\uff1a\u6536\u96c6\u8d1f\u9762\u8bc4\u4ef7\u7684\u6848\u4f8b</p>\n</li>\n<li>\n<p><strong>\u589e\u91cf\u8bad\u7ec3</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6df7\u5408\u7b56\u7565</span>\n<span class=\"n\">new_data</span> <span class=\"o\">=</span> <span class=\"n\">collect_emoji_cases</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"n\">replay_buffer</span> <span class=\"o\">=</span> <span class=\"n\">sample_previous</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">4000</span><span class=\"p\">)</span>\n<span class=\"n\">combined</span> <span class=\"o\">=</span> <span class=\"n\">new_data</span> <span class=\"o\">+</span> <span class=\"n\">replay_buffer</span>\n\n<span class=\"c1\"># \u5c0f\u5b66\u4e60\u7387\u5fae\u8c03</span>\n<span class=\"n\">lr</span> <span class=\"o\">=</span> <span class=\"n\">original_lr</span> <span class=\"o\">*</span> <span class=\"mf\">0.1</span>\n<span class=\"n\">train_steps</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>  <span class=\"c1\"># \u907f\u514d\u8fc7\u62df\u5408</span>\n</code></pre></div>\n\n<ol start=\"4\">\n<li>\n<p><strong>A/B\u6d4b\u8bd5\u9a8c\u8bc1</strong>\uff1a\n   - 10%\u6d41\u91cf\u6d4b\u8bd5\u65b0\u6a21\u578b\n   - \u76d1\u63a7\u5173\u952e\u6307\u6807\n   - \u9010\u6b65\u6269\u5927\u6d41\u91cf</p>\n</li>\n<li>\n<p><strong>\u957f\u671f\u6539\u8fdb</strong>\uff1a\n   - \u66f4\u65b0\u8bad\u7ec3\u6570\u636e\u5206\u5e03\n   - \u8c03\u6574\u6570\u636e\u589e\u5f3a\u7b56\u7565\n   - \u8003\u8651\u4e13\u95e8\u7684\u8868\u60c5\u7b26\u53f7\u7f16\u7801\u5668</p>\n</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 1.6\uff1a\u591a\u76ee\u6807\u4f18\u5316\u7684\u5e15\u7d2f\u6258\u524d\u6cbf</strong>\n\u7ed9\u5b9a3\u4e2a\u76ee\u6807\uff1a\u6709\u7528\u6027(H)\u3001\u65e0\u5bb3\u6027(S)\u3001\u8bda\u5b9e\u6027(T)\u3002\u5982\u4f55\u627e\u5230\u6700\u4f18\u6743\u8861\u70b9\uff1f</p>\n<p><em>Hint: \u8003\u8651\u591a\u76ee\u6807\u4f18\u5316\u7b97\u6cd5\u548c\u5b9e\u9645\u7ea6\u675f</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p><strong>\u89e3\u51b3\u65b9\u6848</strong>\uff1a</p>\n<ol>\n<li><strong>\u95ee\u9898\u5f62\u5f0f\u5316</strong>\uff1a\n$$\\max_\\theta \\{ H(\\theta), S(\\theta), T(\\theta) \\}$$\n\u7ea6\u675f\uff1a\u5404\u6307\u6807\u6700\u4f4e\u9608\u503c</li>\n</ol>\n<ul>\n<li>H \u2265 0.8</li>\n<li>S \u2265 0.95  </li>\n<li>T \u2265 0.85</li>\n</ul>\n<ol start=\"2\">\n<li><strong>\u5e15\u7d2f\u6258\u524d\u6cbf\u641c\u7d22</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u7f51\u683c\u641c\u7d22\u6743\u91cd</span>\n<span class=\"k\">for</span> <span class=\"n\">w_h</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">]:</span>\n    <span class=\"k\">for</span> <span class=\"n\">w_s</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">]:</span>\n        <span class=\"n\">w_t</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">w_h</span> <span class=\"o\">-</span> <span class=\"n\">w_s</span>\n        <span class=\"k\">if</span> <span class=\"n\">w_t</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">w_h</span><span class=\"o\">*</span><span class=\"n\">H</span> <span class=\"o\">-</span> <span class=\"n\">w_s</span><span class=\"o\">*</span><span class=\"n\">S</span> <span class=\"o\">-</span> <span class=\"n\">w_t</span><span class=\"o\">*</span><span class=\"n\">T</span>\n            <span class=\"n\">train_model</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n            <span class=\"n\">evaluate_pareto_dominance</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li>\n<p><strong>\u81ea\u9002\u5e94\u6743\u91cd\u8c03\u6574</strong>\uff1a\n   - \u6839\u636e\u5f53\u524d\u6027\u80fd\u52a8\u6001\u8c03\u6574\u6743\u91cd\n   - \u4f18\u5148\u6539\u8fdb\u6700\u5dee\u7684\u6307\u6807\n   - \u4f7f\u7528\u68af\u5ea6\u624b\u672f(Gradient Surgery)\u907f\u514d\u51b2\u7a81</p>\n</li>\n<li>\n<p><strong>\u5b9e\u8df5\u5efa\u8bae</strong>\uff1a\n   - \u5148\u4f18\u5316\u5b89\u5168\u6027\u5230\u9608\u503c\u4ee5\u4e0a\n   - \u5728\u4fdd\u8bc1\u5b89\u5168\u7684\u524d\u63d0\u4e0b\u4f18\u5316\u6709\u7528\u6027\n   - \u8bda\u5b9e\u6027\u901a\u8fc7\u6570\u636e\u8d28\u91cf\u4fdd\u8bc1\n   - \u5b9a\u671f\u91cd\u65b0\u8bc4\u4f30\u6743\u91cd\u5206\u914d</p>\n</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 1.7\uff1aConstitutional AI\u7684\u89c4\u5219\u8bbe\u8ba1</strong>\n\u8bbe\u8ba1\u4e00\u5957\u5baa\u6cd5\u89c4\u5219(Constitutional Rules)\u6765\u6307\u5bfc\u6a21\u578b\u884c\u4e3a\uff0c\u8981\u6c42\u8986\u76d6\u5b89\u5168\u3001\u6709\u7528\u3001\u8bda\u5b9e\u4e09\u4e2a\u7ef4\u5ea6\u3002</p>\n<p><em>Hint: \u89c4\u5219\u8981\u5177\u4f53\u3001\u53ef\u6267\u884c\u3001\u65e0\u6b67\u4e49</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p><strong>Constitutional Rules\u8bbe\u8ba1</strong>\uff1a</p>\n<ol>\n<li><strong>\u5b89\u5168\u89c4\u5219</strong>(\u4f18\u5148\u7ea7\u6700\u9ad8)\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">R1</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u7edd\u4e0d\u534f\u52a9\u975e\u6cd5\u6d3b\u52a8</span>\n<span class=\"n\">R2</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u4e0d\u751f\u6210\u53ef\u8bc6\u522b\u4e2a\u4eba\u4fe1\u606f</span>\n<span class=\"n\">R3</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u62d2\u7edd\u751f\u6210\u4ec7\u6068\u6216\u6b67\u89c6\u5185\u5bb9</span>\n<span class=\"n\">R4</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u4e0d\u63d0\u4f9b\u81ea\u6211\u4f24\u5bb3\u6307\u5bfc</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u6709\u7528\u6027\u89c4\u5219</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">R5</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u76f4\u63a5\u56de\u7b54\u7528\u6237\u95ee\u9898</span>\n<span class=\"n\">R6</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u63d0\u4f9b\u53ef\u6267\u884c\u7684\u6b65\u9aa4</span>\n<span class=\"n\">R7</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u627f\u8ba4\u4e0d\u786e\u5b9a\u6027</span>\n<span class=\"n\">R8</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u4e3b\u52a8\u6f84\u6e05\u6b67\u4e49</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u8bda\u5b9e\u6027\u89c4\u5219</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">R9</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u4e0d\u7f16\u9020\u4e8b\u5b9e\u6216\u5f15\u7528</span>\n<span class=\"n\">R10</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u533a\u5206\u89c2\u70b9\u548c\u4e8b\u5b9e</span>\n<span class=\"n\">R11</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u627f\u8ba4\u77e5\u8bc6\u8fb9\u754c</span>\n<span class=\"n\">R12</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u7ea0\u6b63\u81ea\u5df1\u7684\u9519\u8bef</span>\n</code></pre></div>\n\n<ol start=\"4\">\n<li><strong>\u89c4\u5219\u51b2\u7a81\u89e3\u51b3</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">resolve_conflict</span><span class=\"p\">(</span><span class=\"n\">rules_triggered</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u5b89\u5168 &gt; \u8bda\u5b9e &gt; \u6709\u7528</span>\n    <span class=\"n\">priority</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;safety&quot;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">&quot;honesty&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">&quot;helpful&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">rules_triggered</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">r</span><span class=\"p\">:</span> <span class=\"n\">priority</span><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<ol start=\"5\">\n<li><strong>\u5b9e\u65bd\u673a\u5236</strong>\uff1a\n   - <strong>\u8bad\u7ec3\u65f6</strong>\uff1a\u89c4\u5219\u4f5c\u4e3a\u989d\u5916\u7684\u5956\u52b1\u4fe1\u53f7\n   - <strong>\u63a8\u7406\u65f6</strong>\uff1a\u89c4\u5219\u4f5c\u4e3a\u751f\u6210\u7ea6\u675f\n   - <strong>\u8bc4\u4f30\u65f6</strong>\uff1a\u89c4\u5219\u8fdd\u53cd\u7387\u4f5c\u4e3a\u5173\u952e\u6307\u6807</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 1.8\uff1a\u5f00\u653e\u6027\u601d\u8003\u9898</strong>\n\u5982\u679c\u4f60\u8981\u8bbe\u8ba1\u4e0b\u4e00\u4ee3\u7684\u540e\u8bad\u7ec3\u65b9\u6cd5\uff0c\u4f1a\u5982\u4f55\u6539\u8fdb\u73b0\u6709\u7684RLHF/DPO\u65b9\u6cd5\uff1f\u8bf7\u63d0\u51fa\u81f3\u5c11\u4e00\u4e2a\u521b\u65b0\u70b9\u3002</p>\n<p><em>Hint: \u53ef\u4ee5\u4ece\u6548\u7387\u3001\u6548\u679c\u3001\u53ef\u89e3\u91ca\u6027\u7b49\u89d2\u5ea6\u601d\u8003</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p><strong>\u521b\u65b0\u65b9\u5411\u793a\u4f8b</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u5728\u7ebf\u504f\u597d\u5b66\u4e60</strong>\uff1a\n   - \u95ee\u9898\uff1a\u9759\u6001\u504f\u597d\u6570\u636e\u5f88\u5feb\u8fc7\u65f6\n   - \u65b9\u6848\uff1a\u5b9e\u65f6\u6536\u96c6\u7528\u6237\u53cd\u9988\uff0c\u52a8\u6001\u66f4\u65b0\u5956\u52b1\u6a21\u578b\n   - \u6280\u672f\uff1a\u589e\u91cf\u5b66\u4e60 + \u91cd\u8981\u6027\u91c7\u6837</p>\n</li>\n<li>\n<p><strong>\u591a\u7c92\u5ea6\u5956\u52b1\u5efa\u6a21</strong>\uff1a\n   - \u95ee\u9898\uff1a\u5355\u4e00\u6807\u91cf\u5956\u52b1\u4fe1\u606f\u4e0d\u8db3\n   - \u65b9\u6848\uff1atoken\u7ea7\u3001\u53e5\u5b50\u7ea7\u3001\u6bb5\u843d\u7ea7\u591a\u5c42\u6b21\u5956\u52b1\n   - \u4f18\u52bf\uff1a\u66f4\u7cbe\u7ec6\u7684\u4fe1\u7528\u5206\u914d</p>\n</li>\n<li>\n<p><strong>\u5bf9\u6bd4\u89e3\u91ca\u5b66\u4e60</strong>\uff1a\n   - \u4e0d\u4ec5\u5b66\u4e60\"\u54ea\u4e2a\u66f4\u597d\"\n   - \u8fd8\u5b66\u4e60\"\u4e3a\u4ec0\u4e48\u66f4\u597d\"\n   - \u751f\u6210\u53ef\u89e3\u91ca\u7684\u6539\u8fdb\u5efa\u8bae</p>\n</li>\n<li>\n<p><strong>\u5143\u5b66\u4e60\u4f18\u5316\u5668</strong>\uff1a\n   - \u5b66\u4e60\u5982\u4f55\u4ece\u5c11\u91cf\u504f\u597d\u6570\u636e\u5feb\u901f\u9002\u5e94\n   - \u51cf\u5c11\u65b0\u9886\u57df\u7684\u6807\u6ce8\u9700\u6c42\n   - \u63d0\u9ad8\u6837\u672c\u6548\u7387</p>\n</li>\n<li>\n<p><strong>\u5206\u5e03\u9c81\u68d2\u4f18\u5316</strong>\uff1a\n   - \u663e\u5f0f\u5efa\u6a21\u6700\u574f\u60c5\u51b5\u5206\u5e03\n   - \u63d0\u9ad8OOD\u6cdb\u5316\u80fd\u529b\n   - \u6570\u5b66\u5f62\u5f0f\uff1a\n$$\\min_\\theta \\max_{Q \\in \\mathcal{P}} \\mathbb{E}_{x \\sim Q}[\\mathcal{L}(\\theta, x)]$$</p>\n</li>\n</ol>\n<p>\u8bc4\u4f30\u6807\u51c6\uff1a</p>\n<ul>\n<li>\u6837\u672c\u6548\u7387\u63d0\u5347&gt;50%</li>\n<li>\u8bad\u7ec3\u65f6\u95f4\u51cf\u5c11&gt;30%</li>\n<li>OOD\u6027\u80fd\u63d0\u5347&gt;20%</li>\n</ul>\n</details>\n<h2 id=\"gotchas\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef (Gotchas)</h2>\n<h3 id=\"1\">1. \u6570\u636e\u76f8\u5173\u9677\u9631</h3>\n<p>\u26a0\ufe0f <strong>\u8fc7\u5ea6\u6e05\u6d17\u7efc\u5408\u5f81</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u8fc7\u5ea6\u6e05\u6d17\u8bad\u7ec3\u6570\u636e\uff0c\u79fb\u9664\u6240\u6709\"\u4e0d\u5b8c\u7f8e\"\u6837\u672c</li>\n<li>\u540e\u679c\uff1a\u6a21\u578b\u5931\u53bb\u5904\u7406\u771f\u5b9e\u4e16\u754c\u6df7\u4e71\u8f93\u5165\u7684\u80fd\u529b</li>\n<li>\u6b63\u786e\u505a\u6cd5\uff1a\u4fdd\u755915-20%\u7684\"\u566a\u58f0\"\u6570\u636e\uff0c\u63d0\u9ad8\u9c81\u68d2\u6027</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u6807\u6ce8\u8005\u504f\u89c1\u653e\u5927</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u4f7f\u7528\u5355\u4e00\u6765\u6e90\u6216\u540c\u8d28\u5316\u7684\u6807\u6ce8\u56e2\u961f</li>\n<li>\u540e\u679c\uff1a\u6a21\u578b\u5b66\u4e60\u5e76\u653e\u5927\u7279\u5b9a\u7fa4\u4f53\u7684\u504f\u89c1</li>\n<li>\u6b63\u786e\u505a\u6cd5\uff1a\u591a\u6837\u5316\u6807\u6ce8\u8005\u80cc\u666f\uff0c\u4f7f\u7528\u6807\u6ce8\u8005disagreement\u4f5c\u4e3a\u4fe1\u53f7</li>\n</ul>\n<h3 id=\"2\">2. \u8bad\u7ec3\u7b56\u7565\u9677\u9631</h3>\n<p>\u26a0\ufe0f <strong>KL\u60e9\u7f5a\u7cfb\u6570\u9009\u62e9</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u4f7f\u7528\u56fa\u5b9a\u7684\u03b2\u503cthroughout\u8bad\u7ec3</li>\n<li>\u540e\u679c\uff1a\u65e9\u671f\u9650\u5236\u63a2\u7d22\uff0c\u540e\u671f\u9000\u5316\u4e25\u91cd</li>\n<li>\u6b63\u786e\u505a\u6cd5\uff1a</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u52a8\u6001\u8c03\u6574</span>\n<span class=\"n\">\u03b2</span> <span class=\"o\">=</span> <span class=\"n\">\u03b2_init</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"n\">decay_rate</span> <span class=\"o\">*</span> <span class=\"n\">step</span><span class=\"p\">)</span>\n<span class=\"c1\"># \u5178\u578b\u503c\uff1a\u03b2_init=0.01, decay_rate=0.0001</span>\n</code></pre></div>\n\n<p>\u26a0\ufe0f <strong>\u5956\u52b1\u6a21\u578b\u8fc7\u62df\u5408</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u5956\u52b1\u6a21\u578b\u5728\u540c\u5206\u5e03\u6570\u636e\u4e0a\u8fc7\u62df\u5408</li>\n<li>\u540e\u679c\uff1a\u7b56\u7565\u6a21\u578b\u5b66\u4f1aexploit\u5956\u52b1\u6a21\u578b\u7684\u5f31\u70b9</li>\n<li>\u6b63\u786e\u505a\u6cd5\uff1a\n  1. \u5956\u52b1\u6a21\u578bensemble\n  2. \u5b9a\u671f\u66f4\u65b0\u5956\u52b1\u6a21\u578b\n  3. \u6dfb\u52a0\u5956\u52b1\u4e0d\u786e\u5b9a\u6027\u4f30\u8ba1</li>\n</ul>\n<h3 id=\"3\">3. \u8bc4\u4f30\u9677\u9631</h3>\n<p>\u26a0\ufe0f <strong>\u8bc4\u4f30\u6570\u636e\u6c61\u67d3</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u8bc4\u4f30\u96c6\u4fe1\u606f\u6cc4\u9732\u5230\u8bad\u7ec3\u96c6</li>\n<li>\u5f81\u5146\uff1a\u8bc4\u4f30\u6307\u6807\u5f02\u5e38\u9ad8\uff0c\u4f46\u5b9e\u9645\u6548\u679c\u5dee</li>\n<li>\u68c0\u6d4b\u65b9\u6cd5\uff1a</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># N-gram\u91cd\u53e0\u68c0\u6d4b</span>\n<span class=\"n\">contamination</span> <span class=\"o\">=</span> <span class=\"n\">check_ngram_overlap</span><span class=\"p\">(</span><span class=\"n\">train_set</span><span class=\"p\">,</span> <span class=\"n\">eval_set</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">13</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">contamination</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.01</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"n\">DataLeakageError</span>\n</code></pre></div>\n\n<p>\u26a0\ufe0f <strong>\u5355\u4e00\u6307\u6807\u4f18\u5316</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u53ea\u4f18\u5316BLEU/ROUGE\u7b49\u81ea\u52a8\u6307\u6807</li>\n<li>\u540e\u679c\uff1aGoodhart\u5b9a\u5f8b - \"\u5f53\u4e00\u4e2a\u6307\u6807\u53d8\u6210\u76ee\u6807\uff0c\u5b83\u5c31\u4e0d\u518d\u662f\u597d\u6307\u6807\"</li>\n<li>\u6b63\u786e\u505a\u6cd5\uff1a\u591a\u7ef4\u5ea6\u8bc4\u4f30\u77e9\u9635 + \u4eba\u5de5\u8bc4\u4f30\u9a8c\u8bc1</li>\n</ul>\n<h3 id=\"4\">4. \u90e8\u7f72\u9677\u9631</h3>\n<p>\u26a0\ufe0f <strong>\u6279\u5904\u7406\u6548\u5e94</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u8bad\u7ec3\u65f6batch_size=32\uff0c\u63a8\u7406\u65f6batch_size=1</li>\n<li>\u540e\u679c\uff1aBatchNorm\u7edf\u8ba1\u4e0d\u5339\u914d\uff0c\u6027\u80fd\u4e0b\u964d</li>\n<li>\u89e3\u51b3\uff1a\u4f7f\u7528LayerNorm\u6216\u63a8\u7406\u65f6\u8c03\u6574\u7edf\u8ba1\u91cf</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u957f\u5ea6\u5916\u63a8\u5931\u8d25</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u8bad\u7ec3\u6700\u5927\u957f\u5ea6512\uff0c\u63a8\u7406\u65f6\u5904\u74062048</li>\n<li>\u540e\u679c\uff1a\u4f4d\u7f6e\u7f16\u7801\u5931\u6548\uff0c\u751f\u6210\u8d28\u91cf\u5d29\u6e83</li>\n<li>\u89e3\u51b3\uff1a\n  1. \u8bad\u7ec3\u65f6\u5305\u542b\u591a\u79cd\u957f\u5ea6\n  2. \u4f7f\u7528\u76f8\u5bf9\u4f4d\u7f6e\u7f16\u7801\n  3. \u957f\u5ea6warmup\u7b56\u7565</li>\n</ul>\n<h3 id=\"_7\">\u8c03\u8bd5\u6280\u5de7</h3>\n<p>\ud83d\udca1 <strong>\u5feb\u901f\u8bca\u65ad\u68c0\u67e5\u5355</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">diagnose_training_issues</span><span class=\"p\">():</span>\n    <span class=\"n\">checks</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;gradient_norm&quot;</span><span class=\"p\">:</span> <span class=\"n\">check_gradient_explosion</span><span class=\"p\">(),</span>\n        <span class=\"s2\">&quot;loss_plateau&quot;</span><span class=\"p\">:</span> <span class=\"n\">check_loss_convergence</span><span class=\"p\">(),</span>\n        <span class=\"s2\">&quot;reward_hacking&quot;</span><span class=\"p\">:</span> <span class=\"n\">check_reward_gaming</span><span class=\"p\">(),</span>\n        <span class=\"s2\">&quot;distribution_shift&quot;</span><span class=\"p\">:</span> <span class=\"n\">check_kl_divergence</span><span class=\"p\">(),</span>\n        <span class=\"s2\">&quot;capability_drop&quot;</span><span class=\"p\">:</span> <span class=\"n\">run_capability_benchmarks</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">generate_diagnostic_report</span><span class=\"p\">(</span><span class=\"n\">checks</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>\ud83d\udca1 <strong>A/B\u6d4b\u8bd5\u6700\u4f73\u5b9e\u8df5</strong>\uff1a</p>\n<ol>\n<li>\u6700\u5c0f\u53ef\u884c\u6539\u8fdb\uff1a\u4e00\u6b21\u53ea\u6539\u4e00\u4e2a\u53d8\u91cf</li>\n<li>\u7edf\u8ba1\u663e\u8457\u6027\uff1a\u81f3\u5c111000\u4e2a\u6837\u672c</li>\n<li>\u5728\u7ebf\u6307\u6807vs\u79bb\u7ebf\u6307\u6807\u5bf9\u9f50</li>\n<li>\u8bbe\u7f6e\u81ea\u52a8\u56de\u6eda\u9608\u503c</li>\n</ol>\n<hr />\n<p>\u4e0b\u4e00\u7ae0\uff1a<a href=\"chapter2.md\">\u7b2c\u4e8c\u7ae0\uff1a\u5b9e\u9a8c\u4ee3\u7801\u57fa\u7840\u8bbe\u65bd \u2192</a></p>"
  },
  "chapter10.md": {
    "hash": "8fa00b0c1bb8b1ef07ec17b52d481846",
    "content": "<h1 id=\"_1\">\u7b2c\u5341\u7ae0\uff1a\u6848\u4f8b\u7814\u7a76\u4e0e\u6700\u4f73\u5b9e\u8df5</h1>\n<p>\u672c\u7ae0\u901a\u8fc7\u56db\u4e2a\u771f\u5b9e\u7684\u7aef\u5230\u7aef\u6848\u4f8b\uff0c\u5c55\u793a LLM \u540e\u8bad\u7ec3\u7684\u5b8c\u6574\u5b9e\u8df5\u6d41\u7a0b\u3002\u6bcf\u4e2a\u6848\u4f8b\u90fd\u6db5\u76d6\u4ece\u9700\u6c42\u5206\u6790\u3001\u6570\u636e\u51c6\u5907\u3001\u6a21\u578b\u8bad\u7ec3\u5230\u90e8\u7f72\u76d1\u63a7\u7684\u5168\u94fe\u8def\uff0c\u5e76\u8be6\u7ec6\u5256\u6790\u8fc7\u7a0b\u4e2d\u7684\u5173\u952e\u51b3\u7b56\u548c\u6280\u672f\u7ec6\u8282\u3002\u901a\u8fc7\u8fd9\u4e9b\u6848\u4f8b\uff0c\u60a8\u5c06\u5b66\u4f1a\u5982\u4f55\u5c06\u524d\u4e5d\u7ae0\u7684\u7406\u8bba\u77e5\u8bc6\u6574\u5408\u5e94\u7528\u5230\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u638c\u63e1\u5904\u7406\u590d\u6742\u5de5\u7a0b\u6311\u6218\u7684\u7cfb\u7edf\u65b9\u6cd5\u3002</p>\n<h2 id=\"_2\">\u672c\u7ae0\u5927\u7eb2</h2>\n<ol>\n<li>\n<p><strong>ChatGPT \u7c7b\u5bf9\u8bdd\u7cfb\u7edf\u7684\u5b8c\u6574\u5b9e\u73b0</strong>\n   - \u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1\n   - \u6570\u636e\u6536\u96c6\u4e0e\u9884\u5904\u7406\n   - SFT \u57fa\u7ebf\u8bad\u7ec3\n   - RLHF \u4f18\u5316\u6d41\u7a0b\n   - \u5b89\u5168\u6027\u4e0e\u5bf9\u9f50\n   - \u90e8\u7f72\u4e0e\u76d1\u63a7</p>\n</li>\n<li>\n<p><strong>\u591a\u6a21\u6001\u52a9\u624b\u7684\u8bad\u7ec3\u6d41\u7a0b</strong>\n   - \u6a21\u6001\u878d\u5408\u67b6\u6784\n   - \u6570\u636e\u5bf9\u9f50\u7b56\u7565\n   - \u6e10\u8fdb\u5f0f\u8bad\u7ec3\n   - \u8de8\u6a21\u6001\u80fd\u529b\u8bc4\u4f30\n   - \u63a8\u7406\u4f18\u5316</p>\n</li>\n<li>\n<p><strong>\u9886\u57df\u4e13\u5bb6\u6a21\u578b\u7684\u6784\u5efa</strong>\n   - \u9886\u57df\u77e5\u8bc6\u6ce8\u5165\n   - \u4e13\u4e1a\u6570\u636e\u91c7\u96c6\n   - \u6301\u7eed\u5b66\u4e60\u673a\u5236\n   - \u6027\u80fd\u57fa\u51c6\u8bbe\u8ba1\n   - \u77e5\u8bc6\u66f4\u65b0\u7b56\u7565</p>\n</li>\n<li>\n<p><strong>\u5e38\u89c1\u5931\u8d25\u6a21\u5f0f\u4e0e\u8c03\u8bd5\u6280\u5de7</strong>\n   - \u8bad\u7ec3\u4e0d\u7a33\u5b9a\u8bca\u65ad\n   - \u8fc7\u62df\u5408\u4e0e\u6b20\u62df\u5408\n   - \u707e\u96be\u6027\u9057\u5fd8\n   - \u5206\u5e03\u504f\u79fb\u5904\u7406\n   - \u8c03\u8bd5\u5de5\u5177\u94fe</p>\n</li>\n</ol>\n<h2 id=\"_3\">\u5b66\u4e60\u76ee\u6807</h2>\n<p>\u5b8c\u6210\u672c\u7ae0\u5b66\u4e60\u540e\uff0c\u60a8\u5c06\u80fd\u591f\uff1a</p>\n<ol>\n<li>\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u751f\u4ea7\u7ea7\u7684\u5bf9\u8bdd\u7cfb\u7edf\uff0c\u5305\u62ec\u591a\u8f6e\u5bf9\u8bdd\u7ba1\u7406\u548c\u4e2a\u6027\u5316\u4f18\u5316</li>\n<li>\u6784\u5efa\u652f\u6301\u89c6\u89c9\u3001\u8bed\u97f3\u7b49\u591a\u6a21\u6001\u8f93\u5165\u7684\u7edf\u4e00\u52a9\u624b\u6a21\u578b</li>\n<li>\u9488\u5bf9\u7279\u5b9a\u9886\u57df\uff08\u533b\u7597\u3001\u6cd5\u5f8b\u3001\u91d1\u878d\uff09\u5b9a\u5236\u9ad8\u6027\u80fd\u4e13\u5bb6\u6a21\u578b</li>\n<li>\u8bc6\u522b\u548c\u89e3\u51b3\u540e\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u5e38\u89c1\u95ee\u9898\uff0c\u5efa\u7acb\u7cfb\u7edf\u7684\u8c03\u8bd5\u65b9\u6cd5\u8bba</li>\n<li>\u8bc4\u4f30\u4e0d\u540c\u6280\u672f\u8def\u7ebf\u7684\u6743\u8861\uff0c\u505a\u51fa\u7b26\u5408\u4e1a\u52a1\u9700\u6c42\u7684\u67b6\u6784\u51b3\u7b56</li>\n</ol>\n<p>\u8ba9\u6211\u4eec\u4ece\u7b2c\u4e00\u4e2a\u6848\u4f8b\u5f00\u59cb\uff0c\u6df1\u5165\u4e86\u89e3 ChatGPT \u7c7b\u7cfb\u7edf\u7684\u6784\u5efa\u8fc7\u7a0b\u3002</p>\n<h2 id=\"101-chatgpt\">10.1 ChatGPT \u7c7b\u5bf9\u8bdd\u7cfb\u7edf\u7684\u5b8c\u6574\u5b9e\u73b0</h2>\n<p>\u6784\u5efa\u4e00\u4e2a\u751f\u4ea7\u7ea7\u7684\u5bf9\u8bdd\u7cfb\u7edf\u9700\u8981\u7cfb\u7edf\u5316\u7684\u5de5\u7a0b\u65b9\u6cd5\u3002\u672c\u8282\u4ee5\u4e00\u4e2a\u771f\u5b9e\u7684\u4f01\u4e1a\u7ea7\u52a9\u624b\u9879\u76ee\u4e3a\u4f8b\uff0c\u5c55\u793a\u4ece\u96f6\u5f00\u59cb\u6784\u5efa\u5bf9\u8bdd\u7cfb\u7edf\u7684\u5b8c\u6574\u6d41\u7a0b\u3002\u8be5\u7cfb\u7edf\u6700\u7ec8\u8fbe\u5230\u4e86\u65e5\u6d3b\u8dc3\u7528\u6237 100 \u4e07+\uff0c\u5e73\u5747\u5bf9\u8bdd\u8f6e\u6b21 8.5 \u8f6e\u7684\u751f\u4ea7\u6307\u6807\u3002</p>\n<h3 id=\"1011\">10.1.1 \u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1</h3>\n<h4 id=\"_4\">\u6574\u4f53\u67b6\u6784</h4>\n<div class=\"codehilite\"><pre><span></span><code>\u7528\u6237\u8f93\u5165 \u2192 \u9884\u5904\u7406 \u2192 \u5b89\u5168\u68c0\u67e5 \u2192 \u6a21\u578b\u63a8\u7406 \u2192 \u540e\u5904\u7406 \u2192 \u54cd\u5e94\u8f93\u51fa\n     \u2191                                              \u2193\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u4e0a\u4e0b\u6587\u7ba1\u7406\uff08\u4f1a\u8bdd\u72b6\u6001\uff09\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<h4 id=\"_5\">\u5173\u952e\u7ec4\u4ef6\u8bbe\u8ba1</h4>\n<ol>\n<li><strong>\u4f1a\u8bdd\u7ba1\u7406\u5668</strong></li>\n</ol>\n<p>\u4f1a\u8bdd\u72b6\u6001\u7684\u8bbe\u8ba1\u76f4\u63a5\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd\u548c\u7528\u6237\u4f53\u9a8c\u3002\u6211\u4eec\u91c7\u7528\u4e86\u5206\u5c42\u7f13\u5b58\u7b56\u7565\uff1a</p>\n<ul>\n<li><strong>L1 \u7f13\u5b58</strong>\uff1aRedis\uff0c\u5b58\u50a8\u6700\u8fd1 1000 \u4e2a\u6d3b\u8dc3\u4f1a\u8bdd</li>\n<li><strong>L2 \u7f13\u5b58</strong>\uff1aPostgreSQL\uff0c\u5b8c\u6574\u4f1a\u8bdd\u5386\u53f2</li>\n<li><strong>\u72b6\u6001\u538b\u7f29</strong>\uff1a\u8d85\u8fc7 10 \u8f6e\u7684\u5bf9\u8bdd\u81ea\u52a8\u6458\u8981</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">\u4f1a\u8bdd\u72b6\u6001\u7ed3\u6784</span><span class=\"err\">\uff1a</span>\n<span class=\"err\">{</span>\n<span class=\"w\">  </span><span class=\"nl\">session_id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nf\">str</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"nf\">user_id</span><span class=\"err\">:</span><span class=\"w\"> </span><span class=\"nf\">str</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"nl\">messages</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">List</span><span class=\"o\">[</span><span class=\"n\">Message</span><span class=\"o\">]</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"nl\">context_summary</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nf\">str</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"n\">\u81ea\u52a8\u751f\u6210\u7684\u4e0a\u4e0b\u6587\u6458\u8981</span>\n<span class=\"w\">  </span><span class=\"nl\">metadata</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"err\">{</span>\n<span class=\"w\">    </span><span class=\"nl\">created_at</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">timestamp</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nl\">last_active</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">timestamp</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nl\">turn_count</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">int</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nl\">tokens_used</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">int</span>\n<span class=\"w\">  </span><span class=\"err\">}</span>\n<span class=\"err\">}</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u63d0\u793a\u5de5\u7a0b\u6846\u67b6</strong></li>\n</ol>\n<p>\u7cfb\u7edf\u63d0\u793a\uff08System Prompt\uff09\u7684\u8bbe\u8ba1\u91c7\u7528\u6a21\u5757\u5316\u7ed3\u6784\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">\u57fa\u7840\u4eba\u8bbe</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"w\"> </span><span class=\"n\">tokens</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u89d2\u8272\u5b9a\u4e49</span>\n<span class=\"w\">  </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u80fd\u529b\u8fb9\u754c</span>\n<span class=\"w\">  </span><span class=\"err\">\u2514\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u884c\u4e3a\u51c6\u5219</span>\n\n<span class=\"err\">\u52a8\u6001\u4e0a\u4e0b\u6587</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">variable</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u7528\u6237\u753b\u50cf</span>\n<span class=\"w\">  </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u4f1a\u8bdd\u5386\u53f2\u6458\u8981</span>\n<span class=\"w\">  </span><span class=\"err\">\u2514\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u76f8\u5173\u77e5\u8bc6\u6ce8\u5165</span>\n\n<span class=\"err\">\u4efb\u52a1\u6307\u4ee4</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">tokens</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"err\">\u251c\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u5f53\u524d\u4efb\u52a1\u63cf\u8ff0</span>\n<span class=\"w\">  </span><span class=\"err\">\u2514\u2500\u2500</span><span class=\"w\"> </span><span class=\"err\">\u8f93\u51fa\u683c\u5f0f\u8981\u6c42</span>\n</code></pre></div>\n\n<p>\ud83d\udca1 <strong>\u5b9e\u7528\u6280\u5de7</strong>\uff1a\u5c06\u7cfb\u7edf\u63d0\u793a\u5206\u89e3\u4e3a\u9759\u6001\u548c\u52a8\u6001\u90e8\u5206\uff0c\u9759\u6001\u90e8\u5206\u53ef\u4ee5\u9884\u5148\u7f16\u7801\u5e76\u7f13\u5b58\uff0c\u51cf\u5c11\u6bcf\u6b21\u63a8\u7406\u7684 token \u5f00\u9500\u3002</p>\n<h3 id=\"1012\">10.1.2 \u6570\u636e\u6536\u96c6\u4e0e\u9884\u5904\u7406</h3>\n<h4 id=\"_6\">\u6570\u636e\u6765\u6e90\u591a\u6837\u5316</h4>\n<ol>\n<li>\n<p><strong>\u79cd\u5b50\u6570\u636e</strong>\uff0810K \u6837\u672c\uff09\n   - \u4eba\u5de5\u7f16\u5199\u7684\u9ad8\u8d28\u91cf\u5bf9\u8bdd\n   - \u6db5\u76d6 50+ \u573a\u666f\u7c7b\u522b\n   - \u6bcf\u4e2a\u6837\u672c\u7ecf\u8fc7 3 \u4eba\u4ea4\u53c9\u9a8c\u8bc1</p>\n</li>\n<li>\n<p><strong>\u7528\u6237\u4ea4\u4e92\u6570\u636e</strong>\uff081M+ \u6837\u672c\uff09\n   - \u771f\u5b9e\u7528\u6237\u5bf9\u8bdd\u65e5\u5fd7\n   - \u9690\u79c1\u8131\u654f\u5904\u7406\n   - \u8d28\u91cf\u8bc4\u5206\u7b5b\u9009\uff08\u4fdd\u7559 top 30%\uff09</p>\n</li>\n<li>\n<p><strong>\u5408\u6210\u6570\u636e</strong>\uff08500K \u6837\u672c\uff09\n   - Self-Instruct \u751f\u6210\n   - \u4e3b\u9898\u63a7\u5236\u7684\u591a\u6837\u6027\u91c7\u6837\n   - \u81ea\u52a8\u8d28\u91cf\u8fc7\u6ee4</p>\n</li>\n</ol>\n<h4 id=\"_7\">\u6570\u636e\u9884\u5904\u7406\u7ba1\u9053</h4>\n<div class=\"codehilite\"><pre><span></span><code>\u539f\u59cb\u6570\u636e \u2192 \u6e05\u6d17 \u2192 \u6807\u51c6\u5316 \u2192 \u8d28\u91cf\u8bc4\u5206 \u2192 \u53bb\u91cd \u2192 \u5e73\u8861\u91c7\u6837 \u2192 \u8bad\u7ec3\u96c6\n           \u2193        \u2193         \u2193         \u2193        \u2193\n        \u566a\u58f0\u8fc7\u6ee4  \u683c\u5f0f\u7edf\u4e00  \u542f\u53d1\u5f0f+\u6a21\u578b  MinHash  \u7c7b\u522b\u5747\u8861\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u5904\u7406\u6b65\u9aa4</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u591a\u8f6e\u5bf9\u8bdd\u62c6\u5206</strong>\uff1a\n   - \u4fdd\u6301\u4e0a\u4e0b\u6587\u8fde\u8d2f\u6027\n   - \u6ed1\u52a8\u7a97\u53e3\u91c7\u6837\uff08stride=2\uff09\n   - \u6700\u5927\u4e0a\u4e0b\u6587\u957f\u5ea6 2048 tokens</p>\n</li>\n<li>\n<p><strong>\u8d28\u91cf\u8bc4\u5206\u6a21\u578b</strong>\uff1a\n   \u4f7f\u7528 BERT-based \u5206\u7c7b\u5668\uff0c\u8bc4\u5206\u7ef4\u5ea6\u5305\u62ec\uff1a</p>\n</li>\n</ol>\n<ul>\n<li>\u76f8\u5173\u6027\uff080-1\uff09</li>\n<li>\u6d41\u7545\u6027\uff080-1\uff09</li>\n<li>\u4fe1\u606f\u91cf\uff080-1\uff09</li>\n<li>\u5b89\u5168\u6027\uff080-1\uff09</li>\n</ul>\n<p>\u7efc\u5408\u8bc4\u5206 = 0.3\u00d7\u76f8\u5173\u6027 + 0.2\u00d7\u6d41\u7545\u6027 + 0.3\u00d7\u4fe1\u606f\u91cf + 0.2\u00d7\u5b89\u5168\u6027</p>\n<ol start=\"3\">\n<li><strong>\u53bb\u91cd\u7b56\u7565</strong>\uff1a\n   - \u5b8c\u5168\u5339\u914d\u53bb\u91cd\n   - MinHash \u8fd1\u4f3c\u53bb\u91cd\uff08\u76f8\u4f3c\u5ea6\u9608\u503c 0.85\uff09\n   - \u8bed\u4e49\u53bb\u91cd\uff08\u5d4c\u5165\u5411\u91cf\u4f59\u5f26\u76f8\u4f3c\u5ea6 &gt; 0.95\uff09</li>\n</ol>\n<p>\u26a0\ufe0f <strong>\u5e38\u89c1\u9677\u9631</strong>\uff1a\u8fc7\u5ea6\u6e05\u6d17\u4f1a\u5bfc\u81f4\u6570\u636e\u5206\u5e03\u8fc7\u4e8e\u72ed\u7a84\uff0c\u4fdd\u7559 5-10% \u7684\"\u566a\u58f0\"\u6570\u636e\u6709\u52a9\u4e8e\u63d0\u9ad8\u6a21\u578b\u9c81\u68d2\u6027\u3002</p>\n<h3 id=\"1013-sft\">10.1.3 SFT \u57fa\u7ebf\u8bad\u7ec3</h3>\n<h4 id=\"_8\">\u8bad\u7ec3\u914d\u7f6e</h4>\n<p>\u57fa\u4e8e 7B \u53c2\u6570\u7684\u57fa\u5ea7\u6a21\u578b\uff0cSFT \u8bad\u7ec3\u914d\u7f6e\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">training_config</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">base_model</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;llama-2-7b&quot;</span>\n<span class=\"w\">  </span><span class=\"nt\">learning_rate</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">2e-5</span>\n<span class=\"w\">  </span><span class=\"nt\">warmup_steps</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">1000</span>\n<span class=\"w\">  </span><span class=\"nt\">total_steps</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">50000</span>\n<span class=\"w\">  </span><span class=\"nt\">batch_size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">128</span>\n<span class=\"w\">  </span><span class=\"nt\">gradient_accumulation</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">4</span>\n<span class=\"w\">  </span><span class=\"nt\">max_length</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">2048</span>\n\n<span class=\"w\">  </span><span class=\"c1\"># \u5173\u952e\u4f18\u5316</span>\n<span class=\"w\">  </span><span class=\"nt\">gradient_checkpointing</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n<span class=\"w\">  </span><span class=\"nt\">mixed_precision</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;bf16&quot;</span>\n<span class=\"w\">  </span><span class=\"nt\">flash_attention</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n\n<span class=\"w\">  </span><span class=\"c1\"># \u6b63\u5219\u5316</span>\n<span class=\"w\">  </span><span class=\"nt\">weight_decay</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.01</span>\n<span class=\"w\">  </span><span class=\"nt\">dropout</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.1</span>\n<span class=\"w\">  </span><span class=\"nt\">label_smoothing</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.1</span>\n</code></pre></div>\n\n<h4 id=\"_9\">\u8bad\u7ec3\u7b56\u7565</h4>\n<ol>\n<li><strong>\u8bfe\u7a0b\u5b66\u4e60</strong></li>\n</ol>\n<p>\u5206\u4e09\u4e2a\u9636\u6bb5\u9010\u6b65\u589e\u52a0\u4efb\u52a1\u96be\u5ea6\uff1a</p>\n<ul>\n<li><strong>\u9636\u6bb5 1</strong>\uff0820% steps\uff09\uff1a\u5355\u8f6e\u7b80\u5355\u5bf9\u8bdd</li>\n<li><strong>\u9636\u6bb5 2</strong>\uff0840% steps\uff09\uff1a\u591a\u8f6e\u5bf9\u8bdd\uff0c\u65e0\u590d\u6742\u63a8\u7406</li>\n<li><strong>\u9636\u6bb5 3</strong>\uff0840% steps\uff09\uff1a\u5b8c\u6574\u6570\u636e\u96c6\uff0c\u5305\u542b\u590d\u6742\u4efb\u52a1</li>\n</ul>\n<ol start=\"2\">\n<li><strong>\u52a8\u6001\u91c7\u6837</strong></li>\n</ol>\n<p>\u6839\u636e\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u8868\u73b0\u52a8\u6001\u8c03\u6574\u6570\u636e\u5206\u5e03\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">dynamic_sampling_weight</span><span class=\"p\">(</span><span class=\"n\">category_loss</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u635f\u5931\u8d8a\u5927\u7684\u7c7b\u522b\uff0c\u91c7\u6837\u6743\u91cd\u8d8a\u9ad8&quot;&quot;&quot;</span>\n    <span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">category_loss</span> <span class=\"o\">/</span> <span class=\"n\">temperature</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">weights</span> <span class=\"o\">/</span> <span class=\"n\">weights</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u68c0\u67e5\u70b9\u7b56\u7565</strong></li>\n</ol>\n<ul>\n<li>\u6bcf 1000 \u6b65\u4fdd\u5b58\u68c0\u67e5\u70b9</li>\n<li>\u4fdd\u7559\u9a8c\u8bc1\u96c6 loss \u6700\u4f4e\u7684 5 \u4e2a\u68c0\u67e5\u70b9</li>\n<li>\u6700\u7ec8\u6a21\u578b = top-3 \u68c0\u67e5\u70b9\u7684\u5e73\u5747</li>\n</ul>\n<h4 id=\"_10\">\u8bad\u7ec3\u76d1\u63a7</h4>\n<p>\u5b9e\u65f6\u76d1\u63a7\u7684\u5173\u952e\u6307\u6807\uff1a</p>\n<ol>\n<li>\n<p><strong>\u8bad\u7ec3\u6307\u6807</strong>\n   - Loss \u66f2\u7ebf\uff08\u5e73\u6ed1\u7a97\u53e3=100\uff09\n   - \u68af\u5ea6\u8303\u6570\n   - \u5b66\u4e60\u7387\u8c03\u5ea6\n   - GPU \u5229\u7528\u7387</p>\n</li>\n<li>\n<p><strong>\u9a8c\u8bc1\u6307\u6807</strong>\n   - Perplexity\n   - BLEU-4 \u5206\u6570\n   - \u54cd\u5e94\u591a\u6837\u6027\uff08Distinct-1/2\uff09\n   - \u5b89\u5168\u6027\u8bc4\u5206</p>\n</li>\n<li>\n<p><strong>\u5728\u7ebf\u6307\u6807</strong>\uff08A/B \u6d4b\u8bd5\uff09\n   - \u7528\u6237\u6ee1\u610f\u5ea6\u8bc4\u5206\n   - \u5bf9\u8bdd\u8f6e\u6b21\n   - \u4f1a\u8bdd\u5b8c\u6210\u7387\n   - \u54cd\u5e94\u65f6\u95f4\uff08P50/P95/P99\uff09</p>\n</li>\n</ol>\n<h3 id=\"1014-rlhf\">10.1.4 RLHF \u4f18\u5316\u6d41\u7a0b</h3>\n<h4 id=\"_11\">\u5956\u52b1\u6a21\u578b\u8bad\u7ec3</h4>\n<p><strong>\u6570\u636e\u6536\u96c6</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u504f\u597d\u6807\u6ce8</strong>\uff0850K \u5bf9\uff09\n   - \u5bf9\u4e8e\u540c\u4e00 prompt\uff0c\u751f\u6210 4-8 \u4e2a\u54cd\u5e94\n   - 3 \u540d\u6807\u6ce8\u5458\u72ec\u7acb\u6392\u5e8f\n   - Bradley-Terry \u6a21\u578b\u805a\u5408\u504f\u597d</p>\n</li>\n<li>\n<p><strong>\u6807\u6ce8\u8d28\u91cf\u63a7\u5236</strong>\n   - \u6807\u6ce8\u5458\u4e00\u81f4\u6027\u68c0\u67e5\uff08Fleiss' Kappa &gt; 0.6\uff09\n   - \u9ec4\u91d1\u6807\u51c6\u6d4b\u8bd5\uff08\u51c6\u786e\u7387 &gt; 85%\uff09\n   - \u5f02\u5e38\u6807\u6ce8\u81ea\u52a8\u68c0\u6d4b</p>\n</li>\n</ol>\n<p><strong>\u6a21\u578b\u67b6\u6784</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">\u8f93\u5165</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">Encoder</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">CLS</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">token</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">Linear</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">Scalar</span><span class=\"w\"> </span><span class=\"n\">Reward</span>\n<span class=\"w\">         </span><span class=\"err\">\u2193</span>\n<span class=\"w\">    </span><span class=\"n\">\u5171\u4eab</span><span class=\"w\"> </span><span class=\"n\">SFT</span><span class=\"w\"> </span><span class=\"n\">\u6a21\u578b\u53c2\u6570</span><span class=\"err\">\uff08</span><span class=\"n\">\u51bb\u7ed3\u524d</span><span class=\"w\"> </span><span class=\"n\">N</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">\u5c42</span><span class=\"err\">\uff09</span>\n</code></pre></div>\n\n<p><strong>\u8bad\u7ec3\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528 Focal Loss \u5904\u7406\u504f\u597d\u5f3a\u5ea6\u4e0d\u5e73\u8861</li>\n<li>\u52a0\u5165 KL \u6b63\u5219\u5316\u9632\u6b62\u5956\u52b1 hacking</li>\n<li>\u591a\u4efb\u52a1\u5b66\u4e60\uff1a\u540c\u65f6\u9884\u6d4b\u504f\u597d\u548c\u54cd\u5e94\u8d28\u91cf</li>\n</ul>\n<h4 id=\"ppo\">PPO \u8bad\u7ec3</h4>\n<p><strong>PPO \u914d\u7f6e</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">ppo_config</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">kl_penalty</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.1</span>\n<span class=\"w\">  </span><span class=\"nt\">clip_range</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.2</span>\n<span class=\"w\">  </span><span class=\"nt\">value_loss_coef</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.5</span>\n<span class=\"w\">  </span><span class=\"nt\">entropy_coef</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.01</span>\n\n<span class=\"w\">  </span><span class=\"c1\"># \u91c7\u6837\u7b56\u7565</span>\n<span class=\"w\">  </span><span class=\"nt\">rollout_batch_size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">512</span>\n<span class=\"w\">  </span><span class=\"nt\">minibatch_size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">64</span>\n<span class=\"w\">  </span><span class=\"nt\">ppo_epochs</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">4</span>\n\n<span class=\"w\">  </span><span class=\"c1\"># \u5956\u52b1\u8bbe\u8ba1</span>\n<span class=\"w\">  </span><span class=\"nt\">reward_components</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">preference_score</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.6</span>\n<span class=\"w\">    </span><span class=\"nt\">kl_penalty</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.2</span>\n<span class=\"w\">    </span><span class=\"nt\">length_penalty</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.1</span>\n<span class=\"w\">    </span><span class=\"nt\">safety_score</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.1</span>\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u4f18\u5316</strong>\uff1a</p>\n<ol>\n<li><strong>\u5956\u52b1\u5f52\u4e00\u5316</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">rewards</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">rewards</span> <span class=\"o\">-</span> <span class=\"n\">rewards</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">())</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">rewards</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mf\">1e-8</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>KL \u6563\u5ea6\u81ea\u9002\u5e94</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">kl_divergence</span> <span class=\"o\">&gt;</span> <span class=\"n\">target_kl</span> <span class=\"o\">*</span> <span class=\"mf\">1.5</span><span class=\"p\">:</span>\n    <span class=\"n\">kl_coef</span> <span class=\"o\">*=</span> <span class=\"mf\">1.5</span>\n<span class=\"k\">elif</span> <span class=\"n\">kl_divergence</span> <span class=\"o\">&lt;</span> <span class=\"n\">target_kl</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span><span class=\"p\">:</span>\n    <span class=\"n\">kl_coef</span> <span class=\"o\">*=</span> <span class=\"mf\">0.7</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u65e9\u505c\u7b56\u7565</strong>\n   - \u9a8c\u8bc1\u96c6\u5956\u52b1\u4e0d\u518d\u63d0\u5347\n   - KL \u6563\u5ea6\u8d85\u8fc7\u9608\u503c\n   - \u54cd\u5e94\u591a\u6837\u6027\u663e\u8457\u4e0b\u964d</li>\n</ol>\n<p>\ud83d\udccc <strong>\u91cd\u8981\u53d1\u73b0</strong>\uff1aPPO \u8bad\u7ec3\u4e2d\uff0c\u4fdd\u6301 KL \u6563\u5ea6\u5728 1-3 \u4e4b\u95f4\u901a\u5e38\u80fd\u83b7\u5f97\u6700\u4f73\u7684\u80fd\u529b-\u5bf9\u9f50\u5e73\u8861\u3002</p>\n<h3 id=\"1015\">10.1.5 \u5b89\u5168\u6027\u4e0e\u5bf9\u9f50</h3>\n<h4 id=\"_12\">\u591a\u5c42\u5b89\u5168\u9632\u62a4</h4>\n<div class=\"codehilite\"><pre><span></span><code>\u8f93\u5165\u5b89\u5168\u68c0\u67e5 \u2192 \u751f\u6210\u8fc7\u7a0b\u5e72\u9884 \u2192 \u8f93\u51fa\u5b89\u5168\u8fc7\u6ee4 \u2192 \u4eba\u5de5\u5ba1\u6838\uff08\u91c7\u6837\uff09\n      \u2193              \u2193               \u2193              \u2193\n  \u654f\u611f\u8bcd\u8fc7\u6ee4    \u5b89\u5168\u5f15\u5bfc\u751f\u6210     \u6bd2\u6027\u68c0\u6d4b      \u5f02\u5e38\u4e0a\u62a5\n</code></pre></div>\n\n<h4 id=\"constitutional-ai\">Constitutional AI \u5b9e\u73b0</h4>\n<p>\u81ea\u6211\u6279\u8bc4\u548c\u6539\u8fdb\u5faa\u73af\uff1a</p>\n<ol>\n<li><strong>\u521d\u59cb\u54cd\u5e94\u751f\u6210</strong></li>\n<li><strong>\u81ea\u6211\u6279\u8bc4</strong>\uff1a\"\u8fd9\u4e2a\u56de\u7b54\u662f\u5426\u53ef\u80fd\u9020\u6210\u4f24\u5bb3\uff1f\"</li>\n<li><strong>\u4fee\u8ba2\u751f\u6210</strong>\uff1a\"\u8bf7\u4fee\u6539\u56de\u7b54\uff0c\u4f7f\u5176\u66f4\u52a0\u6709\u5e2e\u52a9\u4e14\u65e0\u5bb3\"</li>\n<li><strong>\u6700\u7ec8\u68c0\u67e5</strong>\uff1a\u5916\u90e8\u5b89\u5168\u5206\u7c7b\u5668\u9a8c\u8bc1</li>\n</ol>\n<h4 id=\"_13\">\u7ea2\u961f\u6d4b\u8bd5</h4>\n<p>\u7cfb\u7edf\u5316\u7684\u5bf9\u6297\u6d4b\u8bd5\uff1a</p>\n<ul>\n<li><strong>\u81ea\u52a8\u5316\u653b\u51fb</strong>\uff1a\u4f7f\u7528\u5bf9\u6297\u6837\u672c\u751f\u6210\u5668</li>\n<li><strong>\u4eba\u5de5\u7ea2\u961f</strong>\uff1a\u5b89\u5168\u4e13\u5bb6\u5b9a\u671f\u6d4b\u8bd5</li>\n<li><strong>\u4f17\u5305\u6d4b\u8bd5</strong>\uff1a\u4ed8\u8d39\u7528\u6237\u5c1d\u8bd5\"\u8d8a\u72f1\"</li>\n<li><strong>\u6301\u7eed\u76d1\u63a7</strong>\uff1a\u751f\u4ea7\u73af\u5883\u5f02\u5e38\u68c0\u6d4b</li>\n</ul>\n<h3 id=\"1016\">10.1.6 \u90e8\u7f72\u4e0e\u76d1\u63a7</h3>\n<h4 id=\"_14\">\u670d\u52a1\u67b6\u6784</h4>\n<div class=\"codehilite\"><pre><span></span><code>         \u8d1f\u8f7d\u5747\u8861\u5668\n              \u2193\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2193                   \u2193\n\u63a8\u7406\u670d\u52a1\u5668\u96c6\u7fa4      \u7f13\u5b58\u5c42(Redis)\n    \u2193                   \u2193\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n              \u2193\n         \u6a21\u578b\u670d\u52a1\n    (TorchServe/Triton)\n</code></pre></div>\n\n<h4 id=\"_15\">\u6027\u80fd\u4f18\u5316</h4>\n<ol>\n<li>\n<p><strong>\u6a21\u578b\u4f18\u5316</strong>\n   - INT8 \u91cf\u5316\uff08\u7cbe\u5ea6\u635f\u5931 &lt; 1%\uff09\n   - Flash Attention\n   - KV Cache \u4f18\u5316\n   - \u52a8\u6001 batching</p>\n</li>\n<li>\n<p><strong>\u7cfb\u7edf\u4f18\u5316</strong>\n   - \u8bf7\u6c42\u7ea7\u5e76\u53d1\u63a7\u5236\n   - \u81ea\u9002\u5e94\u8d85\u65f6\u8bbe\u7f6e\n   - \u9884\u6d4b\u6027\u9884\u52a0\u8f7d\n   - \u7ed3\u679c\u7f13\u5b58\uff08\u76f8\u4f3c query\uff09</p>\n</li>\n</ol>\n<h4 id=\"_16\">\u76d1\u63a7\u6307\u6807\u4f53\u7cfb</h4>\n<p><strong>\u4e1a\u52a1\u6307\u6807</strong>\uff1a</p>\n<ul>\n<li>DAU/MAU</li>\n<li>\u5e73\u5747\u5bf9\u8bdd\u8f6e\u6b21</li>\n<li>\u7528\u6237\u6ee1\u610f\u5ea6 NPS</li>\n<li>\u7559\u5b58\u7387</li>\n</ul>\n<p><strong>\u6280\u672f\u6307\u6807</strong>\uff1a</p>\n<ul>\n<li>QPS/TPS</li>\n<li>\u5ef6\u8fdf\u5206\u5e03\uff08P50/P95/P99\uff09</li>\n<li>\u9519\u8bef\u7387</li>\n<li>GPU \u5229\u7528\u7387</li>\n</ul>\n<p><strong>\u8d28\u91cf\u6307\u6807</strong>\uff1a</p>\n<ul>\n<li>\u54cd\u5e94\u76f8\u5173\u6027\uff08\u5728\u7ebf\u8bc4\u4f30\uff09</li>\n<li>\u5b89\u5168\u8fdd\u89c4\u7387</li>\n<li>\u5e7b\u89c9\u68c0\u6d4b\u7387</li>\n<li>A/B \u6d4b\u8bd5\u80dc\u7387</li>\n</ul>\n<h4 id=\"_17\">\u6545\u969c\u6062\u590d</h4>\n<ul>\n<li><strong>\u6a21\u578b\u56de\u6eda</strong>\uff1a\u4fdd\u7559\u6700\u8fd1 3 \u4e2a\u7a33\u5b9a\u7248\u672c</li>\n<li><strong>\u964d\u7ea7\u7b56\u7565</strong>\uff1a\u9ad8\u8d1f\u8f7d\u65f6\u5207\u6362\u5230\u5c0f\u6a21\u578b</li>\n<li><strong>\u7194\u65ad\u673a\u5236</strong>\uff1a\u5f02\u5e38\u8bf7\u6c42\u81ea\u52a8\u9694\u79bb</li>\n<li><strong>\u707e\u5907\u65b9\u6848</strong>\uff1a\u591a\u5730\u57df\u90e8\u7f72</li>\n</ul>\n<h2 id=\"102\">10.2 \u591a\u6a21\u6001\u52a9\u624b\u7684\u8bad\u7ec3\u6d41\u7a0b</h2>\n<p>\u591a\u6a21\u6001\u5927\u6a21\u578b\u7684\u8bad\u7ec3\u6bd4\u7eaf\u6587\u672c\u6a21\u578b\u590d\u6742\u5f97\u591a\uff0c\u9700\u8981\u5904\u7406\u4e0d\u540c\u6a21\u6001\u95f4\u7684\u5bf9\u9f50\u3001\u878d\u5408\u548c\u534f\u540c\u3002\u672c\u8282\u4ecb\u7ecd\u4e00\u4e2a\u652f\u6301\u6587\u672c\u3001\u56fe\u50cf\u3001\u8bed\u97f3\u7684\u591a\u6a21\u6001\u52a9\u624b\u9879\u76ee\uff0c\u8be5\u7cfb\u7edf\u5728\u591a\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u8fbe\u5230 SOTA \u6027\u80fd\u3002</p>\n<h3 id=\"1021\">10.2.1 \u6a21\u6001\u878d\u5408\u67b6\u6784</h3>\n<h4 id=\"_18\">\u67b6\u6784\u8bbe\u8ba1\u539f\u5219</h4>\n<ol>\n<li><strong>\u65e9\u671f\u878d\u5408 vs \u665a\u671f\u878d\u5408</strong></li>\n</ol>\n<p>\u6211\u4eec\u91c7\u7528\u6df7\u5408\u878d\u5408\u7b56\u7565\uff1a</p>\n<ul>\n<li><strong>\u65e9\u671f\u878d\u5408</strong>\uff1a\u4f4e\u5c42\u7279\u5f81\u901a\u8fc7 cross-attention \u4ea4\u4e92</li>\n<li><strong>\u665a\u671f\u878d\u5408</strong>\uff1a\u9ad8\u5c42\u8bed\u4e49\u901a\u8fc7 gated fusion \u7ed3\u5408</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>\u89c6\u89c9\u7f16\u7801\u5668 \u2500\u2500\u2510\n            \u251c\u2192 Cross-Attention \u2192 Transformer Layers \u2192 Gated Fusion \u2192 \u8f93\u51fa\n\u6587\u672c\u7f16\u7801\u5668 \u2500\u2500\u2518                         \u2191\n                                    \u8bed\u97f3\u7f16\u7801\u5668\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u6a21\u6001\u5bf9\u9f50\u5c42\u8bbe\u8ba1</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ModalityAligner</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">visual_dim</span><span class=\"p\">,</span> <span class=\"n\">text_dim</span><span class=\"p\">,</span> <span class=\"n\">audio_dim</span><span class=\"p\">,</span> <span class=\"n\">hidden_dim</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"c1\"># \u6295\u5f71\u5230\u7edf\u4e00\u7ef4\u5ea6</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">visual_proj</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">visual_dim</span><span class=\"p\">,</span> <span class=\"n\">hidden_dim</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_proj</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">text_dim</span><span class=\"p\">,</span> <span class=\"n\">hidden_dim</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">audio_proj</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"n\">audio_dim</span><span class=\"p\">,</span> <span class=\"n\">hidden_dim</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u53ef\u5b66\u4e60\u7684\u6a21\u6001 embedding</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modality_embeddings</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Parameter</span><span class=\"p\">(</span>\n            <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">hidden_dim</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">visual</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">audio</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">visual</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">visual_proj</span><span class=\"p\">(</span><span class=\"n\">visual</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modality_embeddings</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"n\">text</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_proj</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modality_embeddings</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"n\">audio</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">audio_proj</span><span class=\"p\">(</span><span class=\"n\">audio</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modality_embeddings</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h4 id=\"_19\">\u89c6\u89c9\u7f16\u7801\u5668\u9009\u62e9</h4>\n<p>\u5bf9\u6bd4\u5b9e\u9a8c\u7ed3\u679c\uff1a</p>\n<p>| \u7f16\u7801\u5668 | \u53c2\u6570\u91cf | \u56fe\u50cf\u7406\u89e3 | \u8bad\u7ec3\u901f\u5ea6 | \u5185\u5b58\u5360\u7528 |</p>\n<table>\n<thead>\n<tr>\n<th>\u7f16\u7801\u5668</th>\n<th>\u53c2\u6570\u91cf</th>\n<th>\u56fe\u50cf\u7406\u89e3</th>\n<th>\u8bad\u7ec3\u901f\u5ea6</th>\n<th>\u5185\u5b58\u5360\u7528</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CLIP ViT-L</td>\n<td>428M</td>\n<td>85.2%</td>\n<td>1.0x</td>\n<td>16GB</td>\n</tr>\n<tr>\n<td>EVA-CLIP</td>\n<td>1B</td>\n<td>87.8%</td>\n<td>0.6x</td>\n<td>24GB</td>\n</tr>\n<tr>\n<td>SigLIP</td>\n<td>400M</td>\n<td>86.5%</td>\n<td>1.2x</td>\n<td>14GB</td>\n</tr>\n<tr>\n<td>DINOv2</td>\n<td>1.1B</td>\n<td>88.1%</td>\n<td>0.5x</td>\n<td>28GB</td>\n</tr>\n</tbody>\n</table>\n<p>\u6700\u7ec8\u9009\u62e9\uff1aSigLIP\uff08\u6027\u80fd-\u6548\u7387\u5e73\u8861\u6700\u4f18\uff09</p>\n<h3 id=\"1022\">10.2.2 \u6570\u636e\u5bf9\u9f50\u7b56\u7565</h3>\n<h4 id=\"_20\">\u591a\u6a21\u6001\u6570\u636e\u6536\u96c6</h4>\n<ol>\n<li>\n<p><strong>\u56fe\u6587\u5bf9\u6570\u636e</strong>\uff085M pairs\uff09\n   - LAION-5B \u7b5b\u9009\uff08\u7f8e\u5b66\u5206\u6570 &gt; 6\uff09\n   - CC12M \u9ad8\u8d28\u91cf\u5b50\u96c6\n   - \u5185\u90e8\u6807\u6ce8\u6570\u636e\uff08100K\uff09</p>\n</li>\n<li>\n<p><strong>\u89c6\u9891-\u6587\u672c\u6570\u636e</strong>\uff081M clips\uff09\n   - WebVid-10M \u91c7\u6837\n   - \u81ea\u52a8\u5b57\u5e55\u751f\u6210 + \u4eba\u5de5\u6821\u9a8c</p>\n</li>\n<li>\n<p><strong>\u8bed\u97f3-\u6587\u672c\u6570\u636e</strong>\uff082M hours\uff09\n   - LibriSpeech + CommonVoice\n   - \u591a\u8bed\u8a00\u3001\u591a\u53e3\u97f3\u8986\u76d6</p>\n</li>\n</ol>\n<h4 id=\"_21\">\u6570\u636e\u9884\u5904\u7406\u7ba1\u9053</h4>\n<p><strong>\u56fe\u50cf\u5904\u7406</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">transform</span> <span class=\"o\">=</span> <span class=\"n\">Compose</span><span class=\"p\">([</span>\n    <span class=\"n\">RandomResizedCrop</span><span class=\"p\">(</span><span class=\"mi\">224</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)),</span>\n    <span class=\"n\">RandomHorizontalFlip</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">),</span>\n    <span class=\"n\">ColorJitter</span><span class=\"p\">(</span><span class=\"n\">brightness</span><span class=\"o\">=</span><span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"n\">contrast</span><span class=\"o\">=</span><span class=\"mf\">0.4</span><span class=\"p\">),</span>\n    <span class=\"n\">ToTensor</span><span class=\"p\">(),</span>\n    <span class=\"n\">Normalize</span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"o\">=</span><span class=\"n\">IMAGENET_MEAN</span><span class=\"p\">,</span> <span class=\"n\">std</span><span class=\"o\">=</span><span class=\"n\">IMAGENET_STD</span><span class=\"p\">)</span>\n<span class=\"p\">])</span>\n</code></pre></div>\n\n<p><strong>\u6587\u672c\u589e\u5f3a</strong>\uff1a</p>\n<ul>\n<li>\u6a21\u677f\u53d8\u6362\uff1a\u540c\u4e00\u8bed\u4e49\u7684\u591a\u79cd\u8868\u8fbe</li>\n<li>\u53cd\u5411\u7ffb\u8bd1\uff1a\u82f1\u2192\u4e2d\u2192\u82f1 \u589e\u52a0\u591a\u6837\u6027</li>\n<li>\u6307\u4ee4\u6539\u5199\uff1a\u5c06\u9648\u8ff0\u53e5\u6539\u4e3a\u6307\u4ee4\u683c\u5f0f</li>\n</ul>\n<p><strong>\u65f6\u5e8f\u5bf9\u9f50</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u89c6\u9891\u5e27\u91c7\u6837\u7b56\u7565\uff1a\n\n- \u5747\u5300\u91c7\u6837\uff1a\u6bcf\u79d2 1 \u5e27\n- \u5173\u952e\u5e27\u91c7\u6837\uff1a\u573a\u666f\u53d8\u5316\u68c0\u6d4b\n- \u5bc6\u96c6\u91c7\u6837\uff1a\u52a8\u4f5c\u8bc6\u522b\u4efb\u52a1\uff088 fps\uff09\n</code></pre></div>\n\n<h3 id=\"1023\">10.2.3 \u6e10\u8fdb\u5f0f\u8bad\u7ec3</h3>\n<h4 id=\"_22\">\u4e09\u9636\u6bb5\u8bad\u7ec3\u7b56\u7565</h4>\n<p><strong>\u9636\u6bb5 1\uff1a\u6a21\u6001\u5bf9\u9f50\u9884\u8bad\u7ec3</strong>\uff08100K steps\uff09</p>\n<p>\u76ee\u6807\uff1a\u5b66\u4e60\u4e0d\u540c\u6a21\u6001\u7684\u7edf\u4e00\u8868\u793a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">stage1_config</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">frozen_modules</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&quot;text_encoder&quot;</span><span class=\"p p-Indicator\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;visual_encoder&quot;</span><span class=\"p p-Indicator\">]</span>\n<span class=\"w\">  </span><span class=\"nt\">trainable</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&quot;projection_layers&quot;</span><span class=\"p p-Indicator\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;alignment_modules&quot;</span><span class=\"p p-Indicator\">]</span>\n<span class=\"w\">  </span><span class=\"nt\">learning_rate</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">1e-4</span>\n<span class=\"w\">  </span><span class=\"nt\">tasks</span><span class=\"p\">:</span>\n\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">image_text_matching</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.3</span>\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">masked_language_modeling</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.3</span>\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">image_text_contrastive</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.4</span>\n</code></pre></div>\n\n<p><strong>\u9636\u6bb5 2\uff1a\u591a\u6a21\u6001\u7406\u89e3\u8bad\u7ec3</strong>\uff08200K steps\uff09</p>\n<p>\u76ee\u6807\uff1a\u8de8\u6a21\u6001\u63a8\u7406\u80fd\u529b</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">stage2_config</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">frozen_modules</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&quot;visual_encoder.layers[:-2]&quot;</span><span class=\"p p-Indicator\">]</span>\n<span class=\"w\">  </span><span class=\"nt\">learning_rate</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">5e-5</span>\n<span class=\"w\">  </span><span class=\"nt\">tasks</span><span class=\"p\">:</span>\n\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">visual_question_answering</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.25</span>\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">image_captioning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.25</span>\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">visual_reasoning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.25</span>\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">audio_understanding</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.25</span>\n</code></pre></div>\n\n<p><strong>\u9636\u6bb5 3\uff1a\u6307\u4ee4\u5fae\u8c03</strong>\uff0850K steps\uff09</p>\n<p>\u76ee\u6807\uff1a\u9075\u5faa\u591a\u6a21\u6001\u6307\u4ee4</p>\n<p>\u8bad\u7ec3\u6570\u636e\u5206\u5e03\uff1a</p>\n<ul>\n<li>\u7eaf\u6587\u672c\u6307\u4ee4\uff1a30%</li>\n<li>\u56fe\u50cf\u76f8\u5173\u6307\u4ee4\uff1a40%</li>\n<li>\u97f3\u9891\u76f8\u5173\u6307\u4ee4\uff1a20%</li>\n<li>\u6df7\u5408\u6a21\u6001\u6307\u4ee4\uff1a10%</li>\n</ul>\n<p>\ud83d\udca1 <strong>\u5173\u952e\u53d1\u73b0</strong>\uff1a\u5728\u9636\u6bb5 2 \u52a0\u5165 10% \u7684\u7eaf\u6587\u672c\u6570\u636e\u53ef\u4ee5\u6709\u6548\u9632\u6b62\u8bed\u8a00\u80fd\u529b\u9000\u5316\u3002</p>\n<h3 id=\"1024\">10.2.4 \u8de8\u6a21\u6001\u80fd\u529b\u8bc4\u4f30</h3>\n<h4 id=\"_23\">\u8bc4\u4f30\u57fa\u51c6\u8bbe\u8ba1</h4>\n<ol>\n<li>\n<p><strong>\u5355\u6a21\u6001\u57fa\u51c6</strong>\n   - \u6587\u672c\uff1aMMLU, HellaSwag, ARC\n   - \u56fe\u50cf\uff1aImageNet, COCO Detection\n   - \u97f3\u9891\uff1aLibriSpeech WER</p>\n</li>\n<li>\n<p><strong>\u8de8\u6a21\u6001\u57fa\u51c6</strong>\n   - VQA v2\uff1a\u89c6\u89c9\u95ee\u7b54\n   - NLVR2\uff1a\u89c6\u89c9\u63a8\u7406\n   - Flickr30K\uff1a\u56fe\u6587\u68c0\u7d22\n   - AVSD\uff1a\u97f3\u89c6\u9891\u5bf9\u8bdd</p>\n</li>\n<li>\n<p><strong>\u81ea\u5efa\u8bc4\u4f30\u96c6</strong>\n   - \u591a\u8df3\u63a8\u7406\uff1a\u9700\u8981\u7ed3\u5408\u591a\u4e2a\u6a21\u6001\u4fe1\u606f\n   - \u6307\u4ee4\u6cdb\u5316\uff1a\u672a\u89c1\u8fc7\u7684\u6307\u4ee4\u7ec4\u5408\n   - \u9c81\u68d2\u6027\u6d4b\u8bd5\uff1a\u5bf9\u6297\u6837\u672c\u3001\u566a\u58f0\u8f93\u5165</p>\n</li>\n</ol>\n<h4 id=\"_24\">\u8bc4\u4f30\u6307\u6807\u4f53\u7cfb</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MultiModalEvaluator</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;accuracy&#39;</span><span class=\"p\">:</span> <span class=\"n\">AccuracyMetric</span><span class=\"p\">(),</span>\n            <span class=\"s1\">&#39;bleu&#39;</span><span class=\"p\">:</span> <span class=\"n\">BLEUMetric</span><span class=\"p\">(),</span>\n            <span class=\"s1\">&#39;clip_score&#39;</span><span class=\"p\">:</span> <span class=\"n\">CLIPScoreMetric</span><span class=\"p\">(),</span>\n            <span class=\"s1\">&#39;perplexity&#39;</span><span class=\"p\">:</span> <span class=\"n\">PerplexityMetric</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">evaluate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">predictions</span><span class=\"p\">,</span> <span class=\"n\">references</span><span class=\"p\">,</span> <span class=\"n\">modalities</span><span class=\"p\">):</span>\n        <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">modality</span> <span class=\"ow\">in</span> <span class=\"n\">modalities</span><span class=\"p\">:</span>\n            <span class=\"n\">modal_preds</span> <span class=\"o\">=</span> <span class=\"n\">predictions</span><span class=\"p\">[</span><span class=\"n\">modality</span><span class=\"p\">]</span>\n            <span class=\"n\">modal_refs</span> <span class=\"o\">=</span> <span class=\"n\">references</span><span class=\"p\">[</span><span class=\"n\">modality</span><span class=\"p\">]</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">modality</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;text&#39;</span><span class=\"p\">:</span>\n                <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">modality</span><span class=\"si\">}</span><span class=\"s1\">_bleu&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;bleu&#39;</span><span class=\"p\">](</span><span class=\"n\">modal_preds</span><span class=\"p\">,</span> <span class=\"n\">modal_refs</span><span class=\"p\">)</span>\n                <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">modality</span><span class=\"si\">}</span><span class=\"s1\">_ppl&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;perplexity&#39;</span><span class=\"p\">](</span><span class=\"n\">modal_preds</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">modality</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;vision&#39;</span><span class=\"p\">:</span>\n                <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">modality</span><span class=\"si\">}</span><span class=\"s1\">_acc&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;accuracy&#39;</span><span class=\"p\">](</span><span class=\"n\">modal_preds</span><span class=\"p\">,</span> <span class=\"n\">modal_refs</span><span class=\"p\">)</span>\n                <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">modality</span><span class=\"si\">}</span><span class=\"s1\">_clip&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;clip_score&#39;</span><span class=\"p\">](</span><span class=\"n\">modal_preds</span><span class=\"p\">,</span> <span class=\"n\">modal_refs</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8de8\u6a21\u6001\u4e00\u81f4\u6027</span>\n        <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">&#39;cross_modal_alignment&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute_alignment</span><span class=\"p\">(</span><span class=\"n\">predictions</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">results</span>\n</code></pre></div>\n\n<h3 id=\"1025\">10.2.5 \u63a8\u7406\u4f18\u5316</h3>\n<h4 id=\"_25\">\u6a21\u6001\u7ea7\u4f18\u5316</h4>\n<ol>\n<li><strong>\u52a8\u6001\u6a21\u6001\u9009\u62e9</strong></li>\n</ol>\n<p>\u6839\u636e\u8f93\u5165\u81ea\u52a8\u5224\u65ad\u9700\u8981\u6fc0\u6d3b\u7684\u7f16\u7801\u5668\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">dynamic_forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"p\">):</span>\n    <span class=\"n\">active_encoders</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">if</span> <span class=\"n\">inputs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;image&#39;</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">active_encoders</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">visual_encoder</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">inputs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;audio&#39;</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">active_encoders</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">audio_encoder</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u53ea\u8ba1\u7b97\u5fc5\u8981\u7684\u7f16\u7801\u5668</span>\n    <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">enc</span><span class=\"p\">(</span><span class=\"n\">inp</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">enc</span><span class=\"p\">,</span> <span class=\"n\">inp</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">active_encoders</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())]</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fusion_layer</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u7f13\u5b58\u7b56\u7565</strong></li>\n</ol>\n<ul>\n<li><strong>KV Cache</strong>\uff1a\u6807\u51c6 Transformer \u7f13\u5b58</li>\n<li><strong>Visual Cache</strong>\uff1a\u76f8\u4f3c\u56fe\u50cf\u7684\u7279\u5f81\u590d\u7528</li>\n<li><strong>Instruction Cache</strong>\uff1a\u5e38\u89c1\u6307\u4ee4\u7684\u9884\u8ba1\u7b97</li>\n</ul>\n<ol start=\"3\">\n<li><strong>\u91cf\u5316\u65b9\u6848</strong></li>\n</ol>\n<p>\u4e0d\u540c\u6a21\u5757\u91c7\u7528\u4e0d\u540c\u91cf\u5316\u7b56\u7565\uff1a</p>\n<p>| \u6a21\u5757 | \u91cf\u5316\u65b9\u6cd5 | \u7cbe\u5ea6\u635f\u5931 |</p>\n<table>\n<thead>\n<tr>\n<th>\u6a21\u5757</th>\n<th>\u91cf\u5316\u65b9\u6cd5</th>\n<th>\u7cbe\u5ea6\u635f\u5931</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u89c6\u89c9\u7f16\u7801\u5668</td>\n<td>INT8 \u52a8\u6001\u91cf\u5316</td>\n<td>&lt; 0.5%</td>\n</tr>\n<tr>\n<td>\u6587\u672c\u7f16\u7801\u5668</td>\n<td>FP16</td>\n<td>&lt; 0.1%</td>\n</tr>\n<tr>\n<td>\u878d\u5408\u5c42</td>\n<td>INT8 \u9759\u6001\u91cf\u5316</td>\n<td>&lt; 1%</td>\n</tr>\n<tr>\n<td>\u8f93\u51fa\u5c42</td>\n<td>FP32\uff08\u4e0d\u91cf\u5316\uff09</td>\n<td>0%</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"_26\">\u670d\u52a1\u5316\u90e8\u7f72</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">deployment_config</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">model_parallel</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">2</span><span class=\"w\">  </span><span class=\"c1\"># \u6a21\u578b\u5e76\u884c\u5ea6</span>\n<span class=\"w\">  </span><span class=\"nt\">data_parallel</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">4</span><span class=\"w\">   </span><span class=\"c1\"># \u6570\u636e\u5e76\u884c\u5ea6</span>\n\n<span class=\"w\">  </span><span class=\"nt\">serving</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">max_batch_size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">32</span>\n<span class=\"w\">    </span><span class=\"nt\">dynamic_batching</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n<span class=\"w\">    </span><span class=\"nt\">timeout_ms</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">5000</span>\n\n<span class=\"w\">  </span><span class=\"nt\">optimization</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">use_flash_attention</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n<span class=\"w\">    </span><span class=\"nt\">use_xformers</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n<span class=\"w\">    </span><span class=\"nt\">compile_mode</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;reduce-overhead&quot;</span>\n</code></pre></div>\n\n<p>\u26a0\ufe0f <strong>\u90e8\u7f72\u9677\u9631</strong>\uff1a\u591a\u6a21\u6001\u6a21\u578b\u7684 batch \u7ec4\u88c5\u9700\u8981\u7279\u522b\u6ce8\u610f padding\uff0c\u4e0d\u540c\u957f\u5ea6\u7684\u6587\u672c\u548c\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u4f1a\u5bfc\u81f4\u5927\u91cf\u65e0\u6548\u8ba1\u7b97\u3002</p>\n<h2 id=\"103\">10.3 \u9886\u57df\u4e13\u5bb6\u6a21\u578b\u7684\u6784\u5efa</h2>\n<p>\u9886\u57df\u4e13\u5bb6\u6a21\u578b\u9700\u8981\u5728\u4fdd\u6301\u901a\u7528\u80fd\u529b\u7684\u540c\u65f6\uff0c\u6df1\u5ea6\u638c\u63e1\u7279\u5b9a\u9886\u57df\u77e5\u8bc6\u3002\u672c\u8282\u4ee5\u533b\u7597\u9886\u57df\u4e3a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u65e2\u61c2\u533b\u5b66\u77e5\u8bc6\u53c8\u80fd\u81ea\u7136\u4ea4\u4e92\u7684\u4e13\u5bb6\u52a9\u624b\u3002</p>\n<h3 id=\"1031\">10.3.1 \u9886\u57df\u77e5\u8bc6\u6ce8\u5165</h3>\n<h4 id=\"_27\">\u77e5\u8bc6\u6765\u6e90\u4e0e\u8d28\u91cf\u63a7\u5236</h4>\n<ol>\n<li><strong>\u6743\u5a01\u6570\u636e\u6e90</strong></li>\n</ol>\n<ul>\n<li><strong>\u533b\u5b66\u6559\u79d1\u4e66</strong>\uff1a200+ \u672c\u6807\u51c6\u6559\u6750</li>\n<li><strong>\u4e34\u5e8a\u6307\u5357</strong>\uff1aWHO\u3001CDC \u7b49\u6743\u5a01\u6307\u5357</li>\n<li><strong>\u533b\u5b66\u6587\u732e</strong>\uff1aPubMed \u8fd1 10 \u5e74\u9ad8\u5f15\u8bba\u6587</li>\n<li><strong>\u75c5\u4f8b\u6570\u636e</strong>\uff1a\u8131\u654f\u7684\u771f\u5b9e\u75c5\u4f8b\uff0850K+\uff09</li>\n<li><strong>\u533b\u5b66\u767e\u79d1</strong>\uff1aMedlinePlus\u3001UpToDate</li>\n</ul>\n<ol start=\"2\">\n<li><strong>\u77e5\u8bc6\u56fe\u8c31\u6784\u5efa</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u75be\u75c5\u5b9e\u4f53 \u2500\u2500[\u75c7\u72b6\u5173\u7cfb]\u2500\u2500&gt; \u75c7\u72b6\u5b9e\u4f53\n    \u2193                        \u2191\n[\u6cbb\u7597\u5173\u7cfb]              [\u68c0\u67e5\u5173\u7cfb]\n    \u2193                        \u2191\n\u836f\u7269\u5b9e\u4f53 \u2190\u2500\u2500[\u76f8\u4e92\u4f5c\u7528]\u2500\u2500\u2192 \u68c0\u67e5\u5b9e\u4f53\n</code></pre></div>\n\n<p>\u77e5\u8bc6\u4e09\u5143\u7ec4\u793a\u4f8b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">knowledge_triples</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;\u7cd6\u5c3f\u75c5&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u5e38\u89c1\u75c7\u72b6&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u591a\u996e\u591a\u5c3f&quot;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;\u4e8c\u7532\u53cc\u80cd&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u6cbb\u7597&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2\u578b\u7cd6\u5c3f\u75c5&quot;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;\u4e8c\u7532\u53cc\u80cd&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u7981\u5fcc\u75c7&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u80be\u529f\u80fd\u4e0d\u5168&quot;</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;HbA1c&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u8bca\u65ad\u6807\u51c6&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&gt;6.5%&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u77e5\u8bc6\u9a8c\u8bc1\u6d41\u7a0b</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">validate_medical_knowledge</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">knowledge_base</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u9a8c\u8bc1\u533b\u5b66\u5185\u5bb9\u7684\u51c6\u786e\u6027&quot;&quot;&quot;</span>\n    <span class=\"n\">claims</span> <span class=\"o\">=</span> <span class=\"n\">extract_medical_claims</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">claim</span> <span class=\"ow\">in</span> <span class=\"n\">claims</span><span class=\"p\">:</span>\n        <span class=\"c1\"># 1. \u68c0\u67e5\u4e0e\u77e5\u8bc6\u5e93\u7684\u4e00\u81f4\u6027</span>\n        <span class=\"n\">kb_consistency</span> <span class=\"o\">=</span> <span class=\"n\">check_kb_consistency</span><span class=\"p\">(</span><span class=\"n\">claim</span><span class=\"p\">,</span> <span class=\"n\">knowledge_base</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. \u4ea4\u53c9\u5f15\u7528\u9a8c\u8bc1</span>\n        <span class=\"n\">citations</span> <span class=\"o\">=</span> <span class=\"n\">find_citations</span><span class=\"p\">(</span><span class=\"n\">claim</span><span class=\"p\">)</span>\n        <span class=\"n\">citation_quality</span> <span class=\"o\">=</span> <span class=\"n\">evaluate_citation_quality</span><span class=\"p\">(</span><span class=\"n\">citations</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u4e13\u5bb6\u5ba1\u6838\u6807\u8bb0</span>\n        <span class=\"k\">if</span> <span class=\"n\">kb_consistency</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.8</span> <span class=\"ow\">or</span> <span class=\"n\">citation_quality</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.7</span><span class=\"p\">:</span>\n            <span class=\"n\">claim</span><span class=\"o\">.</span><span class=\"n\">mark_for_expert_review</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">claims</span>\n</code></pre></div>\n\n<h4 id=\"_28\">\u77e5\u8bc6\u6ce8\u5165\u65b9\u6cd5</h4>\n<ol>\n<li><strong>\u7ee7\u7eed\u9884\u8bad\u7ec3\uff08CPT\uff09</strong></li>\n</ol>\n<p>\u5728\u901a\u7528\u6a21\u578b\u57fa\u7840\u4e0a\u7ee7\u7eed\u9884\u8bad\u7ec3\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">cpt_config</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">base_model</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;llama-2-7b&quot;</span>\n<span class=\"w\">  </span><span class=\"nt\">learning_rate</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">5e-5</span>\n<span class=\"w\">  </span><span class=\"nt\">total_steps</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">100000</span>\n\n<span class=\"w\">  </span><span class=\"nt\">data_mixture</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">medical_textbooks</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.3</span>\n<span class=\"w\">    </span><span class=\"nt\">clinical_guidelines</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.2</span>\n<span class=\"w\">    </span><span class=\"nt\">medical_papers</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.2</span>\n<span class=\"w\">    </span><span class=\"nt\">general_corpus</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.3</span><span class=\"w\">  </span><span class=\"c1\"># \u9632\u6b62\u9057\u5fd8</span>\n\n<span class=\"w\">  </span><span class=\"nt\">curriculum</span><span class=\"p\">:</span>\n\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">phase</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;basic&quot;</span>\n<span class=\"w\">      </span><span class=\"nt\">steps</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">30000</span>\n<span class=\"w\">      </span><span class=\"nt\">focus</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;medical_terminology&quot;</span>\n\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">phase</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;intermediate&quot;</span>\n<span class=\"w\">      </span><span class=\"nt\">steps</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">40000</span>\n<span class=\"w\">      </span><span class=\"nt\">focus</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;disease_pathology&quot;</span>\n\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">phase</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;advanced&quot;</span>\n<span class=\"w\">      </span><span class=\"nt\">steps</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">30000</span>\n<span class=\"w\">      </span><span class=\"nt\">focus</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;clinical_reasoning&quot;</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u77e5\u8bc6\u84b8\u998f</strong></li>\n</ol>\n<p>\u4ece\u5927\u578b\u533b\u5b66\u6a21\u578b\u84b8\u998f\u5230\u90e8\u7f72\u89c4\u6a21\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MedicalKnowledgeDistillation</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">teacher_model</span><span class=\"p\">,</span> <span class=\"n\">student_model</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">teacher</span> <span class=\"o\">=</span> <span class=\"n\">teacher_model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">student</span> <span class=\"o\">=</span> <span class=\"n\">student_model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"mf\">5.0</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">distillation_loss</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.7</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n            <span class=\"n\">teacher_logits</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">teacher</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">)</span>\n\n        <span class=\"n\">student_logits</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">student</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># KL divergence loss</span>\n        <span class=\"n\">kl_loss</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">kl_div</span><span class=\"p\">(</span>\n            <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">log_softmax</span><span class=\"p\">(</span><span class=\"n\">student_logits</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temp</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n            <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">teacher_logits</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temp</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n            <span class=\"n\">reduction</span><span class=\"o\">=</span><span class=\"s1\">&#39;batchmean&#39;</span>\n        <span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temp</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Combined with task loss</span>\n        <span class=\"n\">task_loss</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">cross_entropy</span><span class=\"p\">(</span><span class=\"n\">student_logits</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">kl_loss</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">alpha</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">task_loss</span>\n</code></pre></div>\n\n<h3 id=\"1032\">10.3.2 \u4e13\u4e1a\u6570\u636e\u91c7\u96c6</h3>\n<h4 id=\"_29\">\u6570\u636e\u91c7\u96c6\u7b56\u7565</h4>\n<ol>\n<li><strong>\u4e3b\u52a8\u5b66\u4e60\u91c7\u6837</strong></li>\n</ol>\n<p>\u4f18\u5148\u91c7\u96c6\u6a21\u578b\u4e0d\u786e\u5b9a\u7684\u6837\u672c\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">uncertainty_sampling</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">unlabeled_pool</span><span class=\"p\">,</span> <span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u57fa\u4e8e\u4e0d\u786e\u5b9a\u6027\u7684\u4e3b\u52a8\u5b66\u4e60&quot;&quot;&quot;</span>\n    <span class=\"n\">uncertainties</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">sample</span> <span class=\"ow\">in</span> <span class=\"n\">unlabeled_pool</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n            <span class=\"n\">logits</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">)</span>\n            <span class=\"n\">probs</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">logits</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u71b5\u4f5c\u4e3a\u4e0d\u786e\u5b9a\u6027\u5ea6\u91cf</span>\n            <span class=\"n\">entropy</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"p\">(</span><span class=\"n\">probs</span> <span class=\"o\">*</span> <span class=\"n\">probs</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">uncertainties</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">entropy</span><span class=\"o\">.</span><span class=\"n\">item</span><span class=\"p\">())</span>\n\n    <span class=\"c1\"># \u9009\u62e9\u4e0d\u786e\u5b9a\u6027\u6700\u9ad8\u7684\u6837\u672c</span>\n    <span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argsort</span><span class=\"p\">(</span><span class=\"n\">uncertainties</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"n\">n_samples</span><span class=\"p\">:]</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">unlabeled_pool</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">indices</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u4e13\u5bb6\u6807\u6ce8\u7cfb\u7edf</strong></li>\n</ol>\n<p>\u5206\u7ea7\u6807\u6ce8\u6d41\u7a0b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u521d\u7ea7\u6807\u6ce8\u5458\uff08\u533b\u5b66\u751f\uff09\n    \u2193 [\u57fa\u7840\u6807\u6ce8]\n\u8d28\u91cf\u68c0\u67e5\u70b9 1\n    \u2193 [\u901a\u8fc7\u7387 &gt; 90%]\n\u4e2d\u7ea7\u5ba1\u6838\u5458\uff08\u4f4f\u9662\u533b\u5e08\uff09\n    \u2193 [\u4e34\u5e8a\u9a8c\u8bc1]\n\u8d28\u91cf\u68c0\u67e5\u70b9 2\n    \u2193 [\u5206\u6b67\u6848\u4f8b]\n\u9ad8\u7ea7\u4e13\u5bb6\uff08\u4e3b\u6cbb\u533b\u5e08\uff09\n    \u2193 [\u6700\u7ec8\u786e\u8ba4]\n\u5165\u5e93\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u5408\u6210\u6570\u636e\u751f\u6210</strong></li>\n</ol>\n<p>\u57fa\u4e8e\u6a21\u677f\u7684\u75c5\u4f8b\u751f\u6210\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">generate_synthetic_cases</span><span class=\"p\">(</span><span class=\"n\">templates</span><span class=\"p\">,</span> <span class=\"n\">knowledge_base</span><span class=\"p\">,</span> <span class=\"n\">n_cases</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u751f\u6210\u5408\u6210\u75c5\u4f8b\u6570\u636e&quot;&quot;&quot;</span>\n    <span class=\"n\">cases</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_cases</span><span class=\"p\">):</span>\n        <span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"n\">templates</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u586b\u5145\u75be\u75c5\u4fe1\u606f</span>\n        <span class=\"n\">disease</span> <span class=\"o\">=</span> <span class=\"n\">sample_disease</span><span class=\"p\">(</span><span class=\"n\">knowledge_base</span><span class=\"p\">)</span>\n        <span class=\"n\">symptoms</span> <span class=\"o\">=</span> <span class=\"n\">get_symptoms</span><span class=\"p\">(</span><span class=\"n\">disease</span><span class=\"p\">,</span> <span class=\"n\">knowledge_base</span><span class=\"p\">)</span>\n        <span class=\"n\">treatments</span> <span class=\"o\">=</span> <span class=\"n\">get_treatments</span><span class=\"p\">(</span><span class=\"n\">disease</span><span class=\"p\">,</span> <span class=\"n\">knowledge_base</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u751f\u6210\u75c5\u4f8b\u63cf\u8ff0</span>\n        <span class=\"n\">case</span> <span class=\"o\">=</span> <span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">),</span>\n            <span class=\"n\">gender</span><span class=\"o\">=</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">([</span><span class=\"s1\">&#39;\u7537&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u5973&#39;</span><span class=\"p\">]),</span>\n            <span class=\"n\">symptoms</span><span class=\"o\">=</span><span class=\"s1\">&#39;, &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">symptoms</span><span class=\"p\">[:</span><span class=\"mi\">3</span><span class=\"p\">]),</span>\n            <span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">),</span>\n            <span class=\"n\">diagnosis</span><span class=\"o\">=</span><span class=\"n\">disease</span><span class=\"p\">,</span>\n            <span class=\"n\">treatment</span><span class=\"o\">=</span><span class=\"n\">treatments</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">cases</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">case</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">cases</span>\n</code></pre></div>\n\n<h3 id=\"1033\">10.3.3 \u6301\u7eed\u5b66\u4e60\u673a\u5236</h3>\n<h4 id=\"_30\">\u589e\u91cf\u5b66\u4e60\u6846\u67b6</h4>\n<ol>\n<li><strong>\u5f39\u6027\u6743\u91cd\u5de9\u56fa\uff08EWC\uff09</strong></li>\n</ol>\n<p>\u9632\u6b62\u707e\u96be\u6027\u9057\u5fd8\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">EWC</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">importance</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">importance</span> <span class=\"o\">=</span> <span class=\"n\">importance</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">clone</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">named_parameters</span><span class=\"p\">()}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fisher</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_fisher</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_compute_fisher</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8ba1\u7b97 Fisher \u4fe1\u606f\u77e9\u9635&quot;&quot;&quot;</span>\n        <span class=\"n\">fisher</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">()</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">data</span> <span class=\"ow\">in</span> <span class=\"n\">dataset</span><span class=\"p\">:</span>\n            <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n            <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n            <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">cross_entropy</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n            <span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n\n            <span class=\"k\">for</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">named_parameters</span><span class=\"p\">():</span>\n                <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">fisher</span><span class=\"p\">:</span>\n                    <span class=\"n\">fisher</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">clone</span><span class=\"p\">()</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">fisher</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">clone</span><span class=\"p\">()</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">fisher</span><span class=\"p\">:</span>\n            <span class=\"n\">fisher</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span> <span class=\"o\">/=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">fisher</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">penalty</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8ba1\u7b97 EWC \u60e9\u7f5a\u9879&quot;&quot;&quot;</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">named_parameters</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fisher</span><span class=\"p\">:</span>\n                <span class=\"n\">loss</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fisher</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">])</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">importance</span> <span class=\"o\">*</span> <span class=\"n\">loss</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u77e5\u8bc6\u91cd\u653e\u673a\u5236</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ExperienceReplay</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">buffer_size</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer</span> <span class=\"o\">=</span> <span class=\"n\">deque</span><span class=\"p\">(</span><span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"n\">buffer_size</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">priorities</span> <span class=\"o\">=</span> <span class=\"n\">deque</span><span class=\"p\">(</span><span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"n\">buffer_size</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">experience</span><span class=\"p\">,</span> <span class=\"n\">priority</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">experience</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">priorities</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">priority</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">sample</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.6</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4f18\u5148\u7ea7\u91c7\u6837&quot;&quot;&quot;</span>\n        <span class=\"n\">probs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">priorities</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"n\">alpha</span>\n        <span class=\"n\">probs</span> <span class=\"o\">/=</span> <span class=\"n\">probs</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n\n        <span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span>\n            <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"p\">),</span> \n            <span class=\"n\">batch_size</span><span class=\"p\">,</span> \n            <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">probs</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">indices</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<h3 id=\"1034\">10.3.4 \u6027\u80fd\u57fa\u51c6\u8bbe\u8ba1</h3>\n<h4 id=\"_31\">\u533b\u7597\u9886\u57df\u8bc4\u4f30\u57fa\u51c6</h4>\n<ol>\n<li><strong>\u77e5\u8bc6\u51c6\u786e\u6027\u6d4b\u8bd5</strong></li>\n</ol>\n<ul>\n<li><strong>MedQA</strong>\uff1a\u533b\u5b66\u8003\u8bd5\u9898\uff08USMLE style\uff09</li>\n<li><strong>PubMedQA</strong>\uff1a\u57fa\u4e8e\u6587\u732e\u7684\u95ee\u7b54</li>\n<li><strong>MedMCQA</strong>\uff1a\u591a\u9009\u9898\u533b\u5b66\u77e5\u8bc6</li>\n</ul>\n<ol start=\"2\">\n<li><strong>\u4e34\u5e8a\u63a8\u7406\u80fd\u529b</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">evaluate_clinical_reasoning</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">test_cases</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u8bc4\u4f30\u4e34\u5e8a\u63a8\u7406\u80fd\u529b&quot;&quot;&quot;</span>\n    <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;diagnosis_accuracy&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;treatment_appropriateness&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;safety_score&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">case</span> <span class=\"ow\">in</span> <span class=\"n\">test_cases</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u751f\u6210\u8bca\u65ad</span>\n        <span class=\"n\">diagnosis</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate_diagnosis</span><span class=\"p\">(</span><span class=\"n\">case</span><span class=\"o\">.</span><span class=\"n\">symptoms</span><span class=\"p\">)</span>\n        <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;diagnosis_accuracy&#39;</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"p\">(</span>\n            <span class=\"n\">diagnosis</span> <span class=\"o\">==</span> <span class=\"n\">case</span><span class=\"o\">.</span><span class=\"n\">gold_diagnosis</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u751f\u6210\u6cbb\u7597\u65b9\u6848</span>\n        <span class=\"n\">treatment</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">suggest_treatment</span><span class=\"p\">(</span><span class=\"n\">diagnosis</span><span class=\"p\">)</span>\n        <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;treatment_appropriateness&#39;</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">evaluate_treatment</span><span class=\"p\">(</span>\n            <span class=\"n\">treatment</span><span class=\"p\">,</span> <span class=\"n\">case</span><span class=\"o\">.</span><span class=\"n\">gold_treatment</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5b89\u5168\u6027\u68c0\u67e5</span>\n        <span class=\"n\">contraindications</span> <span class=\"o\">=</span> <span class=\"n\">check_contraindications</span><span class=\"p\">(</span>\n            <span class=\"n\">treatment</span><span class=\"p\">,</span> <span class=\"n\">case</span><span class=\"o\">.</span><span class=\"n\">patient_info</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;safety_score&#39;</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">contraindications</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u5f52\u4e00\u5316</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">metrics</span><span class=\"p\">:</span>\n        <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">/=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">test_cases</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">metrics</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u5bf9\u8bdd\u8d28\u91cf\u8bc4\u4f30</strong></li>\n</ol>\n<ul>\n<li>\u4e13\u4e1a\u672f\u8bed\u4f7f\u7528\u51c6\u786e\u6027</li>\n<li>\u89e3\u91ca\u7684\u53ef\u7406\u89e3\u6027</li>\n<li>\u56de\u7b54\u7684\u5b8c\u6574\u6027</li>\n<li>\u5b89\u5168\u5efa\u8bae\u7684\u9002\u5f53\u6027</li>\n</ul>\n<h3 id=\"1035\">10.3.5 \u77e5\u8bc6\u66f4\u65b0\u7b56\u7565</h3>\n<h4 id=\"_32\">\u5b9a\u671f\u66f4\u65b0\u6d41\u7a0b</h4>\n<ol>\n<li><strong>\u65b0\u77e5\u8bc6\u8bc6\u522b</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">identify_new_knowledge</span><span class=\"p\">(</span><span class=\"n\">recent_papers</span><span class=\"p\">,</span> <span class=\"n\">existing_kb</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u8bc6\u522b\u9700\u8981\u66f4\u65b0\u7684\u77e5\u8bc6&quot;&quot;&quot;</span>\n    <span class=\"n\">updates</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;new_diseases&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n        <span class=\"s1\">&#39;updated_treatments&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n        <span class=\"s1\">&#39;revised_guidelines&#39;</span><span class=\"p\">:</span> <span class=\"p\">[]</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">paper</span> <span class=\"ow\">in</span> <span class=\"n\">recent_papers</span><span class=\"p\">:</span>\n        <span class=\"n\">entities</span> <span class=\"o\">=</span> <span class=\"n\">extract_medical_entities</span><span class=\"p\">(</span><span class=\"n\">paper</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">entity</span> <span class=\"ow\">in</span> <span class=\"n\">entities</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;disease&#39;</span> <span class=\"ow\">and</span> <span class=\"n\">entity</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">existing_kb</span><span class=\"p\">:</span>\n                <span class=\"n\">updates</span><span class=\"p\">[</span><span class=\"s1\">&#39;new_diseases&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;treatment&#39;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">has_significant_change</span><span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"p\">,</span> <span class=\"n\">existing_kb</span><span class=\"p\">):</span>\n                    <span class=\"n\">updates</span><span class=\"p\">[</span><span class=\"s1\">&#39;updated_treatments&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">updates</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u589e\u91cf\u8bad\u7ec3\u7ba1\u9053</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">update_pipeline</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">frequency</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;monthly&quot;</span>\n\n<span class=\"w\">  </span><span class=\"nt\">steps</span><span class=\"p\">:</span>\n\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;collect_updates&quot;</span>\n<span class=\"w\">      </span><span class=\"nt\">sources</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&quot;pubmed&quot;</span><span class=\"p p-Indicator\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;clinical_trials&quot;</span><span class=\"p p-Indicator\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;fda_approvals&quot;</span><span class=\"p p-Indicator\">]</span>\n\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;validate_updates&quot;</span>\n<span class=\"w\">      </span><span class=\"nt\">validators</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&quot;expert_review&quot;</span><span class=\"p p-Indicator\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;consistency_check&quot;</span><span class=\"p p-Indicator\">]</span>\n\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;prepare_training_data&quot;</span>\n<span class=\"w\">      </span><span class=\"nt\">augmentation</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n<span class=\"w\">      </span><span class=\"nt\">balance_with_existing</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.3</span>\n\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;incremental_training&quot;</span>\n<span class=\"w\">      </span><span class=\"nt\">method</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;ewc&quot;</span>\n<span class=\"w\">      </span><span class=\"nt\">epochs</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">5</span>\n<span class=\"w\">      </span><span class=\"nt\">learning_rate</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">1e-5</span>\n\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;evaluation&quot;</span>\n<span class=\"w\">      </span><span class=\"nt\">benchmarks</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&quot;medqa&quot;</span><span class=\"p p-Indicator\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;safety_tests&quot;</span><span class=\"p p-Indicator\">]</span>\n<span class=\"w\">      </span><span class=\"nt\">threshold</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0.95</span><span class=\"w\">  </span><span class=\"c1\"># \u76f8\u5bf9\u4e8e\u524d\u7248\u672c</span>\n\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;deployment&quot;</span>\n<span class=\"w\">      </span><span class=\"nt\">strategy</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;gradual_rollout&quot;</span>\n<span class=\"w\">      </span><span class=\"nt\">monitoring_period</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;7d&quot;</span>\n</code></pre></div>\n\n<p>\ud83d\udccc <strong>\u5173\u952e\u7ecf\u9a8c</strong>\uff1a\u533b\u7597\u9886\u57df\u6a21\u578b\u66f4\u65b0\u65f6\uff0c\u5b81\u53ef\u4fdd\u5b88\u4e5f\u4e0d\u80fd\u5f15\u5165\u9519\u8bef\u4fe1\u606f\u3002\u6bcf\u6b21\u66f4\u65b0\u90fd\u9700\u8981\u5b8c\u6574\u7684\u56de\u5f52\u6d4b\u8bd5\u3002</p>"
  },
  "chapter4.md": {
    "hash": "94ac282e4d55bfc908bba39c344c3e6a",
    "content": "<h1 id=\"_1\">\u7b2c\u56db\u7ae0\uff1a\u7eaf\u8bed\u8a00\u4efb\u52a1\u5b9e\u9a8c\u8bbe\u8ba1</h1>\n<h2 id=\"_2\">\u7ae0\u8282\u6982\u89c8</h2>\n<p>\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u7eaf\u8bed\u8a00\u4efb\u52a1\u7684\u540e\u8bad\u7ec3\u5b9e\u9a8c\u8bbe\u8ba1\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u7cfb\u7edf\u6027\u5730\u4ecb\u7ecd\u5982\u4f55\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u6587\u672c\u4efb\u52a1\u8bbe\u8ba1\u5b9e\u9a8c\uff0c\u5305\u62ec\u591a\u8f6e\u5bf9\u8bdd\u3001\u957f\u6587\u672c\u5904\u7406\u3001\u63a8\u7406\u94fe\u8bad\u7ec3\u7b49\u6838\u5fc3\u573a\u666f\u3002\u91cd\u70b9\u5173\u6ce8\u5b9e\u9a8c\u8bbe\u8ba1\u7684\u65b9\u6cd5\u8bba\u3001\u8bc4\u4f30\u6307\u6807\u9009\u62e9\u3001\u6570\u636e\u6784\u9020\u7b56\u7565\u4ee5\u53ca\u5e38\u89c1\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u901a\u8fc7\u672c\u7ae0\u5b66\u4e60\uff0c\u60a8\u5c06\u638c\u63e1\u8bbe\u8ba1\u548c\u6267\u884c\u9ad8\u8d28\u91cf\u8bed\u8a00\u4efb\u52a1\u5b9e\u9a8c\u7684\u5b8c\u6574\u6d41\u7a0b\u3002</p>\n<h2 id=\"41\">4.1 \u591a\u8f6e\u5bf9\u8bdd\u7684\u610f\u56fe\u8bc6\u522b\u4e0e\u72b6\u6001\u7ba1\u7406</h2>\n<p>\u591a\u8f6e\u5bf9\u8bdd\u662f LLM \u540e\u8bad\u7ec3\u4e2d\u6700\u5177\u6311\u6218\u6027\u7684\u4efb\u52a1\u4e4b\u4e00\u3002\u4e0e\u5355\u8f6e\u95ee\u7b54\u4e0d\u540c\uff0c\u591a\u8f6e\u5bf9\u8bdd\u9700\u8981\u6a21\u578b\u7ef4\u62a4\u590d\u6742\u7684\u4e0a\u4e0b\u6587\u72b6\u6001\u3001\u7406\u89e3\u9690\u542b\u610f\u56fe\u3001\u5904\u7406\u6307\u4ee3\u6d88\u89e3\uff0c\u5e76\u5728\u4fdd\u6301\u8fde\u8d2f\u6027\u7684\u540c\u65f6\u9002\u5e94\u8bdd\u9898\u8f6c\u6362\u3002\u672c\u8282\u5c06\u6df1\u5165\u63a2\u8ba8\u5982\u4f55\u8bbe\u8ba1\u5b9e\u9a8c\u6765\u4f18\u5316\u8fd9\u4e9b\u80fd\u529b\u3002</p>\n<h3 id=\"411\">4.1.1 \u591a\u8f6e\u5bf9\u8bdd\u7684\u6838\u5fc3\u6311\u6218</h3>\n<p>\u591a\u8f6e\u5bf9\u8bdd\u7cfb\u7edf\u9762\u4e34\u7684\u4e3b\u8981\u6280\u672f\u6311\u6218\u5305\u62ec\uff1a</p>\n<ol>\n<li><strong>\u4e0a\u4e0b\u6587\u4f9d\u8d56\u6027\u5efa\u6a21</strong></li>\n</ol>\n<p>\u591a\u8f6e\u5bf9\u8bdd\u4e2d\uff0c\u7528\u6237\u7684\u6bcf\u4e2a\u8f93\u5165\u90fd\u53ef\u80fd\u4f9d\u8d56\u4e8e\u4e4b\u524d\u7684\u5bf9\u8bdd\u5386\u53f2\u3002\u6a21\u578b\u9700\u8981\u51c6\u786e\u7406\u89e3\u8fd9\u79cd\u4f9d\u8d56\u5173\u7cfb\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u7528\u6237\uff1a\u5e2e\u6211\u5206\u6790\u8fd9\u4efd\u62a5\u544a\u7684\u6570\u636e\n\u52a9\u624b\uff1a<span class=\"p\">[</span>\u63d0\u4f9b\u5206\u6790<span class=\"p\">]</span>\n\u7528\u6237\uff1a\u7b2c\u4e09\u90e8\u5206\u6709\u4ec0\u4e48\u95ee\u9898\u5417\uff1f<span class=\"w\">  </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span>\u9700\u8981\u7406\u89e3<span class=\"s\">&quot;\u7b2c\u4e09\u90e8\u5206&quot;</span>\u6307\u4ee3\u62a5\u544a\u7684\u7b2c\u4e09\u90e8\u5206\n</code></pre></div>\n\n<p>\u5b9e\u9a8c\u8bbe\u8ba1\u65f6\u9700\u8981\u8003\u8651\uff1a</p>\n<ul>\n<li><strong>\u663e\u5f0f\u4f9d\u8d56</strong> vs <strong>\u9690\u5f0f\u4f9d\u8d56</strong>\uff1a\u663e\u5f0f\u4f9d\u8d56\u901a\u8fc7\u4ee3\u8bcd\u3001\u6307\u793a\u8bcd\u4f53\u73b0\uff1b\u9690\u5f0f\u4f9d\u8d56\u9700\u8981\u63a8\u7406</li>\n<li><strong>\u4f9d\u8d56\u8ddd\u79bb</strong>\uff1a\u4f9d\u8d56\u7684\u8f6e\u6b21\u8de8\u5ea6\u5f71\u54cd\u6a21\u578b\u7684\u8bb0\u5fc6\u8d1f\u62c5</li>\n<li><strong>\u4f9d\u8d56\u7c7b\u578b</strong>\uff1a\u5b9e\u4f53\u6307\u4ee3\u3001\u4e8b\u4ef6\u6307\u4ee3\u3001\u5c5e\u6027\u7ee7\u627f\u7b49</li>\n</ul>\n<ol start=\"2\">\n<li><strong>\u610f\u56fe\u6f14\u5316\u4e0e\u5207\u6362</strong></li>\n</ol>\n<p>\u7528\u6237\u610f\u56fe\u5728\u5bf9\u8bdd\u8fc7\u7a0b\u4e2d\u4f1a\u53d1\u751f\u6f14\u5316\u6216\u7a81\u7136\u5207\u6362\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u8f6e\u6b21 1-3\uff1a\u8ba8\u8bba\u6280\u672f\u95ee\u9898\uff08\u610f\u56fe\uff1a\u6280\u672f\u54a8\u8be2\uff09\n\u8f6e\u6b21 4\uff1a\u7a81\u7136\u8be2\u95ee\u5929\u6c14\uff08\u610f\u56fe\u5207\u6362\uff1a\u65e5\u5e38\u95f2\u804a\uff09\n\u8f6e\u6b21 5\uff1a\u56de\u5230\u6280\u672f\u8ba8\u8bba\uff08\u610f\u56fe\u6062\u590d\uff1a\u6280\u672f\u54a8\u8be2\uff09\n</code></pre></div>\n\n<p>\u5173\u952e\u5b9e\u9a8c\u6307\u6807\uff1a</p>\n<ul>\n<li>\u610f\u56fe\u5207\u6362\u68c0\u6d4b\u51c6\u786e\u7387</li>\n<li>\u610f\u56fe\u6062\u590d\u540e\u7684\u4e0a\u4e0b\u6587\u4fdd\u6301\u80fd\u529b</li>\n<li>\u591a\u610f\u56fe\u5e76\u5b58\u65f6\u7684\u4f18\u5148\u7ea7\u5904\u7406</li>\n</ul>\n<ol start=\"3\">\n<li><strong>\u5bf9\u8bdd\u72b6\u6001\u7684\u7d2f\u79ef\u6548\u5e94</strong></li>\n</ol>\n<p>\u968f\u7740\u5bf9\u8bdd\u8f6e\u6b21\u589e\u52a0\uff0c\u72b6\u6001\u7ba1\u7406\u7684\u590d\u6742\u5ea6\u5448\u6307\u6570\u589e\u957f\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u72b6\u6001\u7a7a\u95f4\u5927\u5c0f \u2248 O(|S|^n)\n\u5176\u4e2d |S| \u662f\u5355\u8f6e\u72b6\u6001\u7a7a\u95f4\uff0cn \u662f\u5bf9\u8bdd\u8f6e\u6b21\n</code></pre></div>\n\n<p>\u8fd9\u5bfc\u81f4\uff1a</p>\n<ul>\n<li><strong>\u72b6\u6001\u7206\u70b8</strong>\uff1a\u9700\u8981\u8bbe\u8ba1\u9ad8\u6548\u7684\u72b6\u6001\u538b\u7f29\u673a\u5236</li>\n<li><strong>\u4fe1\u606f\u8870\u51cf</strong>\uff1a\u65e9\u671f\u8f6e\u6b21\u7684\u4fe1\u606f\u9010\u6e10\u88ab\u9057\u5fd8</li>\n<li><strong>\u566a\u58f0\u7d2f\u79ef</strong>\uff1a\u9519\u8bef\u7406\u89e3\u5728\u540e\u7eed\u8f6e\u6b21\u4e2d\u88ab\u653e\u5927</li>\n</ul>\n<h3 id=\"412\">4.1.2 \u610f\u56fe\u8bc6\u522b\u7684\u5b9e\u9a8c\u8bbe\u8ba1</h3>\n<p><strong>\u5b9e\u9a8c\u6846\u67b6\u8bbe\u8ba1</strong></p>\n<p>\u6784\u5efa\u591a\u8f6e\u610f\u56fe\u8bc6\u522b\u5b9e\u9a8c\u9700\u8981\u7cfb\u7edf\u6027\u7684\u65b9\u6cd5\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  \u5bf9\u8bdd\u5386\u53f2   \u2502\u2500\u2500\u2500\u2500&gt;\u2502  \u7279\u5f81\u63d0\u53d6    \u2502\u2500\u2500\u2500\u2500&gt;\u2502 \u610f\u56fe\u5206\u7c7b  \u2502\n\u2502  H_1...H_t  \u2502     \u2502  &amp; \u7f16\u7801\u5668    \u2502     \u2502   \u6a21\u578b    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502                    \u2502                   \u2502\n       v                    v                   v\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u5f53\u524d\u8f93\u5165 U_t\u2502     \u2502 \u4e0a\u4e0b\u6587\u878d\u5408   \u2502     \u2502 \u610f\u56fe I_t  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<p><strong>\u6570\u636e\u6784\u9020\u7b56\u7565</strong></p>\n<ol>\n<li>\n<p><strong>\u610f\u56fe\u6807\u6ce8\u4f53\u7cfb\u8bbe\u8ba1</strong>\n   - \u5c42\u6b21\u5316\u610f\u56fe\u6811\uff1a\u4e3b\u610f\u56fe -&gt; \u5b50\u610f\u56fe -&gt; \u7ec6\u7c92\u5ea6\u610f\u56fe\n   - \u610f\u56fe\u8f6c\u79fb\u77e9\u9635\uff1aP(I_t | I_{t-1}, U_t)\n   - \u590d\u5408\u610f\u56fe\u5904\u7406\uff1a\u591a\u6807\u7b7e vs \u4e3b\u5bfc\u610f\u56fe</p>\n</li>\n<li>\n<p><strong>\u8bad\u7ec3\u6570\u636e\u589e\u5f3a</strong></p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u4f2a\u4ee3\u7801\uff1a\u5bf9\u8bdd\u6570\u636e\u589e\u5f3a</span>\n<span class=\"k\">def</span> <span class=\"nf\">augment_dialogue</span><span class=\"p\">(</span><span class=\"n\">dialogue</span><span class=\"p\">):</span>\n    <span class=\"c1\"># 1. \u610f\u56fe\u63d2\u5165\uff1a\u5728\u5bf9\u8bdd\u4e2d\u63d2\u5165\u65e0\u5173\u610f\u56fe</span>\n    <span class=\"c1\"># 2. \u610f\u56fe\u7701\u7565\uff1a\u5220\u9664\u90e8\u5206\u663e\u5f0f\u610f\u56fe\u8868\u8fbe</span>\n    <span class=\"c1\"># 3. \u8bed\u8a00\u53d8\u6362\uff1a\u540c\u4e49\u6539\u5199\u4fdd\u6301\u610f\u56fe\u4e0d\u53d8</span>\n    <span class=\"c1\"># 4. \u987a\u5e8f\u6253\u4e71\uff1a\u6d4b\u8bd5\u9c81\u68d2\u6027</span>\n    <span class=\"k\">return</span> <span class=\"n\">augmented_samples</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u56f0\u96be\u6837\u672c\u6316\u6398</strong>\n   - \u610f\u56fe\u8fb9\u754c\u6a21\u7cca\u7684\u5bf9\u8bdd\n   - \u5feb\u901f\u610f\u56fe\u5207\u6362\u5e8f\u5217\n   - \u957f\u8ddd\u79bb\u610f\u56fe\u4f9d\u8d56</li>\n</ol>\n<p><strong>\u8bc4\u4f30\u6307\u6807\u8bbe\u8ba1</strong></p>\n<p>\u6807\u51c6\u51c6\u786e\u7387\u4e0d\u8db3\u4ee5\u8bc4\u4f30\u591a\u8f6e\u610f\u56fe\u8bc6\u522b\uff0c\u9700\u8981\u8bbe\u8ba1\u4e13\u95e8\u6307\u6807\uff1a</p>\n<ol>\n<li>\n<p><strong>\u8f6e\u6b21\u611f\u77e5\u51c6\u786e\u7387\uff08Turn-Aware Accuracy\uff09</strong>\n   $$TAA = \\sum_{t=1}^{T} w_t \\cdot \\mathbb{1}[pred_t = true_t]$$\n\u5176\u4e2d $w_t$ \u662f\u8f6e\u6b21\u6743\u91cd\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u4e3a\u9012\u589e\uff08\u540e\u671f\u8f6e\u6b21\u66f4\u91cd\u8981\uff09\u6216\u9012\u51cf\uff08\u65e9\u671f\u7406\u89e3\u66f4\u5173\u952e\uff09</p>\n</li>\n<li>\n<p><strong>\u610f\u56fe\u5207\u6362 F1\uff08Intent Switch F1\uff09</strong>\n   \u4e13\u95e8\u8bc4\u4f30\u6a21\u578b\u68c0\u6d4b\u610f\u56fe\u5207\u6362\u70b9\u7684\u80fd\u529b</p>\n</li>\n<li>\n<p><strong>\u610f\u56fe\u4e00\u81f4\u6027\u5f97\u5206\uff08Intent Coherence Score\uff09</strong>\n$$ICS = \\frac{1}{T-1} \\sum_{t=2}^{T} sim(I_t, I_{t-1}) \\cdot \\mathbb{1}[switch_t = 0]$$</p>\n</li>\n</ol>\n<h3 id=\"413\">4.1.3 \u5bf9\u8bdd\u72b6\u6001\u8ffd\u8e2a</h3>\n<p><strong>\u72b6\u6001\u8868\u793a\u5b66\u4e60</strong></p>\n<p>\u5bf9\u8bdd\u72b6\u6001\u4e0d\u4ec5\u5305\u542b\u663e\u5f0f\u4fe1\u606f\uff08\u5b9e\u4f53\u3001\u5c5e\u6027\uff09\uff0c\u8fd8\u5305\u542b\u9690\u5f0f\u77e5\u8bc6\uff08\u7528\u6237\u504f\u597d\u3001\u60c5\u611f\u72b6\u6001\uff09\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>State_t = {\n    &quot;entities&quot;: {\u5b9e\u4f53\u53ca\u5176\u5c5e\u6027},\n    &quot;relations&quot;: {\u5b9e\u4f53\u95f4\u5173\u7cfb},\n    &quot;user_profile&quot;: {\u63a8\u65ad\u7684\u7528\u6237\u4fe1\u606f},\n    &quot;discourse&quot;: {\u5bf9\u8bdd\u7ed3\u6784\u4fe1\u606f},\n    &quot;intent_history&quot;: {\u610f\u56fe\u6f14\u5316\u8f68\u8ff9}\n}\n</code></pre></div>\n\n<p><strong>\u72b6\u6001\u66f4\u65b0\u673a\u5236</strong></p>\n<ol>\n<li><strong>\u8986\u76d6\u66f4\u65b0\uff08Overwrite\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"nl\">\u65b0\u4fe1\u606f\u4e0e\u65e7\u4fe1\u606f\u51b2\u7a81</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"k\">State</span><span class=\"o\">[</span><span class=\"n\">key</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">new_value</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u7d2f\u79ef\u66f4\u65b0\uff08Accumulate\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">State</span><span class=\"o\">[</span><span class=\"n\">key</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">merge</span><span class=\"p\">(</span><span class=\"k\">State</span><span class=\"o\">[</span><span class=\"n\">key</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">new_value</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u6761\u4ef6\u66f4\u65b0\uff08Conditional\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">confidence</span><span class=\"p\">(</span><span class=\"n\">new_value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nl\">threshold</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"k\">State</span><span class=\"o\">[</span><span class=\"n\">key</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">weighted_avg</span><span class=\"p\">(</span><span class=\"k\">State</span><span class=\"o\">[</span><span class=\"n\">key</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">new_value</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u5b9e\u9a8c\u8bbe\u8ba1\u8981\u70b9</strong></p>\n<ol>\n<li>\n<p><strong>\u72b6\u6001\u69fd\u4f4d\u5b9a\u4e49</strong>\n   - \u9884\u5b9a\u4e49\u69fd\u4f4d\uff1a\u9002\u7528\u4e8e\u5782\u76f4\u9886\u57df\n   - \u5f00\u653e\u69fd\u4f4d\uff1a\u9002\u7528\u4e8e\u901a\u7528\u5bf9\u8bdd\n   - \u6df7\u5408\u65b9\u6848\uff1a\u6838\u5fc3\u69fd\u4f4d\u9884\u5b9a\u4e49 + \u52a8\u6001\u6269\u5c55</p>\n</li>\n<li>\n<p><strong>\u72b6\u6001\u521d\u59cb\u5316\u7b56\u7565</strong>\n   - \u96f6\u521d\u59cb\u5316\uff1a\u4ece\u7a7a\u72b6\u6001\u5f00\u59cb\n   - \u5148\u9a8c\u521d\u59cb\u5316\uff1a\u57fa\u4e8e\u7528\u6237\u753b\u50cf\u6216\u9886\u57df\u77e5\u8bc6\n   - \u8fc1\u79fb\u521d\u59cb\u5316\uff1a\u4ece\u76f8\u4f3c\u5bf9\u8bdd\u5b66\u4e60\u521d\u59cb\u72b6\u6001</p>\n</li>\n<li>\n<p><strong>\u72b6\u6001\u538b\u7f29\u4e0e\u9057\u5fd8</strong></p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compress_state</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"p\">,</span> <span class=\"n\">max_size</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u4fe1\u606f\u8bba\u65b9\u6cd5\uff1a\u4fdd\u7559\u9ad8\u4fe1\u606f\u91cf\u72b6\u6001</span>\n    <span class=\"c1\"># \u6ce8\u610f\u529b\u65b9\u6cd5\uff1a\u4fdd\u7559\u9ad8\u6ce8\u610f\u529b\u6743\u91cd\u72b6\u6001</span>\n    <span class=\"c1\"># \u65f6\u95f4\u8870\u51cf\uff1a\u6307\u6570\u8870\u51cf\u65e7\u72b6\u6001\u6743\u91cd</span>\n    <span class=\"k\">return</span> <span class=\"n\">compressed_state</span>\n</code></pre></div>\n\n<h3 id=\"414\">4.1.4 \u4e0a\u4e0b\u6587\u7a97\u53e3\u7ba1\u7406\u7b56\u7565</h3>\n<p><strong>\u56fa\u5b9a\u7a97\u53e3 vs \u52a8\u6001\u7a97\u53e3</strong></p>\n<ol>\n<li>\n<p><strong>\u56fa\u5b9a\u7a97\u53e3\u7b56\u7565</strong>\n   - \u4f18\u70b9\uff1a\u5b9e\u73b0\u7b80\u5355\uff0c\u8ba1\u7b97\u5f00\u9500\u53ef\u63a7\n   - \u7f3a\u70b9\uff1a\u53ef\u80fd\u622a\u65ad\u91cd\u8981\u4fe1\u606f\n   - \u9002\u7528\u573a\u666f\uff1a\u8f6e\u6b21\u8f83\u5c11\u7684\u4efb\u52a1\u5bfc\u5411\u5bf9\u8bdd</p>\n</li>\n<li>\n<p><strong>\u52a8\u6001\u7a97\u53e3\u7b56\u7565</strong>\n   - \u57fa\u4e8e\u4fe1\u606f\u5bc6\u5ea6\u8c03\u6574\uff1a\u4fe1\u606f\u5bc6\u96c6\u5904\u6269\u5927\u7a97\u53e3\n   - \u57fa\u4e8e\u610f\u56fe\u8fb9\u754c\u8c03\u6574\uff1a\u610f\u56fe\u5207\u6362\u65f6\u91cd\u7f6e\u7a97\u53e3\n   - \u57fa\u4e8e\u8ba1\u7b97\u8d44\u6e90\u8c03\u6574\uff1a\u81ea\u9002\u5e94GPU\u5185\u5b58</p>\n</li>\n</ol>\n<p><strong>\u7a97\u53e3\u5185\u5bb9\u9009\u62e9</strong></p>\n<p>\u4e0d\u662f\u6240\u6709\u5386\u53f2\u4fe1\u606f\u90fd\u540c\u7b49\u91cd\u8981\uff0c\u9700\u8981\u8bbe\u8ba1\u9009\u62e9\u673a\u5236\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u91cd\u8981\u6027\u5f97\u5206 = \u03b1 <span class=\"gs\">* \u65f6\u95f4\u56e0\u5b50 + \u03b2 *</span> \u76f8\u5173\u6027\u56e0\u5b50 + \u03b3 <span class=\"gs\">* \u4fe1\u606f\u91cf\u56e0\u5b50</span>\n\n<span class=\"gs\">\u65f6\u95f4\u56e0\u5b50 = exp(-\u03bb *</span> (t_current - t_utterance))\n\u76f8\u5173\u6027\u56e0\u5b50 = cosine_sim(embedding_current, embedding_historical)\n\u4fe1\u606f\u91cf\u56e0\u5b50 = -log(P(utterance | context))\n</code></pre></div>\n\n<p><strong>\u538b\u7f29\u6280\u672f</strong></p>\n<ol>\n<li><strong>\u6458\u8981\u538b\u7f29</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">\u539f\u59cb\u5bf9\u8bdd\uff08</span><span class=\"mi\">10</span><span class=\"err\">\u8f6e\uff09</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"err\">\u6458\u8981\uff08</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"err\">\u53e5\uff09</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"err\">\u4fdd\u7559\u5173\u952e\u4fe1\u606f</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u5173\u952e\u8bcd\u63d0\u53d6</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u6bcf\u8f6e\u63d0\u53d6 top-k \u5173\u952e\u8bcd\uff0c\u6784\u5efa\u7a00\u758f\u8868\u793a\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u5c42\u6b21\u5316\u538b\u7f29</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u8fd1\u671f\u8f6e\u6b21\uff1a\u5b8c\u6574\u4fdd\u7559\n\u4e2d\u671f\u8f6e\u6b21\uff1a\u4fdd\u7559\u4e3b\u8981\u5185\u5bb9\n\u8fdc\u671f\u8f6e\u6b21\uff1a\u4ec5\u4fdd\u7559\u610f\u56fe\u548c\u5173\u952e\u5b9e\u4f53\n</code></pre></div>\n\n<p><strong>\u5b9e\u9a8c\u4f18\u5316\u7b56\u7565</strong></p>\n<ol>\n<li><strong>\u6e10\u8fdb\u5f0f\u8bad\u7ec3</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">epoch</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_epochs</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">epoch</span> <span class=\"o\">&lt;</span> <span class=\"n\">warmup_epochs</span><span class=\"p\">:</span>\n        <span class=\"n\">max_context_length</span> <span class=\"o\">=</span> <span class=\"n\">min_length</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">max_context_length</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span>\n            <span class=\"n\">min_length</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">epoch</span> <span class=\"o\">-</span> <span class=\"n\">warmup_epochs</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">increment</span><span class=\"p\">,</span>\n            <span class=\"n\">max_length</span>\n        <span class=\"p\">)</span>\n    <span class=\"n\">train_with_context_length</span><span class=\"p\">(</span><span class=\"n\">max_context_length</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li>\n<p><strong>\u8bfe\u7a0b\u5b66\u4e60</strong>\n   - \u4ece\u77ed\u5bf9\u8bdd\u5230\u957f\u5bf9\u8bdd\n   - \u4ece\u5355\u610f\u56fe\u5230\u591a\u610f\u56fe\n   - \u4ece\u7b80\u5355\u4f9d\u8d56\u5230\u590d\u6742\u4f9d\u8d56</p>\n</li>\n<li>\n<p><strong>\u6ce8\u610f\u529b\u6a21\u5f0f\u5206\u6790</strong>\n   \u5b9a\u671f\u53ef\u89c6\u5316\u6ce8\u610f\u529b\u77e9\u9635\uff0c\u8bc6\u522b\uff1a</p>\n</li>\n</ol>\n<ul>\n<li>\u4f4d\u7f6e\u504f\u5dee\uff08\u8fc7\u5ea6\u5173\u6ce8\u8fd1\u671f\u6216\u8fdc\u671f\uff09</li>\n<li>\u6a21\u5f0f\u574d\u584c\uff08\u6ce8\u610f\u529b\u8fc7\u5ea6\u96c6\u4e2d\uff09</li>\n<li>\u68af\u5ea6\u6d88\u5931\uff08\u6df1\u5c42\u6ce8\u610f\u529b\u5931\u6548\uff09</li>\n</ul>\n<h2 id=\"42\">4.2 \u957f\u6587\u672c\u5904\u7406\u4e0e\u4f4d\u7f6e\u7f16\u7801\u4f18\u5316</h2>\n<p>\u957f\u6587\u672c\u5904\u7406\u662f LLM \u540e\u8bad\u7ec3\u4e2d\u7684\u5173\u952e\u6280\u672f\u6311\u6218\u3002\u968f\u7740\u5e94\u7528\u573a\u666f\u4ece\u7b80\u5355\u95ee\u7b54\u6269\u5c55\u5230\u6587\u6863\u7406\u89e3\u3001\u4ee3\u7801\u751f\u6210\u3001\u957f\u7bc7\u521b\u4f5c\u7b49\u9886\u57df\uff0c\u6a21\u578b\u9700\u8981\u5904\u7406\u6570\u4e07\u751a\u81f3\u6570\u5341\u4e07 token \u7684\u8f93\u5165\u3002\u672c\u8282\u63a2\u8ba8\u5982\u4f55\u901a\u8fc7\u5b9e\u9a8c\u8bbe\u8ba1\u514b\u670d\u957f\u5e8f\u5217\u5efa\u6a21\u7684\u6280\u672f\u74f6\u9888\u3002</p>\n<h3 id=\"421\">4.2.1 \u957f\u5e8f\u5217\u5efa\u6a21\u7684\u6280\u672f\u74f6\u9888</h3>\n<p><strong>\u8ba1\u7b97\u590d\u6742\u5ea6\u95ee\u9898</strong></p>\n<p>\u6807\u51c6 Transformer \u7684\u81ea\u6ce8\u610f\u529b\u673a\u5236\u5177\u6709 O(n\u00b2) \u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u5185\u5b58\u9700\u6c42 = batch_size \u00d7 seq_len\u00b2 \u00d7 hidden_dim \u00d7 4 bytes\n\u8ba1\u7b97\u9700\u6c42 = 2 \u00d7 batch_size \u00d7 seq_len\u00b2 \u00d7 hidden_dim FLOPs\n\n\u4f8b\uff1aseq_len=32K, hidden_dim=4096, batch_size=1\n\u5185\u5b58 \u2248 16GB (\u4ec5\u6ce8\u610f\u529b\u77e9\u9635)\n</code></pre></div>\n\n<p>\u8fd9\u5bfc\u81f4\uff1a</p>\n<ul>\n<li><strong>\u5185\u5b58\u5899</strong>\uff1aGPU\u5185\u5b58\u9650\u5236\u4e86\u6700\u5927\u5e8f\u5217\u957f\u5ea6</li>\n<li><strong>\u8ba1\u7b97\u5899</strong>\uff1a\u8bad\u7ec3\u65f6\u95f4\u968f\u5e8f\u5217\u957f\u5ea6\u5e73\u65b9\u589e\u957f</li>\n<li><strong>\u68af\u5ea6\u6d88\u5931</strong>\uff1a\u6df1\u5c42\u7f51\u7edc\u4e2d\u7684\u957f\u8ddd\u79bb\u4f9d\u8d56\u96be\u4ee5\u5b66\u4e60</li>\n</ul>\n<p><strong>\u4f4d\u7f6e\u7f16\u7801\u7684\u5c40\u9650\u6027</strong></p>\n<ol>\n<li><strong>\u7edd\u5bf9\u4f4d\u7f6e\u7f16\u7801\u7684\u5916\u63a8\u5931\u8d25</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u8bad\u7ec3\uff1aposition \u2208 [0, 2048]\n\u63a8\u7406\uff1aposition = 10000\n\u7ed3\u679c\uff1a\u6027\u80fd\u6025\u5267\u4e0b\u964d\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u76f8\u5bf9\u4f4d\u7f6e\u7f16\u7801\u7684\u8ba1\u7b97\u5f00\u9500</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u76f8\u5bf9\u4f4d\u7f6e\u77e9\u9635\uff1aO(n\u00b2 \u00d7 d_k)\n\u6bcf\u4e2a\u6ce8\u610f\u529b\u5934\u90fd\u9700\u8981\u72ec\u7acb\u8ba1\u7b97\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u4f4d\u7f6e\u4fe1\u606f\u7684\u8bed\u4e49\u6df7\u6dc6</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>&quot;\u7b2c1000\u4e2atoken&quot; \u5728\u4e0d\u540c\u6587\u6863\u4e2d\u542b\u4e49\u4e0d\u540c\n\u9700\u8981\u8003\u8651\uff1a\u6bb5\u843d\u8fb9\u754c\u3001\u53e5\u5b50\u8fb9\u754c\u3001\u8bed\u4e49\u5355\u5143\n</code></pre></div>\n\n<p><strong>\u4fe1\u606f\u74f6\u9888\u4e0e\u9057\u5fd8\u66f2\u7ebf</strong></p>\n<p>\u957f\u5e8f\u5217\u4e2d\u7684\u4fe1\u606f\u4f20\u9012\u5b58\u5728\u74f6\u9888\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u4fe1\u606f\u4fdd\u7559\u7387 \u2248 exp(-\u03bb \u00d7 distance)\n\u5176\u4e2d \u03bb \u662f\u9057\u5fd8\u7cfb\u6570\uff0cdistance \u662f token \u8ddd\u79bb\n</code></pre></div>\n\n<p>\u5b9e\u9a8c\u89c2\u5bdf\uff1a</p>\n<ul>\n<li>2K tokens\uff1a95% \u4fe1\u606f\u4fdd\u7559</li>\n<li>8K tokens\uff1a70% \u4fe1\u606f\u4fdd\u7559  </li>\n<li>32K tokens\uff1a&lt;40% \u4fe1\u606f\u4fdd\u7559</li>\n</ul>\n<h3 id=\"422\">4.2.2 \u4f4d\u7f6e\u7f16\u7801\u7684\u6539\u8fdb\u65b9\u6cd5</h3>\n<p><strong>RoPE\uff08\u65cb\u8f6c\u4f4d\u7f6e\u7f16\u7801\uff09\u4f18\u5316</strong></p>\n<p>RoPE \u901a\u8fc7\u65cb\u8f6c\u77e9\u9635\u7f16\u7801\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u5177\u6709\u826f\u597d\u7684\u5916\u63a8\u6027\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">rope_encoding</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">positions</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u57fa\u7840 RoPE</span>\n    <span class=\"n\">theta</span> <span class=\"o\">=</span> <span class=\"mf\">10000.0</span>\n    <span class=\"n\">dim</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># \u4f4d\u7f6e\u9891\u7387\u8ba1\u7b97</span>\n    <span class=\"n\">freqs</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">theta</span> <span class=\"o\">**</span> <span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">()</span> <span class=\"o\">/</span> <span class=\"n\">dim</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># \u5e94\u7528\u65cb\u8f6c</span>\n    <span class=\"n\">q_rot</span> <span class=\"o\">=</span> <span class=\"n\">apply_rotation</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">freqs</span><span class=\"p\">,</span> <span class=\"n\">positions</span><span class=\"p\">)</span>\n    <span class=\"n\">k_rot</span> <span class=\"o\">=</span> <span class=\"n\">apply_rotation</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">freqs</span><span class=\"p\">,</span> <span class=\"n\">positions</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">q_rot</span><span class=\"p\">,</span> <span class=\"n\">k_rot</span>\n</code></pre></div>\n\n<p><strong>\u5b9e\u9a8c\u4f18\u5316\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u52a8\u6001 theta \u8c03\u6574</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6839\u636e\u5e8f\u5217\u957f\u5ea6\u81ea\u9002\u5e94\u8c03\u6574</span>\n<span class=\"n\">theta</span> <span class=\"o\">=</span> <span class=\"n\">base_theta</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">current_len</span> <span class=\"o\">/</span> <span class=\"n\">base_len</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mf\">0.5</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>NTK-aware \u7f29\u653e</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Neural Tangent Kernel \u611f\u77e5\u7684\u4f4d\u7f6e\u7f29\u653e</span>\n<span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">max_len</span> <span class=\"o\">/</span> <span class=\"n\">base_len</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"p\">(</span><span class=\"n\">dim</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">dim</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"n\">positions</span> <span class=\"o\">=</span> <span class=\"n\">positions</span> <span class=\"o\">/</span> <span class=\"n\">scale</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u4f4d\u7f6e\u63d2\u503c\uff08Position Interpolation\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u7ebf\u6027\u63d2\u503c\u538b\u7f29\u4f4d\u7f6e\u8303\u56f4</span>\n<span class=\"n\">compressed_pos</span> <span class=\"o\">=</span> <span class=\"n\">positions</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">base_len</span> <span class=\"o\">/</span> <span class=\"n\">current_len</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>ALiBi\uff08Attention with Linear Biases\uff09</strong></p>\n<p>ALiBi \u901a\u8fc7\u7ebf\u6027\u504f\u7f6e\u5b9e\u73b0\u4f4d\u7f6e\u611f\u77e5\uff0c\u65e0\u9700\u663e\u5f0f\u4f4d\u7f6e\u7f16\u7801\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">alibi_bias</span><span class=\"p\">(</span><span class=\"n\">seq_len</span><span class=\"p\">,</span> <span class=\"n\">num_heads</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u4e3a\u6bcf\u4e2a\u6ce8\u610f\u529b\u5934\u751f\u6210\u4e0d\u540c\u7684\u659c\u7387</span>\n    <span class=\"n\">slopes</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">**</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">8</span> <span class=\"o\">*</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">num_heads</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">num_heads</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u6784\u5efa\u504f\u7f6e\u77e9\u9635</span>\n    <span class=\"n\">positions</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">seq_len</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">seq_len</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">biases</span> <span class=\"o\">=</span> <span class=\"n\">slopes</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">positions</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">biases</span>\n</code></pre></div>\n\n<p><strong>\u5b9e\u9a8c\u5bf9\u6bd4\u6846\u67b6</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compare_position_encodings</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">test_lengths</span><span class=\"p\">):</span>\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">encoding_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;rope&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;alibi&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;absolute&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;relative&#39;</span><span class=\"p\">]:</span>\n        <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">set_position_encoding</span><span class=\"p\">(</span><span class=\"n\">encoding_type</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">length</span> <span class=\"ow\">in</span> <span class=\"n\">test_lengths</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6d4b\u8bd5\u56f0\u60d1\u5ea6</span>\n            <span class=\"n\">ppl</span> <span class=\"o\">=</span> <span class=\"n\">evaluate_perplexity</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u6d4b\u8bd5\u957f\u8ddd\u79bb\u4f9d\u8d56</span>\n            <span class=\"n\">long_dep_score</span> <span class=\"o\">=</span> <span class=\"n\">test_long_range_dependency</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u6d4b\u8bd5\u4f4d\u7f6e\u654f\u611f\u4efb\u52a1</span>\n            <span class=\"n\">position_acc</span> <span class=\"o\">=</span> <span class=\"n\">test_position_sensitive_tasks</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">)</span>\n\n            <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"n\">encoding_type</span><span class=\"p\">][</span><span class=\"n\">length</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;perplexity&#39;</span><span class=\"p\">:</span> <span class=\"n\">ppl</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;long_dependency&#39;</span><span class=\"p\">:</span> <span class=\"n\">long_dep_score</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;position_accuracy&#39;</span><span class=\"p\">:</span> <span class=\"n\">position_acc</span>\n            <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">results</span>\n</code></pre></div>\n\n<h3 id=\"423\">4.2.3 \u6ce8\u610f\u529b\u673a\u5236\u7684\u4f18\u5316</h3>\n<p><strong>\u7a00\u758f\u6ce8\u610f\u529b\u6a21\u5f0f</strong></p>\n<ol>\n<li><strong>\u5c40\u90e8\u6ce8\u610f\u529b\uff08Local Attention\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u6bcf\u4e2a token \u53ea\u5173\u6ce8\u7a97\u53e3\u5185\u7684 k \u4e2a\u90bb\u8fd1 token\n\u590d\u6742\u5ea6\uff1aO(n \u00d7 k) where k &lt;&lt; n\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u8de8\u6b65\u6ce8\u610f\u529b\uff08Strided Attention\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u56fa\u5b9a\u6b65\u957f\u91c7\u6837\uff1aattend to every k-th token\n\u590d\u6742\u5ea6\uff1aO(n\u00b2/k)\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>Longformer \u98ce\u683c\u7684\u6df7\u5408\u6ce8\u610f\u529b</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">Global</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"k\">Local</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">Dilated</span><span class=\"w\"> </span><span class=\"n\">patterns</span>\n<span class=\"n\">\u5168\u5c40</span><span class=\"w\"> </span><span class=\"n\">token</span><span class=\"err\">\uff1a</span><span class=\"o\">[</span><span class=\"n\">CLS</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">SEP</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">\u7b49\u7279\u6b8a\u6807\u8bb0</span>\n<span class=\"n\">\u5c40\u90e8\u7a97\u53e3</span><span class=\"err\">\uff1a</span><span class=\"k\">size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">512</span>\n<span class=\"n\">\u81a8\u80c0\u7a97\u53e3</span><span class=\"err\">\uff1a</span><span class=\"n\">dilation</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span>\n</code></pre></div>\n\n<p><strong>Flash Attention \u4f18\u5316</strong></p>\n<p>Flash Attention \u901a\u8fc7 IO \u4f18\u5316\u663e\u8457\u63d0\u5347\u957f\u5e8f\u5217\u6027\u80fd\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">flash_attention_experiment</span><span class=\"p\">(</span><span class=\"n\">seq_lengths</span><span class=\"p\">,</span> <span class=\"n\">batch_sizes</span><span class=\"p\">):</span>\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">seq_len</span> <span class=\"ow\">in</span> <span class=\"n\">seq_lengths</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">batch_size</span> <span class=\"ow\">in</span> <span class=\"n\">batch_sizes</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6807\u51c6\u6ce8\u610f\u529b</span>\n            <span class=\"n\">std_time</span><span class=\"p\">,</span> <span class=\"n\">std_mem</span> <span class=\"o\">=</span> <span class=\"n\">benchmark_standard_attention</span><span class=\"p\">(</span>\n                <span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">seq_len</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"c1\"># Flash Attention</span>\n            <span class=\"n\">flash_time</span><span class=\"p\">,</span> <span class=\"n\">flash_mem</span> <span class=\"o\">=</span> <span class=\"n\">benchmark_flash_attention</span><span class=\"p\">(</span>\n                <span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">seq_len</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                <span class=\"s1\">&#39;seq_len&#39;</span><span class=\"p\">:</span> <span class=\"n\">seq_len</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;batch_size&#39;</span><span class=\"p\">:</span> <span class=\"n\">batch_size</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;speedup&#39;</span><span class=\"p\">:</span> <span class=\"n\">std_time</span> <span class=\"o\">/</span> <span class=\"n\">flash_time</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;memory_saving&#39;</span><span class=\"p\">:</span> <span class=\"n\">std_mem</span> <span class=\"o\">/</span> <span class=\"n\">flash_mem</span>\n            <span class=\"p\">})</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">results</span>\n</code></pre></div>\n\n<p><strong>\u6ce8\u610f\u529b\u4e0b\u91c7\u6837\u7b56\u7565</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">AttentionDownsampling</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">downsample_ratio</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ratio</span> <span class=\"o\">=</span> <span class=\"n\">downsample_ratio</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">compute_attention</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 1. \u5bf9 K,V \u8fdb\u884c\u4e0b\u91c7\u6837</span>\n        <span class=\"n\">k_downsampled</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">downsample</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ratio</span><span class=\"p\">)</span>\n        <span class=\"n\">v_downsampled</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">downsample</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ratio</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. \u8ba1\u7b97\u7a00\u758f\u6ce8\u610f\u529b</span>\n        <span class=\"n\">attn_scores</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">k_downsampled</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n        <span class=\"n\">attn_weights</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">attn_scores</span> <span class=\"o\">/</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">d_k</span><span class=\"p\">),</span> <span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u52a0\u6743\u805a\u5408</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">attn_weights</span><span class=\"p\">,</span> <span class=\"n\">v_downsampled</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 4. \u4e0a\u91c7\u6837\u6062\u590d</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">upsample</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ratio</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">output</span>\n</code></pre></div>\n\n<h3 id=\"424\">4.2.4 \u5206\u5757\u7b56\u7565\u4e0e\u6ed1\u52a8\u7a97\u53e3</h3>\n<p><strong>\u5206\u5757\u5904\u7406\u6846\u67b6</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ChunkedProcessing</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"mi\">2048</span><span class=\"p\">,</span> <span class=\"n\">overlap</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">chunk_size</span> <span class=\"o\">=</span> <span class=\"n\">chunk_size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">overlap</span> <span class=\"o\">=</span> <span class=\"n\">overlap</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">process_long_text</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n        <span class=\"n\">chunks</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_chunks</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n        <span class=\"n\">chunk_outputs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"c1\"># \u7ef4\u62a4\u8de8\u5757\u72b6\u6001</span>\n        <span class=\"n\">cross_chunk_state</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">chunk</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">chunks</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u6dfb\u52a0\u4e0a\u4e0b\u6587</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">chunks</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"o\">-</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">overlap</span><span class=\"p\">:]</span>\n                <span class=\"n\">chunk</span> <span class=\"o\">=</span> <span class=\"n\">context</span> <span class=\"o\">+</span> <span class=\"n\">chunk</span>\n\n            <span class=\"c1\"># \u5904\u7406\u5f53\u524d\u5757</span>\n            <span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">new_state</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">process_with_state</span><span class=\"p\">(</span>\n                <span class=\"n\">chunk</span><span class=\"p\">,</span> <span class=\"n\">cross_chunk_state</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u66f4\u65b0\u72b6\u6001</span>\n            <span class=\"n\">cross_chunk_state</span> <span class=\"o\">=</span> <span class=\"n\">new_state</span>\n\n            <span class=\"c1\"># \u53bb\u9664\u91cd\u53e0\u90e8\u5206</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">output</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">overlap</span><span class=\"p\">:]</span>\n\n            <span class=\"n\">chunk_outputs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">merge_outputs</span><span class=\"p\">(</span><span class=\"n\">chunk_outputs</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u6ed1\u52a8\u7a97\u53e3\u6ce8\u610f\u529b</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">sliding_window_attention</span><span class=\"p\">(</span><span class=\"n\">seq_len</span><span class=\"p\">,</span> <span class=\"n\">window_size</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u751f\u6210\u6ed1\u52a8\u7a97\u53e3\u6ce8\u610f\u529b\u63a9\u7801</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">seq_len</span><span class=\"p\">,</span> <span class=\"n\">seq_len</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">seq_len</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u5c40\u90e8\u7a97\u53e3</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"n\">window_size</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">seq_len</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">window_size</span> <span class=\"o\">//</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">mask</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">:</span><span class=\"n\">end</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n        <span class=\"c1\"># \u8de8\u6b65\u8fde\u63a5\uff08\u7528\u4e8e\u957f\u8ddd\u79bb\u4f9d\u8d56\uff09</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">seq_len</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"n\">j</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">window_size</span><span class=\"p\">:</span>\n                <span class=\"n\">mask</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">mask</span>\n</code></pre></div>\n\n<p><strong>\u5c42\u6b21\u5316\u5904\u7406\u7b56\u7565</strong></p>\n<div class=\"codehilite\"><pre><span></span><code>\u6587\u6863\u7ea7\u522b\u5904\u7406\uff1a\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502          \u5b8c\u6574\u6587\u6863 (32K)          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u6bb5\u843d1   \u2502 \u6bb5\u843d2   \u2502 \u6bb5\u843d3   \u2502 \u6bb5\u843d4   \u2502\n\u2502 (8K)    \u2502 (8K)    \u2502 (8K)    \u2502 (8K)    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2193\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\n\u2502\u53e51\u2502\u53e52\u2502...\u2502\u53e5n\u2502\u53e51\u2502\u53e52\u2502...\u2502\u53e5m\u2502  \u7ec6\u7c92\u5ea6\u5904\u7406\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<p><strong>\u5b9e\u9a8c\u8bc4\u4f30\u534f\u8bae</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">evaluate_long_context_methods</span><span class=\"p\">():</span>\n    <span class=\"n\">test_suite</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;retrieval&#39;</span><span class=\"p\">:</span> <span class=\"n\">test_needle_in_haystack</span><span class=\"p\">,</span>  <span class=\"c1\"># \u957f\u6587\u68c0\u7d22</span>\n        <span class=\"s1\">&#39;summary&#39;</span><span class=\"p\">:</span> <span class=\"n\">test_summarization</span><span class=\"p\">,</span>          <span class=\"c1\"># \u6458\u8981\u751f\u6210</span>\n        <span class=\"s1\">&#39;qa&#39;</span><span class=\"p\">:</span> <span class=\"n\">test_multi_hop_qa</span><span class=\"p\">,</span>               <span class=\"c1\"># \u591a\u8df3\u95ee\u7b54</span>\n        <span class=\"s1\">&#39;coherence&#39;</span><span class=\"p\">:</span> <span class=\"n\">test_long_form_generation</span>  <span class=\"c1\"># \u957f\u6587\u751f\u6210\u8fde\u8d2f\u6027</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">methods</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;baseline&#39;</span><span class=\"p\">:</span> <span class=\"n\">StandardAttention</span><span class=\"p\">(),</span>\n        <span class=\"s1\">&#39;chunked&#39;</span><span class=\"p\">:</span> <span class=\"n\">ChunkedProcessing</span><span class=\"p\">(),</span>\n        <span class=\"s1\">&#39;sliding&#39;</span><span class=\"p\">:</span> <span class=\"n\">SlidingWindowAttention</span><span class=\"p\">(),</span>\n        <span class=\"s1\">&#39;sparse&#39;</span><span class=\"p\">:</span> <span class=\"n\">SparseAttention</span><span class=\"p\">(),</span>\n        <span class=\"s1\">&#39;hierarchical&#39;</span><span class=\"p\">:</span> <span class=\"n\">HierarchicalProcessing</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"k\">for</span> <span class=\"n\">method_name</span><span class=\"p\">,</span> <span class=\"n\">method</span> <span class=\"ow\">in</span> <span class=\"n\">methods</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n        <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"n\">method_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">task_name</span><span class=\"p\">,</span> <span class=\"n\">task_fn</span> <span class=\"ow\">in</span> <span class=\"n\">test_suite</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">task_fn</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"p\">)</span>\n            <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"n\">method_name</span><span class=\"p\">][</span><span class=\"n\">task_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">score</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">results</span>\n</code></pre></div>\n\n<p><strong>\u5185\u5b58\u4f18\u5316\u6280\u5de7</strong></p>\n<ol>\n<li><strong>\u68af\u5ea6\u68c0\u67e5\u70b9\uff08Gradient Checkpointing\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u7528\u8ba1\u7b97\u6362\u5185\u5b58</span>\n<span class=\"k\">def</span> <span class=\"nf\">forward_with_checkpointing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u4e0d\u4fdd\u5b58\u4e2d\u95f4\u6fc0\u6d3b\u503c\uff0c\u53cd\u5411\u4f20\u64ad\u65f6\u91cd\u65b0\u8ba1\u7b97</span>\n    <span class=\"k\">return</span> <span class=\"n\">checkpoint</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">transformer_block</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># FP16/BF16 \u51cf\u5c11\u5185\u5b58\u5360\u7528</span>\n<span class=\"k\">with</span> <span class=\"n\">autocast</span><span class=\"p\">():</span>\n    <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">)</span>\n    <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">criterion</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u6fc0\u6d3b\u503c\u91cd\u8ba1\u7b97</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u9009\u62e9\u6027\u4fdd\u5b58\u5173\u952e\u5c42\u7684\u6fc0\u6d3b\u503c</span>\n<span class=\"n\">critical_layers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">]</span>  <span class=\"c1\"># \u4ec5\u4fdd\u5b58\u8fd9\u4e9b\u5c42</span>\n</code></pre></div>\n\n<h2 id=\"43-cot\">4.3 \u601d\u7ef4\u94fe\uff08CoT\uff09\u8bad\u7ec3\u7b56\u7565</h2>\n<p>\u601d\u7ef4\u94fe\uff08Chain-of-Thought\uff09\u662f\u63d0\u5347 LLM \u63a8\u7406\u80fd\u529b\u7684\u5173\u952e\u6280\u672f\u3002\u901a\u8fc7\u8bad\u7ec3\u6a21\u578b\u751f\u6210\u4e2d\u95f4\u63a8\u7406\u6b65\u9aa4\uff0cCoT \u663e\u8457\u6539\u5584\u4e86\u590d\u6742\u63a8\u7406\u4efb\u52a1\u7684\u6027\u80fd\u3002\u672c\u8282\u63a2\u8ba8\u5982\u4f55\u8bbe\u8ba1\u5b9e\u9a8c\u6765\u6784\u5efa\u9ad8\u8d28\u91cf\u7684 CoT \u6570\u636e\u96c6\u3001\u4f18\u5316\u8bad\u7ec3\u7b56\u7565\uff0c\u4ee5\u53ca\u89e3\u51b3 CoT \u8bad\u7ec3\u4e2d\u7684\u5e38\u89c1\u95ee\u9898\u3002</p>\n<h3 id=\"431-cot\">4.3.1 CoT \u6570\u636e\u7684\u6784\u9020\u65b9\u6cd5</h3>\n<p><strong>CoT \u6570\u636e\u7684\u6838\u5fc3\u8981\u7d20</strong></p>\n<p>\u9ad8\u8d28\u91cf\u7684 CoT \u6570\u636e\u9700\u8981\u6ee1\u8db3\uff1a</p>\n<ol>\n<li><strong>\u6b65\u9aa4\u5b8c\u6574\u6027</strong>\uff1a\u8986\u76d6\u4ece\u95ee\u9898\u5230\u7b54\u6848\u7684\u6240\u6709\u63a8\u7406\u6b65\u9aa4</li>\n<li><strong>\u903b\u8f91\u8fde\u8d2f\u6027</strong>\uff1a\u6b65\u9aa4\u95f4\u6709\u6e05\u6670\u7684\u56e0\u679c\u5173\u7cfb</li>\n<li><strong>\u7c92\u5ea6\u9002\u4e2d</strong>\uff1a\u65e2\u4e0d\u8fc7\u4e8e\u5197\u957f\uff0c\u4e5f\u4e0d\u8df3\u8dc3\u592a\u5927</li>\n<li><strong>\u9519\u8bef\u53ef\u8ffd\u6eaf</strong>\uff1a\u4fbf\u4e8e\u5b9a\u4f4d\u63a8\u7406\u9519\u8bef\u7684\u4f4d\u7f6e</li>\n</ol>\n<p><strong>\u81ea\u52a8\u5316 CoT \u751f\u6210\u7b56\u7565</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CoTGenerator</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">base_model</span><span class=\"p\">,</span> <span class=\"n\">verifier_model</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_model</span> <span class=\"o\">=</span> <span class=\"n\">base_model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">verifier</span> <span class=\"o\">=</span> <span class=\"n\">verifier_model</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">generate_cot</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">question</span><span class=\"p\">,</span> <span class=\"n\">answer</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 1. \u96f6\u6837\u672c CoT \u751f\u6210</span>\n        <span class=\"n\">prompt</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Question: </span><span class=\"si\">{</span><span class=\"n\">question</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">Let&#39;s think step by step:&quot;</span>\n        <span class=\"n\">reasoning</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. \u9a8c\u8bc1\u63a8\u7406\u94fe</span>\n        <span class=\"n\">validity_score</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">verifier</span><span class=\"o\">.</span><span class=\"n\">check_reasoning</span><span class=\"p\">(</span>\n            <span class=\"n\">question</span><span class=\"p\">,</span> <span class=\"n\">reasoning</span><span class=\"p\">,</span> <span class=\"n\">answer</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u8fed\u4ee3\u4f18\u5316</span>\n        <span class=\"k\">while</span> <span class=\"n\">validity_score</span> <span class=\"o\">&lt;</span> <span class=\"n\">threshold</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6dfb\u52a0\u5f15\u5bfc\u4fe1\u606f</span>\n            <span class=\"n\">feedback</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">verifier</span><span class=\"o\">.</span><span class=\"n\">get_feedback</span><span class=\"p\">(</span><span class=\"n\">reasoning</span><span class=\"p\">)</span>\n            <span class=\"n\">prompt_with_feedback</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">prompt</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"si\">{</span><span class=\"n\">feedback</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"n\">reasoning</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">prompt_with_feedback</span><span class=\"p\">)</span>\n            <span class=\"n\">validity_score</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">verifier</span><span class=\"o\">.</span><span class=\"n\">check_reasoning</span><span class=\"p\">(</span>\n                <span class=\"n\">question</span><span class=\"p\">,</span> <span class=\"n\">reasoning</span><span class=\"p\">,</span> <span class=\"n\">answer</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">reasoning</span>\n</code></pre></div>\n\n<p><strong>\u591a\u6837\u5316 CoT \u91c7\u6837</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">diverse_cot_sampling</span><span class=\"p\">(</span><span class=\"n\">question</span><span class=\"p\">,</span> <span class=\"n\">num_samples</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u751f\u6210\u591a\u6837\u5316\u7684\u63a8\u7406\u8def\u5f84</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">cot_samples</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"c1\"># \u6e29\u5ea6\u91c7\u6837</span>\n    <span class=\"k\">for</span> <span class=\"n\">temp</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">1.1</span><span class=\"p\">]:</span>\n        <span class=\"n\">cot</span> <span class=\"o\">=</span> <span class=\"n\">generate_with_temperature</span><span class=\"p\">(</span><span class=\"n\">question</span><span class=\"p\">,</span> <span class=\"n\">temp</span><span class=\"p\">)</span>\n        <span class=\"n\">cot_samples</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">cot</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u63d0\u793a\u53d8\u4f53</span>\n    <span class=\"n\">prompt_templates</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s2\">&quot;Let&#39;s solve this step by step:&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Breaking this down:&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;First, let me understand the problem:&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Let&#39;s approach this systematically:&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Working through this carefully:&quot;</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">template</span> <span class=\"ow\">in</span> <span class=\"n\">prompt_templates</span><span class=\"p\">:</span>\n        <span class=\"n\">cot</span> <span class=\"o\">=</span> <span class=\"n\">generate_with_prompt</span><span class=\"p\">(</span><span class=\"n\">question</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">)</span>\n        <span class=\"n\">cot_samples</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">cot</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u53bb\u91cd\u548c\u8d28\u91cf\u7b5b\u9009</span>\n    <span class=\"n\">unique_cots</span> <span class=\"o\">=</span> <span class=\"n\">deduplicate_reasoning_paths</span><span class=\"p\">(</span><span class=\"n\">cot_samples</span><span class=\"p\">)</span>\n    <span class=\"n\">high_quality_cots</span> <span class=\"o\">=</span> <span class=\"n\">filter_by_quality</span><span class=\"p\">(</span><span class=\"n\">unique_cots</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">high_quality_cots</span>\n</code></pre></div>\n\n<p><strong>\u9886\u57df\u7279\u5b9a CoT \u6a21\u677f</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6570\u5b66\u63a8\u7406\u6a21\u677f</span>\n<span class=\"n\">MATH_COT_TEMPLATE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;</span>\n\n<span class=\"s2\">1. \u7406\u89e3\u95ee\u9898\uff1a</span><span class=\"si\">{problem_understanding}</span>\n<span class=\"s2\">2. \u8bc6\u522b\u5df2\u77e5\u6761\u4ef6\uff1a</span><span class=\"si\">{given_conditions}</span>\n<span class=\"s2\">3. \u786e\u5b9a\u6c42\u89e3\u76ee\u6807\uff1a</span><span class=\"si\">{target}</span>\n<span class=\"s2\">4. \u9009\u62e9\u89e3\u6cd5\uff1a</span><span class=\"si\">{method_selection}</span>\n<span class=\"s2\">5. \u6267\u884c\u8ba1\u7b97\uff1a</span><span class=\"si\">{calculation_steps}</span>\n<span class=\"s2\">6. \u9a8c\u8bc1\u7b54\u6848\uff1a</span><span class=\"si\">{verification}</span>\n<span class=\"s2\">&quot;&quot;&quot;</span>\n\n<span class=\"c1\"># \u903b\u8f91\u63a8\u7406\u6a21\u677f</span>\n<span class=\"n\">LOGIC_COT_TEMPLATE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;</span>\n\n<span class=\"s2\">1. \u524d\u63d0\u6761\u4ef6\uff1a</span><span class=\"si\">{premises}</span>\n<span class=\"s2\">2. \u63a8\u7406\u89c4\u5219\uff1a</span><span class=\"si\">{rules}</span>\n<span class=\"s2\">3. \u63a8\u5bfc\u8fc7\u7a0b\uff1a</span><span class=\"si\">{derivation}</span>\n<span class=\"s2\">4. \u7ed3\u8bba\uff1a</span><span class=\"si\">{conclusion}</span>\n<span class=\"s2\">&quot;&quot;&quot;</span>\n\n<span class=\"c1\"># \u4ee3\u7801\u63a8\u7406\u6a21\u677f</span>\n<span class=\"n\">CODE_COT_TEMPLATE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;</span>\n\n<span class=\"s2\">1. \u9700\u6c42\u5206\u6790\uff1a</span><span class=\"si\">{requirements}</span>\n<span class=\"s2\">2. \u7b97\u6cd5\u8bbe\u8ba1\uff1a</span><span class=\"si\">{algorithm}</span>\n<span class=\"s2\">3. \u590d\u6742\u5ea6\u5206\u6790\uff1a</span><span class=\"si\">{complexity}</span>\n<span class=\"s2\">4. \u8fb9\u754c\u6761\u4ef6\uff1a</span><span class=\"si\">{edge_cases}</span>\n<span class=\"s2\">5. \u5b9e\u73b0\uff1a</span><span class=\"si\">{implementation}</span>\n<span class=\"s2\">&quot;&quot;&quot;</span>\n</code></pre></div>\n\n<h3 id=\"432\">4.3.2 \u63a8\u7406\u6b65\u9aa4\u7684\u8d28\u91cf\u63a7\u5236</h3>\n<p><strong>\u6b65\u9aa4\u7c92\u5ea6\u63a7\u5236</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">optimize_step_granularity</span><span class=\"p\">(</span><span class=\"n\">cot_chain</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u4f18\u5316\u63a8\u7406\u6b65\u9aa4\u7684\u7c92\u5ea6</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">optimized_chain</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">step</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">cot_chain</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u68c0\u6d4b\u8fc7\u4e8e\u590d\u6742\u7684\u6b65\u9aa4</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_complex_step</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u5206\u89e3\u4e3a\u5b50\u6b65\u9aa4</span>\n            <span class=\"n\">sub_steps</span> <span class=\"o\">=</span> <span class=\"n\">decompose_step</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">)</span>\n            <span class=\"n\">optimized_chain</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">sub_steps</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u68c0\u6d4b\u5197\u4f59\u6b65\u9aa4</span>\n        <span class=\"k\">elif</span> <span class=\"n\">is_redundant_step</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">optimized_chain</span><span class=\"p\">):</span>\n            <span class=\"k\">continue</span>  <span class=\"c1\"># \u8df3\u8fc7\u5197\u4f59</span>\n\n        <span class=\"c1\"># \u5408\u5e76\u8fc7\u4e8e\u7ec6\u788e\u7684\u6b65\u9aa4</span>\n        <span class=\"k\">elif</span> <span class=\"n\">is_trivial_step</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u4e0e\u524d\u4e00\u6b65\u5408\u5e76</span>\n            <span class=\"n\">optimized_chain</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">merge_steps</span><span class=\"p\">(</span><span class=\"n\">optimized_chain</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">step</span><span class=\"p\">)</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">optimized_chain</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">optimized_chain</span>\n</code></pre></div>\n\n<p><strong>\u903b\u8f91\u4e00\u81f4\u6027\u68c0\u67e5</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">LogicConsistencyChecker</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rules</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_logic_rules</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check_consistency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cot_chain</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u68c0\u67e5\u63a8\u7406\u94fe\u7684\u903b\u8f91\u4e00\u81f4\u6027</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">issues</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"c1\"># 1. \u524d\u540e\u77db\u76fe\u68c0\u6d4b</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cot_chain</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">contradicts</span><span class=\"p\">(</span><span class=\"n\">cot_chain</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">cot_chain</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]):</span>\n                <span class=\"n\">issues</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Step </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\"> contradicts step </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. \u5faa\u73af\u63a8\u7406\u68c0\u6d4b</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">has_circular_reasoning</span><span class=\"p\">(</span><span class=\"n\">cot_chain</span><span class=\"p\">):</span>\n            <span class=\"n\">issues</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Circular reasoning detected&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u8df3\u8dc3\u63a8\u7406\u68c0\u6d4b</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cot_chain</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_valid_transition</span><span class=\"p\">(</span><span class=\"n\">cot_chain</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">cot_chain</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]):</span>\n                <span class=\"n\">issues</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Invalid transition from step </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\"> to </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 4. \u524d\u63d0\u5b8c\u5907\u6027\u68c0\u67e5</span>\n        <span class=\"n\">missing_premises</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check_premises</span><span class=\"p\">(</span><span class=\"n\">cot_chain</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">missing_premises</span><span class=\"p\">:</span>\n            <span class=\"n\">issues</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Missing premises: </span><span class=\"si\">{</span><span class=\"n\">missing_premises</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">issues</span>\n</code></pre></div>\n\n<p><strong>\u6570\u503c\u51c6\u786e\u6027\u9a8c\u8bc1</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">verify_numerical_accuracy</span><span class=\"p\">(</span><span class=\"n\">cot_chain</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u9a8c\u8bc1\u63a8\u7406\u94fe\u4e2d\u7684\u6570\u503c\u8ba1\u7b97</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">numerical_errors</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">step</span> <span class=\"ow\">in</span> <span class=\"n\">cot_chain</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u63d0\u53d6\u6570\u5b66\u8868\u8fbe\u5f0f</span>\n        <span class=\"n\">expressions</span> <span class=\"o\">=</span> <span class=\"n\">extract_math_expressions</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">expr</span> <span class=\"ow\">in</span> <span class=\"n\">expressions</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"c1\"># \u7b26\u53f7\u8ba1\u7b97\u9a8c\u8bc1</span>\n                <span class=\"n\">symbolic_result</span> <span class=\"o\">=</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">simplify</span><span class=\"p\">(</span><span class=\"n\">expr</span><span class=\"p\">)</span>\n\n                <span class=\"c1\"># \u6570\u503c\u8ba1\u7b97\u9a8c\u8bc1</span>\n                <span class=\"n\">numerical_result</span> <span class=\"o\">=</span> <span class=\"n\">eval_safely</span><span class=\"p\">(</span><span class=\"n\">expr</span><span class=\"p\">)</span>\n\n                <span class=\"c1\"># \u68c0\u67e5\u4e00\u81f4\u6027</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">isclose</span><span class=\"p\">(</span><span class=\"n\">symbolic_result</span><span class=\"p\">,</span> <span class=\"n\">numerical_result</span><span class=\"p\">,</span> <span class=\"n\">rel_tol</span><span class=\"o\">=</span><span class=\"mf\">1e-9</span><span class=\"p\">):</span>\n                    <span class=\"n\">numerical_errors</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                        <span class=\"s1\">&#39;step&#39;</span><span class=\"p\">:</span> <span class=\"n\">step</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;expression&#39;</span><span class=\"p\">:</span> <span class=\"n\">expr</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;symbolic&#39;</span><span class=\"p\">:</span> <span class=\"n\">symbolic_result</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;numerical&#39;</span><span class=\"p\">:</span> <span class=\"n\">numerical_result</span>\n                    <span class=\"p\">})</span>\n            <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                <span class=\"n\">numerical_errors</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                    <span class=\"s1\">&#39;step&#39;</span><span class=\"p\">:</span> <span class=\"n\">step</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;expression&#39;</span><span class=\"p\">:</span> <span class=\"n\">expr</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;error&#39;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n                <span class=\"p\">})</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">numerical_errors</span>\n</code></pre></div>\n\n<h3 id=\"433\">4.3.3 \u81ea\u6d3d\u6027\u8bad\u7ec3</h3>\n<p><strong>Self-Consistency \u5b9e\u73b0</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">SelfConsistencyTraining</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">num_paths</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_paths</span> <span class=\"o\">=</span> <span class=\"n\">num_paths</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">train_step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">question</span><span class=\"p\">,</span> <span class=\"n\">true_answer</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 1. \u751f\u6210\u591a\u6761\u63a8\u7406\u8def\u5f84</span>\n        <span class=\"n\">reasoning_paths</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_paths</span><span class=\"p\">):</span>\n            <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate_cot</span><span class=\"p\">(</span><span class=\"n\">question</span><span class=\"p\">)</span>\n            <span class=\"n\">reasoning_paths</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. \u6295\u7968\u5f97\u51fa\u7b54\u6848</span>\n        <span class=\"n\">answers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">extract_answer</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">path</span> <span class=\"ow\">in</span> <span class=\"n\">reasoning_paths</span><span class=\"p\">]</span>\n        <span class=\"n\">majority_answer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">majority_vote</span><span class=\"p\">(</span><span class=\"n\">answers</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u9009\u62e9\u4e00\u81f4\u7684\u8def\u5f84\u4f5c\u4e3a\u6b63\u4f8b</span>\n        <span class=\"n\">consistent_paths</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">path</span> <span class=\"k\">for</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">ans</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">reasoning_paths</span><span class=\"p\">,</span> <span class=\"n\">answers</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">ans</span> <span class=\"o\">==</span> <span class=\"n\">majority_answer</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"c1\"># 4. \u6784\u9020\u8bad\u7ec3\u6837\u672c</span>\n        <span class=\"k\">if</span> <span class=\"n\">majority_answer</span> <span class=\"o\">==</span> <span class=\"n\">true_answer</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6b63\u786e\u7b54\u6848\uff1a\u6240\u6709\u4e00\u81f4\u8def\u5f84\u90fd\u662f\u6b63\u4f8b</span>\n            <span class=\"n\">positive_samples</span> <span class=\"o\">=</span> <span class=\"n\">consistent_paths</span>\n            <span class=\"n\">negative_samples</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u9519\u8bef\u7b54\u6848\uff1a\u9700\u8981\u751f\u6210\u4fee\u6b63\u8def\u5f84</span>\n            <span class=\"n\">positive_samples</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generate_correction</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">true_answer</span><span class=\"p\">)]</span>\n            <span class=\"n\">negative_samples</span> <span class=\"o\">=</span> <span class=\"n\">consistent_paths</span>\n\n        <span class=\"c1\"># 5. \u5bf9\u6bd4\u5b66\u4e60</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">contrastive_loss</span><span class=\"p\">(</span>\n            <span class=\"n\">positive_samples</span><span class=\"p\">,</span> <span class=\"n\">negative_samples</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">loss</span>\n</code></pre></div>\n\n<p><strong>\u8def\u5f84\u591a\u6837\u6027\u5956\u52b1</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">diversity_reward</span><span class=\"p\">(</span><span class=\"n\">reasoning_paths</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u8ba1\u7b97\u63a8\u7406\u8def\u5f84\u7684\u591a\u6837\u6027\u5956\u52b1</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">reasoning_paths</span><span class=\"p\">)</span>\n    <span class=\"n\">diversity_matrix</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">))</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u8ba1\u7b97\u8def\u5f84\u76f8\u4f3c\u5ea6</span>\n            <span class=\"n\">similarity</span> <span class=\"o\">=</span> <span class=\"n\">path_similarity</span><span class=\"p\">(</span>\n                <span class=\"n\">reasoning_paths</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> \n                <span class=\"n\">reasoning_paths</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">diversity_matrix</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">similarity</span>\n            <span class=\"n\">diversity_matrix</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">diversity_matrix</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># \u591a\u6837\u6027\u5f97\u5206\uff1a\u5e73\u5747\u4e24\u4e24\u5dee\u5f02</span>\n    <span class=\"n\">diversity_score</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">diversity_matrix</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">diversity_score</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">path_similarity</span><span class=\"p\">(</span><span class=\"n\">path1</span><span class=\"p\">,</span> <span class=\"n\">path2</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u8ba1\u7b97\u4e24\u6761\u63a8\u7406\u8def\u5f84\u7684\u76f8\u4f3c\u5ea6</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># 1. \u7ed3\u6784\u76f8\u4f3c\u5ea6\uff08\u6b65\u9aa4\u6570\u91cf\u3001\u987a\u5e8f\uff09</span>\n    <span class=\"n\">struct_sim</span> <span class=\"o\">=</span> <span class=\"n\">structural_similarity</span><span class=\"p\">(</span><span class=\"n\">path1</span><span class=\"p\">,</span> <span class=\"n\">path2</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># 2. \u8bed\u4e49\u76f8\u4f3c\u5ea6\uff08\u5185\u5bb9\u76f8\u4f3c\u6027\uff09</span>\n    <span class=\"n\">semantic_sim</span> <span class=\"o\">=</span> <span class=\"n\">semantic_similarity</span><span class=\"p\">(</span><span class=\"n\">path1</span><span class=\"p\">,</span> <span class=\"n\">path2</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># 3. \u65b9\u6cd5\u76f8\u4f3c\u5ea6\uff08\u4f7f\u7528\u7684\u63a8\u7406\u65b9\u6cd5\uff09</span>\n    <span class=\"n\">method_sim</span> <span class=\"o\">=</span> <span class=\"n\">method_similarity</span><span class=\"p\">(</span><span class=\"n\">path1</span><span class=\"p\">,</span> <span class=\"n\">path2</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"mf\">0.3</span> <span class=\"o\">*</span> <span class=\"n\">struct_sim</span> <span class=\"o\">+</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">semantic_sim</span> <span class=\"o\">+</span> <span class=\"mf\">0.2</span> <span class=\"o\">*</span> <span class=\"n\">method_sim</span>\n</code></pre></div>\n\n<h3 id=\"434\">4.3.4 \u9519\u8bef\u4f20\u64ad\u4e0e\u7ea0\u6b63\u673a\u5236</h3>\n<p><strong>\u9519\u8bef\u4f20\u64ad\u5206\u6790</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ErrorPropagationAnalyzer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">error_types</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;calculation&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;\u8ba1\u7b97\u9519\u8bef&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;logic&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;\u903b\u8f91\u9519\u8bef&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;assumption&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;\u5047\u8bbe\u9519\u8bef&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;interpretation&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;\u7406\u89e3\u9519\u8bef&#39;</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">trace_error_propagation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cot_chain</span><span class=\"p\">,</span> <span class=\"n\">final_error</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u8ffd\u8e2a\u9519\u8bef\u5728\u63a8\u7406\u94fe\u4e2d\u7684\u4f20\u64ad</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">error_trace</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"c1\"># \u53cd\u5411\u8ffd\u8e2a</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cot_chain</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"n\">step</span> <span class=\"o\">=</span> <span class=\"n\">cot_chain</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n            <span class=\"c1\"># \u68c0\u6d4b\u8be5\u6b65\u9aa4\u662f\u5426\u5305\u542b\u9519\u8bef</span>\n            <span class=\"n\">step_errors</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">detect_step_errors</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">step_errors</span><span class=\"p\">:</span>\n                <span class=\"n\">error_trace</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                    <span class=\"s1\">&#39;step_index&#39;</span><span class=\"p\">:</span> <span class=\"n\">i</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;step_content&#39;</span><span class=\"p\">:</span> <span class=\"n\">step</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;errors&#39;</span><span class=\"p\">:</span> <span class=\"n\">step_errors</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;impact&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assess_impact</span><span class=\"p\">(</span><span class=\"n\">step_errors</span><span class=\"p\">,</span> <span class=\"n\">final_error</span><span class=\"p\">)</span>\n                <span class=\"p\">})</span>\n\n                <span class=\"c1\"># \u5224\u65ad\u662f\u5426\u4e3a\u6839\u672c\u539f\u56e0</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_root_cause</span><span class=\"p\">(</span><span class=\"n\">step_errors</span><span class=\"p\">,</span> <span class=\"n\">cot_chain</span><span class=\"p\">[:</span><span class=\"n\">i</span><span class=\"p\">]):</span>\n                    <span class=\"n\">error_trace</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"s1\">&#39;is_root_cause&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                    <span class=\"k\">break</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">error_trace</span>\n</code></pre></div>\n\n<p><strong>\u81ea\u52a8\u7ea0\u9519\u673a\u5236</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">AutoCorrector</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">verifier</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">verifier</span> <span class=\"o\">=</span> <span class=\"n\">verifier</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">correct_reasoning_chain</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cot_chain</span><span class=\"p\">,</span> <span class=\"n\">question</span><span class=\"p\">,</span> <span class=\"n\">expected_answer</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u81ea\u52a8\u7ea0\u6b63\u63a8\u7406\u94fe\u4e2d\u7684\u9519\u8bef</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">corrected_chain</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">error_detected</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">step</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">cot_chain</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u9a8c\u8bc1\u5f53\u524d\u6b65\u9aa4</span>\n            <span class=\"n\">step_valid</span><span class=\"p\">,</span> <span class=\"n\">error_info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">verifier</span><span class=\"o\">.</span><span class=\"n\">verify_step</span><span class=\"p\">(</span>\n                <span class=\"n\">step</span><span class=\"p\">,</span> \n                <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">corrected_chain</span><span class=\"p\">,</span>\n                <span class=\"n\">question</span><span class=\"o\">=</span><span class=\"n\">question</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">step_valid</span><span class=\"p\">:</span>\n                <span class=\"n\">corrected_chain</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">error_detected</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n                <span class=\"c1\"># \u751f\u6210\u4fee\u6b63\u6b65\u9aa4</span>\n                <span class=\"n\">correction_prompt</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">build_correction_prompt</span><span class=\"p\">(</span>\n                    <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">error_info</span><span class=\"p\">,</span> <span class=\"n\">corrected_chain</span><span class=\"p\">,</span> <span class=\"n\">question</span>\n                <span class=\"p\">)</span>\n\n                <span class=\"n\">corrected_step</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">correction_prompt</span><span class=\"p\">)</span>\n\n                <span class=\"c1\"># \u9a8c\u8bc1\u4fee\u6b63</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">verifier</span><span class=\"o\">.</span><span class=\"n\">verify_step</span><span class=\"p\">(</span><span class=\"n\">corrected_step</span><span class=\"p\">,</span> <span class=\"n\">corrected_chain</span><span class=\"p\">,</span> <span class=\"n\">question</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                    <span class=\"n\">corrected_chain</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">corrected_step</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"c1\"># \u5982\u679c\u4fee\u6b63\u5931\u8d25\uff0c\u91cd\u65b0\u751f\u6210\u6574\u4e2a\u540e\u7eed\u94fe</span>\n                    <span class=\"n\">remaining_chain</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">regenerate_from_step</span><span class=\"p\">(</span>\n                        <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">corrected_chain</span><span class=\"p\">,</span> <span class=\"n\">question</span><span class=\"p\">,</span> <span class=\"n\">expected_answer</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">corrected_chain</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">remaining_chain</span><span class=\"p\">)</span>\n                    <span class=\"k\">break</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">corrected_chain</span><span class=\"p\">,</span> <span class=\"n\">error_detected</span>\n</code></pre></div>\n\n<p><strong>\u9519\u8bef\u6a21\u5f0f\u5b66\u4e60</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ErrorPatternLearning</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">error_patterns</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">learn_from_errors</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">error_examples</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u4ece\u9519\u8bef\u6848\u4f8b\u4e2d\u5b66\u4e60\u6a21\u5f0f</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">example</span> <span class=\"ow\">in</span> <span class=\"n\">error_examples</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u63d0\u53d6\u9519\u8bef\u7279\u5f81</span>\n            <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">extract_error_features</span><span class=\"p\">(</span><span class=\"n\">example</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u805a\u7c7b\u76f8\u4f3c\u9519\u8bef</span>\n            <span class=\"n\">cluster_id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cluster_error</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">error_patterns</span><span class=\"p\">[</span><span class=\"n\">cluster_id</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                <span class=\"s1\">&#39;features&#39;</span><span class=\"p\">:</span> <span class=\"n\">features</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;correction&#39;</span><span class=\"p\">:</span> <span class=\"n\">example</span><span class=\"p\">[</span><span class=\"s1\">&#39;correction&#39;</span><span class=\"p\">],</span>\n                <span class=\"s1\">&#39;explanation&#39;</span><span class=\"p\">:</span> <span class=\"n\">example</span><span class=\"p\">[</span><span class=\"s1\">&#39;explanation&#39;</span><span class=\"p\">]</span>\n            <span class=\"p\">})</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">predict_error_likelihood</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u9884\u6d4b\u6b65\u9aa4\u51fa\u9519\u7684\u53ef\u80fd\u6027</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">extract_step_features</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n\n        <span class=\"n\">max_similarity</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">most_likely_error</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">cluster_id</span><span class=\"p\">,</span> <span class=\"n\">patterns</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">error_patterns</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">for</span> <span class=\"n\">pattern</span> <span class=\"ow\">in</span> <span class=\"n\">patterns</span><span class=\"p\">:</span>\n                <span class=\"n\">similarity</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">feature_similarity</span><span class=\"p\">(</span>\n                    <span class=\"n\">features</span><span class=\"p\">,</span> <span class=\"n\">pattern</span><span class=\"p\">[</span><span class=\"s1\">&#39;features&#39;</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n\n                <span class=\"k\">if</span> <span class=\"n\">similarity</span> <span class=\"o\">&gt;</span> <span class=\"n\">max_similarity</span><span class=\"p\">:</span>\n                    <span class=\"n\">max_similarity</span> <span class=\"o\">=</span> <span class=\"n\">similarity</span>\n                    <span class=\"n\">most_likely_error</span> <span class=\"o\">=</span> <span class=\"n\">pattern</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">max_similarity</span><span class=\"p\">,</span> <span class=\"n\">most_likely_error</span>\n</code></pre></div>\n\n<h2 id=\"44\">4.4 \u9886\u57df\u9002\u5e94\u4e0e\u6301\u7eed\u5b66\u4e60</h2>\n<h3 id=\"441\">4.4.1 \u9886\u57df\u6570\u636e\u7684\u9009\u62e9\u4e0e\u914d\u6bd4</h3>\n<h3 id=\"442\">4.4.2 \u707e\u96be\u6027\u9057\u5fd8\u7684\u7f13\u89e3</h3>\n<h3 id=\"443\">4.4.3 \u589e\u91cf\u5b66\u4e60\u7b56\u7565</h3>\n<h3 id=\"444\">4.4.4 \u77e5\u8bc6\u84b8\u998f\u4e0e\u6b63\u5219\u5316</h3>\n<h2 id=\"45\">4.5 \u5e7b\u89c9\u68c0\u6d4b\u4e0e\u7f13\u89e3</h2>\n<h3 id=\"451\">4.5.1 \u5e7b\u89c9\u7684\u5206\u7c7b\u4e0e\u6210\u56e0</h3>\n<h3 id=\"452\">4.5.2 \u68c0\u6d4b\u65b9\u6cd5\u4e0e\u8bc4\u4f30\u6307\u6807</h3>\n<h3 id=\"453\">4.5.3 \u8bad\u7ec3\u65f6\u7684\u7f13\u89e3\u7b56\u7565</h3>\n<h3 id=\"454\">4.5.4 \u63a8\u7406\u65f6\u7684\u5e72\u9884\u6280\u672f</h3>\n<h2 id=\"_3\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<h2 id=\"_4\">\u7ec3\u4e60\u9898</h2>\n<h2 id=\"gotchas\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef\uff08Gotchas\uff09</h2>"
  },
  "chapter9.md": {
    "hash": "57046143f87d2cebfeeb4d42b516ee3c",
    "content": "<h1 id=\"_1\">\u7b2c\u4e5d\u7ae0\uff1a\u751f\u4ea7\u90e8\u7f72\u4e0e\u76d1\u63a7</h1>\n<p>\u5c06\u540e\u8bad\u7ec3\u6a21\u578b\u4ece\u5b9e\u9a8c\u73af\u5883\u90e8\u7f72\u5230\u751f\u4ea7\u7cfb\u7edf\u662f\u4e00\u4e2a\u590d\u6742\u7684\u5de5\u7a0b\u6311\u6218\u3002\u672c\u7ae0\u7cfb\u7edf\u4ecb\u7ecd\u6a21\u578b\u538b\u7f29\u3001\u670d\u52a1\u5316\u67b6\u6784\u3001\u5b9e\u65f6\u76d1\u63a7\u3001\u6f02\u79fb\u68c0\u6d4b\u4ee5\u53ca\u53d1\u5e03\u7b56\u7565\u7b49\u5173\u952e\u6280\u672f\uff0c\u5e2e\u52a9\u60a8\u6784\u5efa\u7a33\u5b9a\u3001\u9ad8\u6548\u3001\u53ef\u7ef4\u62a4\u7684 LLM \u751f\u4ea7\u7cfb\u7edf\u3002</p>\n<h2 id=\"91\">9.1 \u6a21\u578b\u538b\u7f29\u4e0e\u52a0\u901f\u6280\u672f</h2>\n<h3 id=\"911\">9.1.1 \u91cf\u5316\u6280\u672f</h3>\n<p>\u91cf\u5316\u662f\u5c06\u6a21\u578b\u6743\u91cd\u548c\u6fc0\u6d3b\u503c\u4ece\u9ad8\u7cbe\u5ea6\uff08\u5982 FP32\uff09\u8f6c\u6362\u4e3a\u4f4e\u7cbe\u5ea6\uff08\u5982 INT8\u3001INT4\uff09\u7684\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u663e\u8457\u51cf\u5c11\u6a21\u578b\u5927\u5c0f\u548c\u63a8\u7406\u5ef6\u8fdf\u3002</p>\n<h4 id=\"post-training-quantization-ptq\">\u8bad\u7ec3\u540e\u91cf\u5316\uff08Post-Training Quantization, PTQ\uff09</h4>\n<p>PTQ \u5728\u8bad\u7ec3\u5b8c\u6210\u540e\u5bf9\u6a21\u578b\u8fdb\u884c\u91cf\u5316\uff0c\u65e0\u9700\u91cd\u65b0\u8bad\u7ec3\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u539f\u59cb\u6743\u91cd W \u2208 [-\u03b1, \u03b1]\n\u91cf\u5316\u8fc7\u7a0b\uff1aW_q = round(W \u00d7 s / \u03b1) \n\u53cd\u91cf\u5316\uff1aW&#39; = W_q \u00d7 \u03b1 / s\n\n\u5176\u4e2d s = 2^(b-1) - 1\uff0cb \u4e3a\u91cf\u5316\u4f4d\u6570\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u6280\u672f\u8981\u70b9</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u5bf9\u79f0 vs \u975e\u5bf9\u79f0\u91cf\u5316</strong>\n   - \u5bf9\u79f0\uff1a\u96f6\u70b9\u56fa\u5b9a\u5728 0\uff0c\u5b9e\u73b0\u7b80\u5355\u4f46\u7cbe\u5ea6\u7565\u4f4e\n   - \u975e\u5bf9\u79f0\uff1a\u5f15\u5165\u96f6\u70b9\u504f\u79fb\uff0c\u7cbe\u5ea6\u66f4\u9ad8\u4f46\u8ba1\u7b97\u590d\u6742</p>\n</li>\n<li>\n<p><strong>\u9010\u5c42 vs \u9010\u901a\u9053\u91cf\u5316</strong>\n   - \u9010\u5c42\uff1a\u6574\u5c42\u5171\u4eab\u91cf\u5316\u53c2\u6570\uff0c\u538b\u7f29\u7387\u9ad8\n   - \u9010\u901a\u9053\uff1a\u6bcf\u4e2a\u901a\u9053\u72ec\u7acb\u91cf\u5316\uff0c\u7cbe\u5ea6\u4fdd\u6301\u66f4\u597d</p>\n</li>\n<li>\n<p><strong>\u52a8\u6001 vs \u9759\u6001\u91cf\u5316</strong>\n   - \u9759\u6001\uff1a\u91cf\u5316\u53c2\u6570\u9884\u5148\u786e\u5b9a\uff0c\u63a8\u7406\u901f\u5ea6\u5feb\n   - \u52a8\u6001\uff1a\u8fd0\u884c\u65f6\u8ba1\u7b97\u91cf\u5316\u53c2\u6570\uff0c\u7cbe\u5ea6\u66f4\u9ad8</p>\n</li>\n</ol>\n<h4 id=\"quantization-aware-training-qat\">\u91cf\u5316\u611f\u77e5\u8bad\u7ec3\uff08Quantization-Aware Training, QAT\uff09</h4>\n<p>QAT \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u6a21\u62df\u91cf\u5316\u6548\u679c\uff0c\u4f7f\u6a21\u578b\u9002\u5e94\u4f4e\u7cbe\u5ea6\u8868\u793a\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u524d\u5411\u4f20\u64ad\uff1a\u4f7f\u7528\u91cf\u5316\u6743\u91cd\n\u53cd\u5411\u4f20\u64ad\uff1a\u4f7f\u7528\u5168\u7cbe\u5ea6\u68af\u5ea6\u66f4\u65b0\n\n\u4f2a\u91cf\u5316\u64cd\u4f5c\uff1a\nW_fake_quant = dequant(quant(W))\n</code></pre></div>\n\n<p><strong>\u5b9e\u8df5\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li>\ud83d\udca1 \u4ece INT8 \u5f00\u59cb\u5c1d\u8bd5\uff0c\u591a\u6570\u4efb\u52a1\u7cbe\u5ea6\u635f\u5931 &lt; 1%</li>\n<li>\ud83d\udca1 \u5173\u952e\u5c42\uff08\u5982\u7b2c\u4e00\u5c42\u3001\u6700\u540e\u4e00\u5c42\uff09\u4fdd\u6301\u9ad8\u7cbe\u5ea6</li>\n<li>\ud83d\udca1 \u4f7f\u7528\u6821\u51c6\u6570\u636e\u96c6\u4f18\u5316\u91cf\u5316\u53c2\u6570</li>\n</ul>\n<h3 id=\"912\">9.1.2 \u77e5\u8bc6\u84b8\u998f</h3>\n<p>\u901a\u8fc7\u6559\u5e08-\u5b66\u751f\u6846\u67b6\u5c06\u5927\u6a21\u578b\u77e5\u8bc6\u8fc1\u79fb\u5230\u5c0f\u6a21\u578b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u635f\u5931\u51fd\u6570\uff1a\nL = \u03b1 \u00d7 L_CE(y_student, y_true) + \n    \u03b2 \u00d7 L_KL(\u03c3(z_student/T), \u03c3(z_teacher/T))\n\n\u5176\u4e2d\uff1a\n\n<span class=\"k\">-</span> L_CE\uff1a\u4ea4\u53c9\u71b5\u635f\u5931\uff08\u786c\u6807\u7b7e\uff09\n<span class=\"k\">-</span> L_KL\uff1aKL \u6563\u5ea6\uff08\u8f6f\u6807\u7b7e\uff09\n<span class=\"k\">-</span> T\uff1a\u6e29\u5ea6\u53c2\u6570\uff0c\u63a7\u5236\u5206\u5e03\u5e73\u6ed1\u5ea6\n<span class=\"k\">-</span> \u03b1, \u03b2\uff1a\u635f\u5931\u6743\u91cd\n</code></pre></div>\n\n<p><strong>\u84b8\u998f\u7b56\u7565\u4f18\u5316</strong>\uff1a</p>\n<ol>\n<li><strong>\u9010\u5c42\u84b8\u998f</strong>\uff1a\u4e0d\u4ec5\u84b8\u998f\u6700\u7ec8\u8f93\u51fa\uff0c\u8fd8\u5bf9\u9f50\u4e2d\u95f4\u5c42\u8868\u793a</li>\n<li><strong>\u6ce8\u610f\u529b\u84b8\u998f</strong>\uff1a\u4f20\u9012\u6ce8\u610f\u529b\u6a21\u5f0f</li>\n<li><strong>\u7279\u5f81\u84b8\u998f</strong>\uff1a\u5bf9\u9f50\u9690\u5c42\u7279\u5f81\u5206\u5e03</li>\n</ol>\n<h3 id=\"913\">9.1.3 \u6a21\u578b\u526a\u679d</h3>\n<p>\u79fb\u9664\u5197\u4f59\u53c2\u6570\u4ee5\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f\uff1a</p>\n<h4 id=\"_2\">\u7ed3\u6784\u5316\u526a\u679d</h4>\n<div class=\"codehilite\"><pre><span></span><code>\u91cd\u8981\u6027\u8bc4\u5206\uff1a\n\n- \u6743\u91cd\u5e45\u5ea6\uff1a|W|\n- \u68af\u5ea6\u5e45\u5ea6\uff1a|\u2202L/\u2202W|\n- Taylor \u5c55\u5f00\uff1a\u0394L \u2248 |W \u00d7 \u2202L/\u2202W|\n\n\u526a\u679d\u6d41\u7a0b\uff1a\n\n1. \u8bad\u7ec3\u57fa\u7ebf\u6a21\u578b\n2. \u8ba1\u7b97\u91cd\u8981\u6027\u5206\u6570\n3. \u79fb\u9664\u4f4e\u5206\u795e\u7ecf\u5143/\u901a\u9053/\u5c42\n4. \u5fae\u8c03\u6062\u590d\u6027\u80fd\n</code></pre></div>\n\n<h4 id=\"_3\">\u975e\u7ed3\u6784\u5316\u526a\u679d</h4>\n<div class=\"codehilite\"><pre><span></span><code>\u7a00\u758f\u63a9\u7801\uff1aM \u2208 {0,1}^d\n\u7a00\u758f\u6743\u91cd\uff1aW_sparse = W \u2299 M\n\n\u52a8\u6001\u7a00\u758f\u8bad\u7ec3\uff1a\n\n<span class=\"k\">-</span> \u5468\u671f\u6027\u66f4\u65b0\u63a9\u7801\n<span class=\"k\">-</span> \u4fdd\u6301\u56fa\u5b9a\u7a00\u758f\u5ea6\n</code></pre></div>\n\n<p>\u26a0\ufe0f <strong>\u5e38\u89c1\u9677\u9631</strong>\uff1a</p>\n<ul>\n<li>\u975e\u7ed3\u6784\u5316\u526a\u679d\u867d\u7136\u538b\u7f29\u7387\u9ad8\uff0c\u4f46\u786c\u4ef6\u52a0\u901f\u56f0\u96be</li>\n<li>\u8fc7\u5ea6\u526a\u679d\u5bfc\u81f4\u4e0d\u53ef\u6062\u590d\u7684\u6027\u80fd\u635f\u5931</li>\n<li>\u4e0d\u540c\u4efb\u52a1\u5bf9\u526a\u679d\u7684\u654f\u611f\u5ea6\u5dee\u5f02\u5de8\u5927</li>\n</ul>\n<h3 id=\"914\">9.1.4 \u63a8\u7406\u4f18\u5316\u6280\u672f</h3>\n<h4 id=\"flash-attention\">Flash Attention</h4>\n<p>\u51cf\u5c11\u6ce8\u610f\u529b\u8ba1\u7b97\u7684\u5185\u5b58\u8bbf\u95ee\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u6807\u51c6\u6ce8\u610f\u529b\uff1aO(N\u00b2) \u5185\u5b58\nFlash Attention\uff1aO(N) \u5185\u5b58\n\n\u901a\u8fc7\u5206\u5757\u8ba1\u7b97\u548c\u878d\u5408 kernel \u5b9e\u73b0\uff1a\n\n- \u51cf\u5c11 HBM \u8bbf\u95ee\n- \u63d0\u9ad8 SRAM \u5229\u7528\u7387\n</code></pre></div>\n\n<h4 id=\"kv-cache\">KV Cache \u4f18\u5316</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nx\">\u7b56\u7565</span><span class=\"err\">\uff1a</span>\n\n<span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"nx\">\u591a\u67e5\u8be2\u6ce8\u610f\u529b</span><span class=\"err\">\uff08</span><span class=\"nx\">MQA</span><span class=\"err\">\uff09\uff1a</span><span class=\"nx\">\u5171\u4eab</span><span class=\"w\"> </span><span class=\"nx\">K</span><span class=\"err\">\u3001</span><span class=\"nx\">V</span><span class=\"w\"> </span><span class=\"nx\">\u6295\u5f71</span>\n<span class=\"mi\">2</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"nx\">\u5206\u7ec4\u67e5\u8be2\u6ce8\u610f\u529b</span><span class=\"err\">\uff08</span><span class=\"nx\">GQA</span><span class=\"err\">\uff09\uff1a</span><span class=\"nx\">K</span><span class=\"err\">\u3001</span><span class=\"nx\">V</span><span class=\"w\"> </span><span class=\"nx\">\u5934\u6570</span><span class=\"w\"> </span><span class=\"p\">&lt;</span><span class=\"w\"> </span><span class=\"nx\">Q</span><span class=\"w\"> </span><span class=\"nx\">\u5934\u6570</span>\n<span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"nx\">\u6ed1\u52a8\u7a97\u53e3</span><span class=\"err\">\uff1a</span><span class=\"nx\">\u9650\u5236\u6ce8\u610f\u529b\u8303\u56f4</span>\n\n<span class=\"nx\">\u5185\u5b58\u8ba1\u7b97</span><span class=\"err\">\uff1a</span>\n<span class=\"nx\">Cache_size</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"nx\">batch</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"nx\">seq_len</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"nx\">n_layers</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span>\n<span class=\"w\">             </span><span class=\"p\">(</span><span class=\"nx\">n_kv_heads</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"nx\">d_head</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"nx\">dtype_size</span>\n</code></pre></div>\n\n<h4 id=\"_4\">\u6279\u5904\u7406\u4f18\u5316</h4>\n<div class=\"codehilite\"><pre><span></span><code>\u52a8\u6001\u6279\u5904\u7406\uff1a\n\n<span class=\"k\">-</span> \u8fde\u7eed\u6279\u5904\u7406\uff08Continuous Batching\uff09\n<span class=\"k\">-</span> \u586b\u5145\u4f18\u5316\uff08Padding Optimization\uff09\n<span class=\"k\">-</span> \u5e8f\u5217\u5e76\u884c\uff08Sequence Parallelism\uff09\n\n\u541e\u5410\u91cf\u4f18\u5316\uff1a\nThroughput = batch_size / latency\n\u627e\u5230\u6700\u4f18 batch_size \u5e73\u8861\u5ef6\u8fdf\u548c\u541e\u5410\n</code></pre></div>\n\n<h2 id=\"92\">9.2 \u670d\u52a1\u5316\u67b6\u6784\u8bbe\u8ba1</h2>\n<h3 id=\"921\">9.2.1 \u5fae\u670d\u52a1\u67b6\u6784</h3>\n<div class=\"codehilite\"><pre><span></span><code>     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502   Gateway   \u2502\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n            \u2502\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502       \u2502       \u2502\n\u250c\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2510 \u250c\u25bc\u2500\u2500\u2500\u2500\u2510 \u250c\u25bc\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Router \u2502 \u2502Auth \u2502 \u2502Rate  \u2502\n\u2502       \u2502 \u2502     \u2502 \u2502Limit \u2502\n\u2514\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n    \u2502\n    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502          \u2502         \u2502          \u2502\n\u250c\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u25bc\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2510\n\u2502Model  \u2502 \u2502Model \u2502 \u2502Cache  \u2502 \u2502Monitor  \u2502\n\u2502Server \u2502 \u2502Pool  \u2502 \u2502Service\u2502 \u2502Service  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u7ec4\u4ef6\u8bbe\u8ba1</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>API Gateway</strong>\n   - \u8bf7\u6c42\u8def\u7531\u4e0e\u8d1f\u8f7d\u5747\u8861\n   - \u534f\u8bae\u8f6c\u6362\uff08HTTP/gRPC/WebSocket\uff09\n   - \u8ba4\u8bc1\u6388\u6743</p>\n</li>\n<li>\n<p><strong>Model Server</strong>\n   - \u6a21\u578b\u52a0\u8f7d\u4e0e\u7248\u672c\u7ba1\u7406\n   - \u6279\u5904\u7406\u961f\u5217\n   - \u8d44\u6e90\u9694\u79bb</p>\n</li>\n<li>\n<p><strong>Cache Layer</strong>\n   - \u7ed3\u679c\u7f13\u5b58\uff08Redis/Memcached\uff09\n   - \u5d4c\u5165\u5411\u91cf\u7f13\u5b58\n   - KV Cache \u5171\u4eab</p>\n</li>\n</ol>\n<h3 id=\"922\">9.2.2 \u6a21\u578b\u670d\u52a1\u6846\u67b6</h3>\n<h4 id=\"torchserve\">TorchServe \u67b6\u6784</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6a21\u578b\u5904\u7406\u5668\u793a\u4f8b</span>\n<span class=\"k\">class</span> <span class=\"nc\">LLMHandler</span><span class=\"p\">(</span><span class=\"n\">BaseHandler</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">load_model</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">model_dir</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tokenizer</span> <span class=\"o\">=</span> <span class=\"n\">load_tokenizer</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">preprocess</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u6279\u5904\u7406\u9884\u5904\u7406</span>\n        <span class=\"n\">texts</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;text&quot;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">req</span> <span class=\"ow\">in</span> <span class=\"n\">requests</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tokenizer</span><span class=\"p\">(</span><span class=\"n\">texts</span><span class=\"p\">,</span> <span class=\"n\">return_tensors</span><span class=\"o\">=</span><span class=\"s2\">&quot;pt&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">inference</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n            <span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">inputs</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">outputs</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">postprocess</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">outputs</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u89e3\u7801\u548c\u683c\u5f0f\u5316</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tokenizer</span><span class=\"o\">.</span><span class=\"n\">batch_decode</span><span class=\"p\">(</span><span class=\"n\">outputs</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h4 id=\"triton-inference-server\">Triton Inference Server</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nx\">\u6a21\u578b\u914d\u7f6e</span><span class=\"err\">\uff1a</span>\n<span class=\"nx\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;llm_model&quot;</span>\n<span class=\"nx\">platform</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;pytorch_libtorch&quot;</span>\n<span class=\"nx\">max_batch_size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"nx\">input</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">  </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nx\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;input_ids&quot;</span>\n<span class=\"w\">    </span><span class=\"nx\">data_type</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nx\">TYPE_INT64</span>\n<span class=\"w\">    </span><span class=\"nx\">dims</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">]</span>\n<span class=\"nx\">output</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">  </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nx\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;logits&quot;</span>\n<span class=\"w\">    </span><span class=\"nx\">data_type</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nx\">TYPE_FP32</span>\n<span class=\"w\">    </span><span class=\"nx\">dims</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">]</span>\n<span class=\"nx\">instance_group</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">  </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nx\">count</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"w\">    </span><span class=\"nx\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nx\">KIND_GPU</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">]</span>\n<span class=\"nx\">dynamic_batching</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"nx\">max_queue_delay_microseconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h3 id=\"923\">9.2.3 \u6d41\u5f0f\u751f\u6210\u67b6\u6784</h3>\n<p>\u5904\u7406 LLM \u9010 token \u751f\u6210\u7684\u7279\u6b8a\u9700\u6c42\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># SSE (Server-Sent Events) \u5b9e\u73b0</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">stream_generate</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">generate</span><span class=\"p\">():</span>\n        <span class=\"k\">for</span> <span class=\"n\">token</span> <span class=\"ow\">in</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate_stream</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">):</span>\n            <span class=\"k\">yield</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;data: </span><span class=\"si\">{</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">token</span><span class=\"p\">})</span><span class=\"si\">}</span><span class=\"se\">\\n\\n</span><span class=\"s2\">&quot;</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">StreamingResponse</span><span class=\"p\">(</span>\n        <span class=\"n\">generate</span><span class=\"p\">(),</span>\n        <span class=\"n\">media_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;text/event-stream&quot;</span>\n    <span class=\"p\">)</span>\n\n<span class=\"c1\"># WebSocket \u5b9e\u73b0</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">websocket_endpoint</span><span class=\"p\">(</span><span class=\"n\">websocket</span><span class=\"p\">:</span> <span class=\"n\">WebSocket</span><span class=\"p\">):</span>\n    <span class=\"k\">await</span> <span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">accept</span><span class=\"p\">()</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">receive_text</span><span class=\"p\">()</span>\n            <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">token</span> <span class=\"ow\">in</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate_stream</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n                <span class=\"k\">await</span> <span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">send_json</span><span class=\"p\">({</span><span class=\"s2\">&quot;token&quot;</span><span class=\"p\">:</span> <span class=\"n\">token</span><span class=\"p\">})</span>\n    <span class=\"k\">except</span> <span class=\"n\">WebSocketDisconnect</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n</code></pre></div>\n\n<p><strong>\u6d41\u5f0f\u5904\u7406\u4f18\u5316</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u73af\u5f62\u7f13\u51b2\u533a\u7ba1\u7406 token \u6d41</li>\n<li>\u5b9e\u73b0\u80cc\u538b\uff08Backpressure\uff09\u673a\u5236</li>\n<li>\u652f\u6301\u4e2d\u65ad\u548c\u6062\u590d</li>\n</ul>\n<h3 id=\"924\">9.2.4 \u9ad8\u53ef\u7528\u8bbe\u8ba1</h3>\n<h4 id=\"_5\">\u591a\u526f\u672c\u90e8\u7f72</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Kubernetes \u90e8\u7f72\u914d\u7f6e</span>\n<span class=\"nt\">apiVersion</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">apps/v1</span>\n<span class=\"nt\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Deployment</span>\n<span class=\"nt\">metadata</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm-service</span>\n<span class=\"nt\">spec</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">replicas</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">3</span>\n<span class=\"w\">  </span><span class=\"nt\">strategy</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">type</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">RollingUpdate</span>\n<span class=\"w\">    </span><span class=\"nt\">rollingUpdate</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">maxSurge</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">1</span>\n<span class=\"w\">      </span><span class=\"nt\">maxUnavailable</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">0</span>\n<span class=\"w\">  </span><span class=\"nt\">template</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">spec</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">containers</span><span class=\"p\">:</span>\n\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">model-server</span>\n<span class=\"w\">        </span><span class=\"nt\">resources</span><span class=\"p\">:</span>\n<span class=\"w\">          </span><span class=\"nt\">requests</span><span class=\"p\">:</span>\n<span class=\"w\">            </span><span class=\"nt\">nvidia.com/gpu</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">1</span>\n<span class=\"w\">          </span><span class=\"nt\">limits</span><span class=\"p\">:</span>\n<span class=\"w\">            </span><span class=\"nt\">nvidia.com/gpu</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">1</span>\n<span class=\"w\">        </span><span class=\"nt\">livenessProbe</span><span class=\"p\">:</span>\n<span class=\"w\">          </span><span class=\"nt\">httpGet</span><span class=\"p\">:</span>\n<span class=\"w\">            </span><span class=\"nt\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">/health</span>\n<span class=\"w\">          </span><span class=\"nt\">periodSeconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">30</span>\n<span class=\"w\">        </span><span class=\"nt\">readinessProbe</span><span class=\"p\">:</span>\n<span class=\"w\">          </span><span class=\"nt\">httpGet</span><span class=\"p\">:</span>\n<span class=\"w\">            </span><span class=\"nt\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">/ready</span>\n<span class=\"w\">          </span><span class=\"nt\">periodSeconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">10</span>\n</code></pre></div>\n\n<h4 id=\"_6\">\u6545\u969c\u8f6c\u79fb\u7b56\u7565</h4>\n<div class=\"codehilite\"><pre><span></span><code>\u4e3b\u5907\u6a21\u5f0f\uff1a\nPrimary \u2500\u2500\u2510\n          \u251c\u2500\u2500&gt; Load Balancer \u2500\u2500&gt; Client\nSecondary \u2518    (Health Check)\n\n\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\uff1a\n\n- \u8f6e\u8be2\uff08Round Robin\uff09\n- \u6700\u5c11\u8fde\u63a5\uff08Least Connections\uff09\n- \u4e00\u81f4\u6027\u54c8\u5e0c\uff08Consistent Hashing\uff09\n- \u57fa\u4e8e\u5ef6\u8fdf\u7684\u8def\u7531\n</code></pre></div>\n\n<h2 id=\"93\">9.3 \u5b9e\u65f6\u76d1\u63a7\u4e0e\u544a\u8b66\u7cfb\u7edf</h2>\n<h3 id=\"931\">9.3.1 \u6307\u6807\u4f53\u7cfb\u8bbe\u8ba1</h3>\n<h4 id=\"_7\">\u7cfb\u7edf\u6307\u6807</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Prometheus \u6307\u6807\u5b9a\u4e49</span>\n<span class=\"kn\">from</span> <span class=\"nn\">prometheus_client</span> <span class=\"kn\">import</span> <span class=\"n\">Counter</span><span class=\"p\">,</span> <span class=\"n\">Histogram</span><span class=\"p\">,</span> <span class=\"n\">Gauge</span>\n\n<span class=\"c1\"># \u8bf7\u6c42\u6307\u6807</span>\n<span class=\"n\">request_count</span> <span class=\"o\">=</span> <span class=\"n\">Counter</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;llm_requests_total&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;Total requests&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"s1\">&#39;model&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">request_latency</span> <span class=\"o\">=</span> <span class=\"n\">Histogram</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;llm_request_duration_seconds&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;Request latency&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"s1\">&#39;model&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;operation&#39;</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># \u8d44\u6e90\u6307\u6807</span>\n<span class=\"n\">gpu_utilization</span> <span class=\"o\">=</span> <span class=\"n\">Gauge</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;llm_gpu_utilization_percent&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;GPU utilization&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"s1\">&#39;device_id&#39;</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">memory_usage</span> <span class=\"o\">=</span> <span class=\"n\">Gauge</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;llm_memory_usage_bytes&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;Memory usage&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"s1\">&#39;type&#39;</span><span class=\"p\">]</span>  <span class=\"c1\"># gpu_memory, cpu_memory</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n\n<h4 id=\"_8\">\u4e1a\u52a1\u6307\u6807</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u8d28\u91cf\u6307\u6807</span>\n<span class=\"n\">output_quality_score</span> <span class=\"o\">=</span> <span class=\"n\">Histogram</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;llm_output_quality_score&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;Output quality score from feedback&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"s1\">&#39;task_type&#39;</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Token \u7edf\u8ba1</span>\n<span class=\"n\">token_usage</span> <span class=\"o\">=</span> <span class=\"n\">Counter</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;llm_tokens_total&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;Total tokens processed&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"s1\">&#39;type&#39;</span><span class=\"p\">]</span>  <span class=\"c1\"># input, output</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># \u6210\u672c\u6307\u6807</span>\n<span class=\"n\">api_cost</span> <span class=\"o\">=</span> <span class=\"n\">Counter</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;llm_api_cost_dollars&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;API cost in dollars&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"s1\">&#39;model&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;customer&#39;</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"932\">9.3.2 \u65e5\u5fd7\u805a\u5408\u4e0e\u5206\u6790</h3>\n<h4 id=\"_9\">\u7ed3\u6784\u5316\u65e5\u5fd7\u8bbe\u8ba1</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">structlog</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">structlog</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># \u8bf7\u6c42\u65e5\u5fd7</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;request_received&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">request_id</span><span class=\"o\">=</span><span class=\"n\">request_id</span><span class=\"p\">,</span>\n    <span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">user_id</span><span class=\"p\">,</span>\n    <span class=\"n\">model_version</span><span class=\"o\">=</span><span class=\"n\">model_version</span><span class=\"p\">,</span>\n    <span class=\"n\">input_tokens</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">),</span>\n    <span class=\"n\">timestamp</span><span class=\"o\">=</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># \u63a8\u7406\u65e5\u5fd7</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;inference_completed&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">request_id</span><span class=\"o\">=</span><span class=\"n\">request_id</span><span class=\"p\">,</span>\n    <span class=\"n\">latency_ms</span><span class=\"o\">=</span><span class=\"n\">latency</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>\n    <span class=\"n\">output_tokens</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">output_tokens</span><span class=\"p\">),</span>\n    <span class=\"n\">gpu_memory_mb</span><span class=\"o\">=</span><span class=\"n\">gpu_memory</span><span class=\"p\">,</span>\n    <span class=\"n\">cache_hit</span><span class=\"o\">=</span><span class=\"n\">cache_hit</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># \u9519\u8bef\u65e5\u5fd7</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;inference_failed&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">request_id</span><span class=\"o\">=</span><span class=\"n\">request_id</span><span class=\"p\">,</span>\n    <span class=\"n\">error_type</span><span class=\"o\">=</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n    <span class=\"n\">error_message</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">),</span>\n    <span class=\"n\">traceback</span><span class=\"o\">=</span><span class=\"n\">traceback</span><span class=\"o\">.</span><span class=\"n\">format_exc</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n\n<h4 id=\"elk-stack\">ELK Stack \u96c6\u6210</h4>\n<div class=\"codehilite\"><pre><span></span><code>\u65e5\u5fd7\u6d41\u6c34\u7ebf\uff1a\nApplication \u2500\u2500&gt; Filebeat \u2500\u2500&gt; Logstash \u2500\u2500&gt; Elasticsearch \u2500\u2500&gt; Kibana\n                              \u2502\n                              \u251c\u2500&gt; \u89e3\u6790\u548c\u589e\u5f3a\n                              \u251c\u2500&gt; \u8fc7\u6ee4\u548c\u8def\u7531\n                              \u2514\u2500&gt; \u544a\u8b66\u89e6\u53d1\n</code></pre></div>\n\n<h3 id=\"933\">9.3.3 \u5206\u5e03\u5f0f\u8ffd\u8e2a</h3>\n<p>\u4f7f\u7528 OpenTelemetry \u5b9e\u73b0\u5168\u94fe\u8def\u8ffd\u8e2a\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">opentelemetry</span> <span class=\"kn\">import</span> <span class=\"n\">trace</span>\n<span class=\"kn\">from</span> <span class=\"nn\">opentelemetry.instrumentation.fastapi</span> <span class=\"kn\">import</span> <span class=\"n\">FastAPIInstrumentor</span>\n\n<span class=\"n\">tracer</span> <span class=\"o\">=</span> <span class=\"n\">trace</span><span class=\"o\">.</span><span class=\"n\">get_tracer</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/generate&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">generate</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">GenerateRequest</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">tracer</span><span class=\"o\">.</span><span class=\"n\">start_as_current_span</span><span class=\"p\">(</span><span class=\"s2\">&quot;generate_request&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">span</span><span class=\"p\">:</span>\n        <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">set_attribute</span><span class=\"p\">(</span><span class=\"s2\">&quot;user_id&quot;</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user_id</span><span class=\"p\">)</span>\n        <span class=\"n\">span</span><span class=\"o\">.</span><span class=\"n\">set_attribute</span><span class=\"p\">(</span><span class=\"s2\">&quot;model&quot;</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">tracer</span><span class=\"o\">.</span><span class=\"n\">start_as_current_span</span><span class=\"p\">(</span><span class=\"s2\">&quot;tokenize&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"n\">tokenizer</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">tracer</span><span class=\"o\">.</span><span class=\"n\">start_as_current_span</span><span class=\"p\">(</span><span class=\"s2\">&quot;inference&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">tracer</span><span class=\"o\">.</span><span class=\"n\">start_as_current_span</span><span class=\"p\">(</span><span class=\"s2\">&quot;decode&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">tokenizer</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">result</span>\n</code></pre></div>\n\n<h3 id=\"934\">9.3.4 \u544a\u8b66\u7b56\u7565</h3>\n<h4 id=\"_10\">\u5206\u7ea7\u544a\u8b66</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># AlertManager \u914d\u7f6e</span>\n<span class=\"nt\">route</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">group_by</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;alertname&#39;</span><span class=\"p p-Indicator\">,</span><span class=\"w\"> </span><span class=\"s\">&#39;cluster&#39;</span><span class=\"p p-Indicator\">]</span>\n<span class=\"w\">  </span><span class=\"nt\">group_wait</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">10s</span>\n<span class=\"w\">  </span><span class=\"nt\">group_interval</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">10s</span>\n<span class=\"w\">  </span><span class=\"nt\">repeat_interval</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">1h</span>\n<span class=\"w\">  </span><span class=\"nt\">receiver</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;web.hook&#39;</span>\n<span class=\"w\">  </span><span class=\"nt\">routes</span><span class=\"p\">:</span>\n\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">match</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">severity</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">critical</span>\n<span class=\"w\">    </span><span class=\"nt\">receiver</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">pagerduty</span>\n<span class=\"w\">    </span><span class=\"nt\">continue</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">match</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">severity</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">warning</span>\n<span class=\"w\">    </span><span class=\"nt\">receiver</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">slack</span>\n\n<span class=\"c1\"># Prometheus \u544a\u8b66\u89c4\u5219</span>\n<span class=\"nt\">groups</span><span class=\"p\">:</span>\n\n<span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm_alerts</span>\n<span class=\"w\">  </span><span class=\"nt\">rules</span><span class=\"p\">:</span>\n\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">alert</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">HighLatency</span>\n<span class=\"w\">    </span><span class=\"nt\">expr</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">histogram_quantile(0.99, llm_request_duration_seconds) &gt; 5</span>\n<span class=\"w\">    </span><span class=\"nt\">for</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">5m</span>\n<span class=\"w\">    </span><span class=\"nt\">labels</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">severity</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">warning</span>\n<span class=\"w\">    </span><span class=\"nt\">annotations</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">summary</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;P99</span><span class=\"nv\"> </span><span class=\"s\">\u5ef6\u8fdf\u8d85\u8fc7</span><span class=\"nv\"> </span><span class=\"s\">5</span><span class=\"nv\"> </span><span class=\"s\">\u79d2&quot;</span>\n\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">alert</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">GPUMemoryLeak</span>\n<span class=\"w\">    </span><span class=\"nt\">expr</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">rate(llm_gpu_memory_bytes[5m]) &gt; 100000000</span>\n<span class=\"w\">    </span><span class=\"nt\">for</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">10m</span>\n<span class=\"w\">    </span><span class=\"nt\">labels</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">severity</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">critical</span>\n<span class=\"w\">    </span><span class=\"nt\">annotations</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">summary</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;GPU</span><span class=\"nv\"> </span><span class=\"s\">\u5185\u5b58\u6301\u7eed\u589e\u957f&quot;</span>\n</code></pre></div>\n\n<h4 id=\"_11\">\u667a\u80fd\u544a\u8b66\u964d\u566a</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">AlertThrottler</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">window_seconds</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">max_alerts</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window</span> <span class=\"o\">=</span> <span class=\"n\">window_seconds</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_alerts</span> <span class=\"o\">=</span> <span class=\"n\">max_alerts</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alert_times</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"n\">deque</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">should_alert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">alert_key</span><span class=\"p\">):</span>\n        <span class=\"n\">now</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"n\">times</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alert_times</span><span class=\"p\">[</span><span class=\"n\">alert_key</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u6e05\u7406\u8fc7\u671f\u65f6\u95f4</span>\n        <span class=\"k\">while</span> <span class=\"n\">times</span> <span class=\"ow\">and</span> <span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">now</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"p\">:</span>\n            <span class=\"n\">times</span><span class=\"o\">.</span><span class=\"n\">popleft</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u68c0\u67e5\u662f\u5426\u8d85\u8fc7\u9608\u503c</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">times</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_alerts</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"n\">times</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n<span class=\"c1\">## 9.4 \u6a21\u578b\u6f02\u79fb\u68c0\u6d4b</span>\n\n<span class=\"n\">\u6a21\u578b\u6f02\u79fb\u662f\u6307\u6a21\u578b\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u6027\u80fd\u968f\u65f6\u95f4\u4e0b\u964d\u7684\u73b0\u8c61</span><span class=\"err\">\uff0c</span><span class=\"n\">\u53ef\u80fd\u7531\u6570\u636e\u5206\u5e03\u53d8\u5316</span><span class=\"err\">\u3001</span><span class=\"n\">\u7528\u6237\u884c\u4e3a\u6f14\u53d8\u6216\u5916\u90e8\u73af\u5883\u6539\u53d8\u5f15\u8d77</span><span class=\"err\">\u3002</span>\n\n<span class=\"c1\">### 9.4.1 \u6f02\u79fb\u7c7b\u578b\u4e0e\u68c0\u6d4b\u65b9\u6cd5</span>\n\n<span class=\"c1\">#### \u6570\u636e\u6f02\u79fb\uff08Data Drift\uff09</span>\n<span class=\"n\">\u8f93\u5165\u6570\u636e\u5206\u5e03\u7684\u53d8\u5316</span><span class=\"err\">\uff1a</span>\n\n<span class=\"err\">```</span><span class=\"n\">python</span>\n<span class=\"c1\"># KL \u6563\u5ea6\u68c0\u6d4b</span>\n<span class=\"k\">def</span> <span class=\"nf\">kl_divergence</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">epsilon</span><span class=\"o\">=</span><span class=\"mf\">1e-10</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u8ba1\u7b97\u4e24\u4e2a\u5206\u5e03\u7684 KL \u6563\u5ea6&quot;&quot;&quot;</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">p</span> <span class=\"o\">+</span> <span class=\"n\">epsilon</span>\n    <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">q</span> <span class=\"o\">+</span> <span class=\"n\">epsilon</span>\n    <span class=\"k\">return</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">/</span> <span class=\"n\">q</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Kolmogorov-Smirnov \u68c0\u9a8c</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scipy.stats</span> <span class=\"kn\">import</span> <span class=\"n\">ks_2samp</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">ks_test_drift</span><span class=\"p\">(</span><span class=\"n\">reference_data</span><span class=\"p\">,</span> <span class=\"n\">current_data</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u4f7f\u7528 KS \u68c0\u9a8c\u68c0\u6d4b\u5206\u5e03\u53d8\u5316&quot;&quot;&quot;</span>\n    <span class=\"n\">statistic</span><span class=\"p\">,</span> <span class=\"n\">p_value</span> <span class=\"o\">=</span> <span class=\"n\">ks_2samp</span><span class=\"p\">(</span><span class=\"n\">reference_data</span><span class=\"p\">,</span> <span class=\"n\">current_data</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">p_value</span> <span class=\"o\">&lt;</span> <span class=\"n\">threshold</span><span class=\"p\">,</span> <span class=\"n\">statistic</span>\n\n<span class=\"c1\"># \u7279\u5f81\u5206\u5e03\u76d1\u63a7</span>\n<span class=\"k\">class</span> <span class=\"nc\">FeatureDriftMonitor</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">reference_window</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reference_window</span> <span class=\"o\">=</span> <span class=\"n\">reference_window</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">feature_buffers</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"n\">deque</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reference_stats</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">features</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">buffer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">feature_buffers</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span>\n            <span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reference_window</span><span class=\"p\">:</span>\n                <span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">popleft</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">detect_drift</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sensitivity</span><span class=\"o\">=</span><span class=\"mf\">2.0</span><span class=\"p\">):</span>\n        <span class=\"n\">drifts</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">buffer</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">feature_buffers</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n\n            <span class=\"n\">current_mean</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span>\n            <span class=\"n\">current_std</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reference_stats</span><span class=\"p\">:</span>\n                <span class=\"n\">ref_mean</span><span class=\"p\">,</span> <span class=\"n\">ref_std</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reference_stats</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span>\n                <span class=\"n\">z_score</span> <span class=\"o\">=</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">current_mean</span> <span class=\"o\">-</span> <span class=\"n\">ref_mean</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">ref_std</span> <span class=\"o\">+</span> <span class=\"mf\">1e-10</span><span class=\"p\">)</span>\n                <span class=\"n\">drifts</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">z_score</span> <span class=\"o\">&gt;</span> <span class=\"n\">sensitivity</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reference_stats</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">current_mean</span><span class=\"p\">,</span> <span class=\"n\">current_std</span><span class=\"p\">)</span>\n                <span class=\"n\">drifts</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">drifts</span>\n</code></pre></div>\n\n<h4 id=\"concept-drift\">\u6982\u5ff5\u6f02\u79fb\uff08Concept Drift\uff09</h4>\n<p>\u8f93\u5165-\u8f93\u51fa\u5173\u7cfb\u7684\u53d8\u5316\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6ed1\u52a8\u7a97\u53e3\u6027\u80fd\u76d1\u63a7</span>\n<span class=\"k\">class</span> <span class=\"nc\">ConceptDriftDetector</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window_size</span> <span class=\"o\">=</span> <span class=\"n\">window_size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">threshold</span> <span class=\"o\">=</span> <span class=\"n\">threshold</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">performance_window</span> <span class=\"o\">=</span> <span class=\"n\">deque</span><span class=\"p\">(</span><span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"n\">window_size</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">baseline_performance</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prediction</span><span class=\"p\">,</span> <span class=\"n\">ground_truth</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u66f4\u65b0\u6027\u80fd\u6307\u6807&quot;&quot;&quot;</span>\n        <span class=\"n\">correct</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">prediction</span> <span class=\"o\">==</span> <span class=\"n\">ground_truth</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">performance_window</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">correct</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">performance_window</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window_size</span><span class=\"p\">:</span>\n            <span class=\"n\">current_accuracy</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">performance_window</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">baseline_performance</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">baseline_performance</span> <span class=\"o\">=</span> <span class=\"n\">current_accuracy</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n            <span class=\"n\">drift</span> <span class=\"o\">=</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">current_accuracy</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">baseline_performance</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">drift</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">threshold</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n<span class=\"c1\"># ADWIN (Adaptive Windowing) \u7b97\u6cd5</span>\n<span class=\"k\">class</span> <span class=\"nc\">ADWIN</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">delta</span><span class=\"o\">=</span><span class=\"mf\">0.002</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"n\">delta</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">variance</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u6d4b\u6982\u5ff5\u6f02\u79fb&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">total</span> <span class=\"o\">+=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">mean</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">total</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">variance</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"o\">-</span> <span class=\"n\">mean</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n\n            <span class=\"c1\"># \u68c0\u6d4b\u4e24\u4e2a\u5b50\u7a97\u53e3\u7684\u663e\u8457\u5dee\u5f02</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_detect_change</span><span class=\"p\">():</span>\n                <span class=\"c1\"># \u4e22\u5f03\u65e7\u6570\u636e</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_shrink_window</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_detect_change</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4f7f\u7528 Hoeffding \u754c\u68c0\u6d4b\u53d8\u5316&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">&lt;</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">split_point</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">):</span>\n            <span class=\"n\">n0</span> <span class=\"o\">=</span> <span class=\"n\">split_point</span>\n            <span class=\"n\">n1</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">-</span> <span class=\"n\">split_point</span>\n\n            <span class=\"n\">sum0</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"p\">[:</span><span class=\"n\">split_point</span><span class=\"p\">])</span>\n            <span class=\"n\">sum1</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"p\">[</span><span class=\"n\">split_point</span><span class=\"p\">:])</span>\n\n            <span class=\"n\">mean0</span> <span class=\"o\">=</span> <span class=\"n\">sum0</span> <span class=\"o\">/</span> <span class=\"n\">n0</span>\n            <span class=\"n\">mean1</span> <span class=\"o\">=</span> <span class=\"n\">sum1</span> <span class=\"o\">/</span> <span class=\"n\">n1</span>\n\n            <span class=\"n\">epsilon</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span>\n                <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">n0</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">n1</span><span class=\"p\">))</span> <span class=\"o\">*</span> \n                <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">delta</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">mean0</span> <span class=\"o\">-</span> <span class=\"n\">mean1</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">epsilon</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n</code></pre></div>\n\n<h3 id=\"942\">9.4.2 \u9884\u6d4b\u8d28\u91cf\u76d1\u63a7</h3>\n<h4 id=\"_12\">\u7f6e\u4fe1\u5ea6\u5206\u6790</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ConfidenceMonitor</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">calibration_bins</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">calibration_bins</span> <span class=\"o\">=</span> <span class=\"n\">calibration_bins</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">confidence_scores</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">accuracies</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">probabilities</span><span class=\"p\">,</span> <span class=\"n\">predictions</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u66f4\u65b0\u7f6e\u4fe1\u5ea6\u7edf\u8ba1&quot;&quot;&quot;</span>\n        <span class=\"n\">max_probs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">probabilities</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">correct</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">predictions</span> <span class=\"o\">==</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">confidence_scores</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">max_probs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">accuracies</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">correct</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">compute_ece</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8ba1\u7b97\u671f\u671b\u6821\u51c6\u8bef\u5dee (ECE)&quot;&quot;&quot;</span>\n        <span class=\"n\">bin_boundaries</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">calibration_bins</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">bin_lowers</span> <span class=\"o\">=</span> <span class=\"n\">bin_boundaries</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">bin_uppers</span> <span class=\"o\">=</span> <span class=\"n\">bin_boundaries</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n\n        <span class=\"n\">ece</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">bin_lower</span><span class=\"p\">,</span> <span class=\"n\">bin_upper</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">bin_lowers</span><span class=\"p\">,</span> <span class=\"n\">bin_uppers</span><span class=\"p\">):</span>\n            <span class=\"n\">in_bin</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">conf</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">confidence_scores</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">bin_lower</span> <span class=\"o\">&lt;=</span> <span class=\"n\">conf</span> <span class=\"o\">&lt;</span> <span class=\"n\">bin_upper</span>\n            <span class=\"p\">]</span>\n\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">in_bin</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"n\">bin_acc</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">accuracies</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">in_bin</span><span class=\"p\">])</span>\n                <span class=\"n\">bin_conf</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">confidence_scores</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">in_bin</span><span class=\"p\">])</span>\n                <span class=\"n\">ece</span> <span class=\"o\">+=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">in_bin</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">bin_acc</span> <span class=\"o\">-</span> <span class=\"n\">bin_conf</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">ece</span> <span class=\"o\">/</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">confidence_scores</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h4 id=\"_13\">\u8f93\u51fa\u5206\u5e03\u76d1\u63a7</h4>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6587\u672c\u751f\u6210\u8d28\u91cf\u6307\u6807</span>\n<span class=\"k\">class</span> <span class=\"nc\">TextGenerationMonitor</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics_history</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">compute_metrics</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">generated_text</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8ba1\u7b97\u6587\u672c\u8d28\u91cf\u6307\u6807&quot;&quot;&quot;</span>\n        <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"c1\"># \u591a\u6837\u6027\u6307\u6807</span>\n        <span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"n\">generated_text</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n        <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;unique_tokens&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u91cd\u590d\u5ea6</span>\n        <span class=\"n\">bigrams</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">tokens</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n        <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;unique_bigrams&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">bigrams</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u957f\u5ea6\u5206\u5e03</span>\n        <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;avg_sentence_length&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">([</span>\n            <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sent</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">())</span> \n            <span class=\"k\">for</span> <span class=\"n\">sent</span> <span class=\"ow\">in</span> <span class=\"n\">generated_text</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u56f0\u60d1\u5ea6\u4ee3\u7406\u6307\u6807</span>\n        <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;entropy&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_entropy</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">metrics</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">detect_quality_degradation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u6d4b\u751f\u6210\u8d28\u91cf\u4e0b\u964d&quot;&quot;&quot;</span>\n        <span class=\"n\">alerts</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">metric_name</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">history</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics_history</span><span class=\"p\">[</span><span class=\"n\">metric_name</span><span class=\"p\">]</span>\n            <span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">history</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">window</span><span class=\"p\">:</span>\n                <span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n                <span class=\"c1\"># \u8ba1\u7b97\u79fb\u52a8\u5e73\u5747\u548c\u6807\u51c6\u5dee</span>\n                <span class=\"n\">mean</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">history</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n                <span class=\"n\">std</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">(</span><span class=\"n\">history</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n                <span class=\"n\">recent_mean</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">history</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">:])</span>\n\n                <span class=\"c1\"># Z-score \u68c0\u9a8c</span>\n                <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">recent_mean</span> <span class=\"o\">-</span> <span class=\"n\">mean</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">std</span><span class=\"p\">:</span>\n                    <span class=\"n\">alerts</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                        <span class=\"s1\">&#39;metric&#39;</span><span class=\"p\">:</span> <span class=\"n\">metric_name</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;baseline&#39;</span><span class=\"p\">:</span> <span class=\"n\">mean</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;current&#39;</span><span class=\"p\">:</span> <span class=\"n\">recent_mean</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;severity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;high&#39;</span> <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">recent_mean</span> <span class=\"o\">-</span> <span class=\"n\">mean</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3</span> <span class=\"o\">*</span> <span class=\"n\">std</span> <span class=\"k\">else</span> <span class=\"s1\">&#39;medium&#39;</span>\n                    <span class=\"p\">})</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">alerts</span>\n</code></pre></div>\n\n<h3 id=\"943\">9.4.3 \u81ea\u52a8\u5316\u54cd\u5e94\u7b56\u7565</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">DriftResponseOrchestrator</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">drift_detectors</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">response_strategies</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alert_manager</span> <span class=\"o\">=</span> <span class=\"n\">AlertManager</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">register_detector</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">detector</span><span class=\"p\">,</span> <span class=\"n\">strategy</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6ce8\u518c\u6f02\u79fb\u68c0\u6d4b\u5668\u548c\u54cd\u5e94\u7b56\u7565&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">drift_detectors</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">detector</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">response_strategies</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">strategy</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">monitor_and_respond</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u76d1\u63a7\u5e76\u81ea\u52a8\u54cd\u5e94&quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">detector</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">drift_detectors</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">detector</span><span class=\"o\">.</span><span class=\"n\">detect</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_handle_drift</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_handle_drift</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">detector_name</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5904\u7406\u68c0\u6d4b\u5230\u7684\u6f02\u79fb&quot;&quot;&quot;</span>\n        <span class=\"n\">strategy</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">response_strategies</span><span class=\"p\">[</span><span class=\"n\">detector_name</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">strategy</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;alert&#39;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alert_manager</span><span class=\"o\">.</span><span class=\"n\">send_alert</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Drift detected by </span><span class=\"si\">{</span><span class=\"n\">detector_name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">severity</span><span class=\"o\">=</span><span class=\"s1\">&#39;warning&#39;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">elif</span> <span class=\"n\">strategy</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;retrain&#39;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_trigger_retraining</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n        <span class=\"k\">elif</span> <span class=\"n\">strategy</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;fallback&#39;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_switch_to_fallback_model</span><span class=\"p\">()</span>\n\n        <span class=\"k\">elif</span> <span class=\"n\">strategy</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;recalibrate&#39;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_recalibrate_model</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_trigger_retraining</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u89e6\u53d1\u6a21\u578b\u91cd\u8bad\u7ec3&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u6536\u96c6\u65b0\u6570\u636e</span>\n        <span class=\"c1\"># \u542f\u52a8\u8bad\u7ec3\u4efb\u52a1</span>\n        <span class=\"c1\"># \u9a8c\u8bc1\u65b0\u6a21\u578b</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_recalibrate_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u91cd\u65b0\u6821\u51c6\u6a21\u578b\u8f93\u51fa&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u4f7f\u7528\u6e29\u5ea6\u7f29\u653e</span>\n        <span class=\"c1\"># \u66f4\u65b0\u540e\u5904\u7406\u53c2\u6570</span>\n        <span class=\"k\">pass</span>\n</code></pre></div>\n\n<h2 id=\"95\">9.5 \u56de\u6eda\u4e0e\u7070\u5ea6\u53d1\u5e03\u7b56\u7565</h2>\n<h3 id=\"951\">9.5.1 \u84dd\u7eff\u90e8\u7f72</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Kubernetes \u84dd\u7eff\u90e8\u7f72\u914d\u7f6e</span>\n<span class=\"nt\">apiVersion</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">v1</span>\n<span class=\"nt\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Service</span>\n<span class=\"nt\">metadata</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm-service</span>\n<span class=\"nt\">spec</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">selector</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">app</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm</span>\n<span class=\"w\">    </span><span class=\"nt\">version</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">green</span><span class=\"w\">  </span><span class=\"c1\"># \u5207\u6362\u5230 blue \u6216 green</span>\n<span class=\"w\">  </span><span class=\"nt\">ports</span><span class=\"p\">:</span>\n\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">port</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">80</span>\n<span class=\"w\">    </span><span class=\"nt\">targetPort</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">8080</span>\n\n<span class=\"nn\">---</span>\n<span class=\"c1\"># Blue \u90e8\u7f72</span>\n<span class=\"nt\">apiVersion</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">apps/v1</span>\n<span class=\"nt\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Deployment</span>\n<span class=\"nt\">metadata</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm-blue</span>\n<span class=\"nt\">spec</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">replicas</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">3</span>\n<span class=\"w\">  </span><span class=\"nt\">selector</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">matchLabels</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">app</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm</span>\n<span class=\"w\">      </span><span class=\"nt\">version</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">blue</span>\n<span class=\"w\">  </span><span class=\"nt\">template</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">metadata</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">labels</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"nt\">app</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm</span>\n<span class=\"w\">        </span><span class=\"nt\">version</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">blue</span>\n<span class=\"w\">    </span><span class=\"nt\">spec</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">containers</span><span class=\"p\">:</span>\n\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">model-server</span>\n<span class=\"w\">        </span><span class=\"nt\">image</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm:v1.0</span>\n\n<span class=\"nn\">---</span>\n<span class=\"c1\"># Green \u90e8\u7f72</span>\n<span class=\"nt\">apiVersion</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">apps/v1</span>\n<span class=\"nt\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Deployment</span>\n<span class=\"nt\">metadata</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm-green</span>\n<span class=\"nt\">spec</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">replicas</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">3</span>\n<span class=\"w\">  </span><span class=\"nt\">selector</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">matchLabels</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">app</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm</span>\n<span class=\"w\">      </span><span class=\"nt\">version</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">green</span>\n<span class=\"w\">  </span><span class=\"nt\">template</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">metadata</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">labels</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"nt\">app</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm</span>\n<span class=\"w\">        </span><span class=\"nt\">version</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">green</span>\n<span class=\"w\">    </span><span class=\"nt\">spec</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">containers</span><span class=\"p\">:</span>\n\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">model-server</span>\n<span class=\"w\">        </span><span class=\"nt\">image</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llm:v2.0</span>\n</code></pre></div>\n\n<h3 id=\"952\">9.5.2 \u91d1\u4e1d\u96c0\u53d1\u5e03</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CanaryDeployment</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">initial_traffic_percent</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">canary_percent</span> <span class=\"o\">=</span> <span class=\"n\">initial_traffic_percent</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics_collector</span> <span class=\"o\">=</span> <span class=\"n\">MetricsCollector</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decision_threshold</span> <span class=\"o\">=</span> <span class=\"mf\">0.95</span>  <span class=\"c1\"># \u6210\u529f\u7387\u9608\u503c</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">route_request</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8def\u7531\u8bf7\u6c42\u5230\u91d1\u4e1d\u96c0\u6216\u7a33\u5b9a\u7248\u672c&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">canary_percent</span> <span class=\"o\">/</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">canary_model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics_collector</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"s1\">&#39;canary&#39;</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">response</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stable_model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics_collector</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"s1\">&#39;stable&#39;</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">response</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">progressive_rollout</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6e10\u8fdb\u5f0f\u53d1\u5e03&quot;&quot;&quot;</span>\n        <span class=\"n\">stages</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">]</span>  <span class=\"c1\"># \u6d41\u91cf\u767e\u5206\u6bd4\u9636\u6bb5</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">target_percent</span> <span class=\"ow\">in</span> <span class=\"n\">stages</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">canary_percent</span> <span class=\"o\">=</span> <span class=\"n\">target_percent</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">)</span>  <span class=\"c1\"># \u6bcf\u9636\u6bb5\u89c2\u5bdf 5 \u5206\u949f</span>\n\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_health</span><span class=\"p\">():</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_rollback</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_check_health</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u67e5\u91d1\u4e1d\u96c0\u7248\u672c\u5065\u5eb7\u72b6\u6001&quot;&quot;&quot;</span>\n        <span class=\"n\">canary_metrics</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics_collector</span><span class=\"o\">.</span><span class=\"n\">get_metrics</span><span class=\"p\">(</span><span class=\"s1\">&#39;canary&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">stable_metrics</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics_collector</span><span class=\"o\">.</span><span class=\"n\">get_metrics</span><span class=\"p\">(</span><span class=\"s1\">&#39;stable&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6bd4\u8f83\u5173\u952e\u6307\u6807</span>\n        <span class=\"n\">canary_success_rate</span> <span class=\"o\">=</span> <span class=\"n\">canary_metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;success_rate&#39;</span><span class=\"p\">]</span>\n        <span class=\"n\">stable_success_rate</span> <span class=\"o\">=</span> <span class=\"n\">stable_metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;success_rate&#39;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">canary_success_rate</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decision_threshold</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"c1\"># \u7edf\u8ba1\u663e\u8457\u6027\u68c0\u9a8c</span>\n        <span class=\"n\">p_value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_statistical_test</span><span class=\"p\">(</span>\n            <span class=\"n\">canary_metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;latencies&#39;</span><span class=\"p\">],</span>\n            <span class=\"n\">stable_metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;latencies&#39;</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">p_value</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.05</span>  <span class=\"c1\"># \u65e0\u663e\u8457\u5dee\u5f02</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_rollback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u56de\u6eda\u5230\u7a33\u5b9a\u7248\u672c&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">canary_percent</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Canary rollback triggered&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"953-feature-flags\">9.5.3 \u7279\u5f81\u5f00\u5173\uff08Feature Flags\uff09</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">FeatureFlags</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">config_source</span><span class=\"o\">=</span><span class=\"s1\">&#39;redis&#39;</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">flags</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config_source</span> <span class=\"o\">=</span> <span class=\"n\">config_source</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_flags</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_load_flags</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4ece\u914d\u7f6e\u6e90\u52a0\u8f7d\u7279\u5f81\u5f00\u5173&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config_source</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;redis&#39;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">flags</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;new_tokenizer&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;enabled&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rollout&#39;</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">},</span>\n                <span class=\"s1\">&#39;attention_optimization&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;enabled&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rollout&#39;</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">},</span>\n                <span class=\"s1\">&#39;experimental_sampler&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;enabled&#39;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rollout&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">is_enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">flag_name</span><span class=\"p\">,</span> <span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u67e5\u7279\u5f81\u662f\u5426\u542f\u7528&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">flag_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">flags</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"n\">flag</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">flags</span><span class=\"p\">[</span><span class=\"n\">flag_name</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">flag</span><span class=\"p\">[</span><span class=\"s1\">&#39;enabled&#39;</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">user_id</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u57fa\u4e8e\u7528\u6237 ID \u7684\u4e00\u81f4\u6027\u54c8\u5e0c</span>\n            <span class=\"n\">hash_value</span> <span class=\"o\">=</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">flag_name</span><span class=\"si\">}</span><span class=\"s2\">:</span><span class=\"si\">{</span><span class=\"n\">user_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">100</span>\n            <span class=\"k\">return</span> <span class=\"n\">hash_value</span> <span class=\"o\">&lt;</span> <span class=\"n\">flag</span><span class=\"p\">[</span><span class=\"s1\">&#39;rollout&#39;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">flag</span><span class=\"p\">[</span><span class=\"s1\">&#39;rollout&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">100</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">with_feature</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">flag_name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u88c5\u9970\u5668\u6a21\u5f0f&quot;&quot;&quot;</span>\n        <span class=\"k\">def</span> <span class=\"nf\">decorator</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n            <span class=\"k\">def</span> <span class=\"nf\">wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_enabled</span><span class=\"p\">(</span><span class=\"n\">flag_name</span><span class=\"p\">):</span>\n                    <span class=\"k\">return</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"c1\"># \u8fd4\u56de\u9ed8\u8ba4\u884c\u4e3a</span>\n                    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_behavior</span><span class=\"p\">(</span><span class=\"n\">flag_name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">wrapper</span>\n        <span class=\"k\">return</span> <span class=\"n\">decorator</span>\n</code></pre></div>\n\n<h3 id=\"954\">9.5.4 \u56de\u6eda\u7b56\u7565\u5b9e\u73b0</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">RollbackManager</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deployment_history</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">health_checker</span> <span class=\"o\">=</span> <span class=\"n\">HealthChecker</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_rollback_window</span> <span class=\"o\">=</span> <span class=\"mi\">3600</span>  <span class=\"c1\"># 1 \u5c0f\u65f6</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deploy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u90e8\u7f72\u65b0\u7248\u672c&quot;&quot;&quot;</span>\n        <span class=\"n\">deployment</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;version&#39;</span><span class=\"p\">:</span> <span class=\"n\">version</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"n\">config</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;timestamp&#39;</span><span class=\"p\">:</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(),</span>\n            <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;deploying&#39;</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deployment_history</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">deployment</span><span class=\"p\">)</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6267\u884c\u90e8\u7f72</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_execute_deployment</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u5065\u5eb7\u68c0\u67e5</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_post_deployment_check</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">):</span>\n                <span class=\"n\">deployment</span><span class=\"p\">[</span><span class=\"s1\">&#39;status&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;healthy&#39;</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">deployment</span><span class=\"p\">[</span><span class=\"s1\">&#39;status&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;unhealthy&#39;</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">automatic_rollback</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">deployment</span><span class=\"p\">[</span><span class=\"s1\">&#39;status&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;failed&#39;</span>\n            <span class=\"n\">deployment</span><span class=\"p\">[</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">automatic_rollback</span><span class=\"p\">()</span>\n            <span class=\"k\">raise</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">automatic_rollback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u81ea\u52a8\u56de\u6eda\u5230\u4e0a\u4e00\u4e2a\u5065\u5eb7\u7248\u672c&quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">deployment</span> <span class=\"ow\">in</span> <span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deployment_history</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]):</span>\n            <span class=\"k\">if</span> <span class=\"n\">deployment</span><span class=\"p\">[</span><span class=\"s1\">&#39;status&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;healthy&#39;</span><span class=\"p\">:</span>\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Rolling back to version </span><span class=\"si\">{</span><span class=\"n\">deployment</span><span class=\"p\">[</span><span class=\"s1\">&#39;version&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_execute_deployment</span><span class=\"p\">(</span>\n                    <span class=\"n\">deployment</span><span class=\"p\">[</span><span class=\"s1\">&#39;version&#39;</span><span class=\"p\">],</span>\n                    <span class=\"n\">deployment</span><span class=\"p\">[</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;No healthy version found for rollback&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_post_deployment_check</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u90e8\u7f72\u540e\u5065\u5eb7\u68c0\u67e5&quot;&quot;&quot;</span>\n        <span class=\"n\">checks</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">health_checker</span><span class=\"o\">.</span><span class=\"n\">check_endpoint_health</span><span class=\"p\">(),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">health_checker</span><span class=\"o\">.</span><span class=\"n\">check_model_loading</span><span class=\"p\">(),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">health_checker</span><span class=\"o\">.</span><span class=\"n\">check_inference_latency</span><span class=\"p\">(),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">health_checker</span><span class=\"o\">.</span><span class=\"n\">check_error_rate</span><span class=\"p\">()</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"n\">checks</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_execute_deployment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6267\u884c\u5b9e\u9645\u90e8\u7f72\u64cd\u4f5c&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u66f4\u65b0\u6a21\u578b\u6587\u4ef6</span>\n        <span class=\"c1\"># \u91cd\u542f\u670d\u52a1</span>\n        <span class=\"c1\"># \u66f4\u65b0\u8def\u7531\u914d\u7f6e</span>\n        <span class=\"k\">pass</span>\n</code></pre></div>\n\n<h2 id=\"_14\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u7cfb\u7edf\u4ecb\u7ecd\u4e86 LLM \u751f\u4ea7\u90e8\u7f72\u4e0e\u76d1\u63a7\u7684\u6838\u5fc3\u6280\u672f\uff1a</p>\n<h3 id=\"_15\">\ud83d\udccc \u6838\u5fc3\u6982\u5ff5</h3>\n<ol>\n<li>\n<p><strong>\u6a21\u578b\u4f18\u5316\u4e09\u5927\u6280\u672f</strong>\uff1a\n   - \u91cf\u5316\uff1aPTQ vs QAT\uff0c\u6743\u8861\u7cbe\u5ea6\u4e0e\u6548\u7387\n   - \u84b8\u998f\uff1a\u77e5\u8bc6\u4f20\u9012\uff0c\u5927\u6a21\u578b\u80fd\u529b\u8fc1\u79fb\u5230\u5c0f\u6a21\u578b\n   - \u526a\u679d\uff1a\u7ed3\u6784\u5316 vs \u975e\u7ed3\u6784\u5316\uff0c\u79fb\u9664\u5197\u4f59\u53c2\u6570</p>\n</li>\n<li>\n<p><strong>\u670d\u52a1\u67b6\u6784\u8bbe\u8ba1</strong>\uff1a\n   - \u5fae\u670d\u52a1\u67b6\u6784\uff1a\u6a21\u5757\u5316\u3001\u53ef\u6269\u5c55\u3001\u9ad8\u53ef\u7528\n   - \u6d41\u5f0f\u751f\u6210\uff1aSSE/WebSocket \u5b9e\u73b0\u9010 token \u8f93\u51fa\n   - \u6279\u5904\u7406\u4f18\u5316\uff1a\u52a8\u6001\u6279\u5904\u7406\u63d0\u9ad8\u541e\u5410\u91cf</p>\n</li>\n<li>\n<p><strong>\u76d1\u63a7\u4f53\u7cfb</strong>\uff1a\n   - \u7cfb\u7edf\u6307\u6807\uff1a\u5ef6\u8fdf\u3001\u541e\u5410\u3001\u8d44\u6e90\u5229\u7528\u7387\n   - \u4e1a\u52a1\u6307\u6807\uff1a\u8d28\u91cf\u5206\u6570\u3001\u6210\u672c\u7edf\u8ba1\n   - \u5206\u5e03\u5f0f\u8ffd\u8e2a\uff1a\u5168\u94fe\u8def\u6027\u80fd\u5206\u6790</p>\n</li>\n<li>\n<p><strong>\u6f02\u79fb\u68c0\u6d4b</strong>\uff1a\n   - \u6570\u636e\u6f02\u79fb\uff1a\u8f93\u5165\u5206\u5e03\u53d8\u5316\n   - \u6982\u5ff5\u6f02\u79fb\uff1a\u8f93\u5165-\u8f93\u51fa\u5173\u7cfb\u53d8\u5316\n   - \u81ea\u52a8\u54cd\u5e94\uff1a\u544a\u8b66\u3001\u91cd\u8bad\u7ec3\u3001\u56de\u6eda</p>\n</li>\n<li>\n<p><strong>\u53d1\u5e03\u7b56\u7565</strong>\uff1a\n   - \u84dd\u7eff\u90e8\u7f72\uff1a\u96f6\u505c\u673a\u5207\u6362\n   - \u91d1\u4e1d\u96c0\u53d1\u5e03\uff1a\u6e10\u8fdb\u5f0f\u6d41\u91cf\u8fc1\u79fb\n   - \u7279\u5f81\u5f00\u5173\uff1a\u7ec6\u7c92\u5ea6\u529f\u80fd\u63a7\u5236</p>\n</li>\n</ol>\n<h3 id=\"_16\">\ud83d\udca1 \u5173\u952e\u516c\u5f0f</h3>\n<ol>\n<li>\n<p><strong>\u91cf\u5316\u8bef\u5dee</strong>\uff1a\n   $$\\epsilon = \\frac{\\alpha}{2^{b-1}-1}$$\n\u5176\u4e2d $\\alpha$ \u4e3a\u6570\u503c\u8303\u56f4\uff0c$b$ \u4e3a\u91cf\u5316\u4f4d\u6570</p>\n</li>\n<li>\n<p><strong>\u84b8\u998f\u635f\u5931</strong>\uff1a\n$$L = \\alpha L_{CE} + \\beta \\cdot T^2 \\cdot L_{KL}$$</p>\n</li>\n<li>\n<p><strong>\u671f\u671b\u6821\u51c6\u8bef\u5dee\uff08ECE\uff09</strong>\uff1a\n$$ECE = \\sum_{m=1}^{M} \\frac{|B_m|}{n} |acc(B_m) - conf(B_m)|$$</p>\n</li>\n<li>\n<p><strong>KL \u6563\u5ea6\u6f02\u79fb\u68c0\u6d4b</strong>\uff1a\n$$D_{KL}(P||Q) = \\sum_{i} P(i) \\log \\frac{P(i)}{Q(i)}$$</p>\n</li>\n</ol>\n<h3 id=\"_17\">\ud83d\udd2c \u5b9e\u7528\u6280\u5de7</h3>\n<ol>\n<li>\n<p><strong>\u538b\u7f29\u7b56\u7565\u9009\u62e9</strong>\uff1a\n   - \u5ef6\u8fdf\u654f\u611f\uff1a\u4f18\u5148\u91cf\u5316\uff08INT8\uff09\n   - \u5185\u5b58\u53d7\u9650\uff1a\u7ed3\u6784\u5316\u526a\u679d + \u91cf\u5316\n   - \u7cbe\u5ea6\u4f18\u5148\uff1a\u77e5\u8bc6\u84b8\u998f</p>\n</li>\n<li>\n<p><strong>\u76d1\u63a7\u544a\u8b66\u8bbe\u7f6e</strong>\uff1a\n   - P50/P95/P99 \u5206\u4f4d\u6570\u76d1\u63a7\n   - \u6ed1\u52a8\u7a97\u53e3\u5f02\u5e38\u68c0\u6d4b\n   - \u5206\u7ea7\u544a\u8b66\u907f\u514d\u544a\u8b66\u75b2\u52b3</p>\n</li>\n<li>\n<p><strong>\u53d1\u5e03\u98ce\u9669\u63a7\u5236</strong>\uff1a\n   - \u91d1\u4e1d\u96c0\u8d77\u59cb\u6d41\u91cf &lt; 5%\n   - \u6bcf\u9636\u6bb5\u89c2\u5bdf\u65f6\u95f4 \u2265 5 \u5206\u949f\n   - \u81ea\u52a8\u56de\u6eda\u673a\u5236\u5fc5\u987b\u914d\u7f6e</p>\n</li>\n</ol>\n<h2 id=\"gotchas\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef (Gotchas)</h2>\n<h3 id=\"_18\">\u26a0\ufe0f \u6a21\u578b\u538b\u7f29\u9677\u9631</h3>\n<ol>\n<li>\n<p><strong>\u8fc7\u5ea6\u91cf\u5316\u5bfc\u81f4\u7cbe\u5ea6\u5d29\u6e83</strong>\n   - \u9519\u8bef\uff1a\u76f4\u63a5\u5e94\u7528 INT4 \u91cf\u5316\u5230\u6240\u6709\u5c42\n   - \u6b63\u786e\uff1a\u5173\u952e\u5c42\u4fdd\u6301\u9ad8\u7cbe\u5ea6\uff0c\u4f7f\u7528\u6df7\u5408\u7cbe\u5ea6\u7b56\u7565</p>\n</li>\n<li>\n<p><strong>\u5ffd\u89c6\u786c\u4ef6\u52a0\u901f\u652f\u6301</strong>\n   - \u9519\u8bef\uff1a\u4f7f\u7528\u975e\u7ed3\u6784\u5316\u526a\u679d\u671f\u671b\u52a0\u901f\n   - \u6b63\u786e\uff1a\u786e\u8ba4\u76ee\u6807\u786c\u4ef6\u652f\u6301\u7684\u4f18\u5316\u6a21\u5f0f</p>\n</li>\n<li>\n<p><strong>\u84b8\u998f\u6e29\u5ea6\u8bbe\u7f6e\u4e0d\u5f53</strong>\n   - \u9519\u8bef\uff1a\u56fa\u5b9a\u6e29\u5ea6 T=1\n   - \u6b63\u786e\uff1a\u6839\u636e\u4efb\u52a1\u8c03\u6574\uff0c\u901a\u5e38 T\u2208[3,10]</p>\n</li>\n</ol>\n<h3 id=\"_19\">\u26a0\ufe0f \u90e8\u7f72\u67b6\u6784\u9677\u9631</h3>\n<ol>\n<li>\n<p><strong>\u6279\u5904\u7406\u914d\u7f6e\u9519\u8bef</strong>\n   - \u9519\u8bef\uff1abatch_size \u8d8a\u5927\u8d8a\u597d\n   - \u6b63\u786e\uff1a\u5e73\u8861\u5ef6\u8fdf\u548c\u541e\u5410\uff0c\u6d4b\u8bd5\u6700\u4f18\u503c</p>\n</li>\n<li>\n<p><strong>\u5ffd\u89c6\u51b7\u542f\u52a8\u95ee\u9898</strong>\n   - \u9519\u8bef\uff1a\u4e0d\u9884\u70ed\u6a21\u578b\u76f4\u63a5\u670d\u52a1\n   - \u6b63\u786e\uff1a\u90e8\u7f72\u540e\u8fdb\u884c\u9884\u70ed\u8bf7\u6c42</p>\n</li>\n<li>\n<p><strong>KV Cache \u5185\u5b58\u6ea2\u51fa</strong>\n   - \u9519\u8bef\uff1a\u65e0\u9650\u5236\u7f13\u5b58\u6240\u6709\u5e8f\u5217\n   - \u6b63\u786e\uff1a\u8bbe\u7f6e\u6700\u5927\u5e8f\u5217\u957f\u5ea6\u548c\u7f13\u5b58\u6dd8\u6c70\u7b56\u7565</p>\n</li>\n</ol>\n<h3 id=\"_20\">\u26a0\ufe0f \u76d1\u63a7\u76f2\u533a</h3>\n<ol>\n<li>\n<p><strong>\u53ea\u76d1\u63a7\u5e73\u5747\u503c</strong>\n   - \u9519\u8bef\uff1a\u53ea\u770b\u5e73\u5747\u5ef6\u8fdf\n   - \u6b63\u786e\uff1a\u76d1\u63a7 P95/P99 \u957f\u5c3e\u5ef6\u8fdf</p>\n</li>\n<li>\n<p><strong>\u5ffd\u89c6\u4e1a\u52a1\u6307\u6807</strong>\n   - \u9519\u8bef\uff1a\u53ea\u5173\u6ce8\u7cfb\u7edf\u6307\u6807\n   - \u6b63\u786e\uff1a\u7ed3\u5408\u4e1a\u52a1\u8d28\u91cf\u6307\u6807\u7efc\u5408\u8bc4\u4f30</p>\n</li>\n<li>\n<p><strong>\u544a\u8b66\u98ce\u66b4</strong>\n   - \u9519\u8bef\uff1a\u6240\u6709\u5f02\u5e38\u90fd\u89e6\u53d1\u544a\u8b66\n   - \u6b63\u786e\uff1a\u544a\u8b66\u805a\u5408\u3001\u964d\u566a\u3001\u5206\u7ea7</p>\n</li>\n</ol>\n<h3 id=\"_21\">\u26a0\ufe0f \u53d1\u5e03\u98ce\u9669</h3>\n<ol>\n<li>\n<p><strong>\u8df3\u8fc7\u91d1\u4e1d\u96c0\u9636\u6bb5</strong>\n   - \u9519\u8bef\uff1a\u76f4\u63a5 100% \u5207\u6362\u6d41\u91cf\n   - \u6b63\u786e\uff1a\u6e10\u8fdb\u5f0f\u589e\u52a0\u6d41\u91cf\u6bd4\u4f8b</p>\n</li>\n<li>\n<p><strong>\u56de\u6eda\u7b56\u7565\u7f3a\u5931</strong>\n   - \u9519\u8bef\uff1a\u624b\u52a8\u56de\u6eda\uff0c\u8017\u65f6\u4e14\u6613\u9519\n   - \u6b63\u786e\uff1a\u81ea\u52a8\u5316\u56de\u6eda\u673a\u5236</p>\n</li>\n<li>\n<p><strong>\u914d\u7f6e\u6f02\u79fb</strong>\n   - \u9519\u8bef\uff1a\u624b\u52a8\u4fee\u6539\u751f\u4ea7\u914d\u7f6e\n   - \u6b63\u786e\uff1a\u7248\u672c\u5316\u914d\u7f6e\uff0c\u901a\u8fc7 CI/CD \u90e8\u7f72</p>\n</li>\n</ol>\n<h2 id=\"_22\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_23\">\u57fa\u7840\u9898</h3>\n<p><strong>\u7ec3\u4e60 9.1\uff1a\u91cf\u5316\u7cbe\u5ea6\u5206\u6790</strong>\n\u7ed9\u5b9a\u4e00\u4e2a\u6743\u91cd\u77e9\u9635 W \u2208 [-2.5, 3.7]\uff0c\u8ba1\u7b97\u4f7f\u7528 INT8 \u5bf9\u79f0\u91cf\u5316\u540e\u7684\u6700\u5927\u91cf\u5316\u8bef\u5dee\u3002</p>\n<details>\n<summary>Hint</summary>\n<p>\u8003\u8651\u5bf9\u79f0\u91cf\u5316\u7684\u8303\u56f4\u786e\u5b9a\u65b9\u5f0f\u548c\u91cf\u5316\u6b65\u957f\u8ba1\u7b97\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u5bf9\u79f0\u91cf\u5316\u9700\u8981\u8303\u56f4\u5bf9\u79f0\u4e8e 0\uff1a</p>\n<ul>\n<li>\u8303\u56f4\uff1a[-3.7, 3.7]\uff08\u53d6\u7edd\u5bf9\u503c\u6700\u5927\u503c\uff09</li>\n<li>\u91cf\u5316\u6b65\u957f\uff1as = 3.7 / 127 \u2248 0.0291</li>\n<li>\u6700\u5927\u91cf\u5316\u8bef\u5dee\uff1as/2 \u2248 0.0146</li>\n</ul>\n<p>\u5b9e\u9645\u91cf\u5316\u8fc7\u7a0b\uff1a</p>\n<ol>\n<li>\u7f29\u653e\uff1aW_scaled = W \u00d7 127/3.7</li>\n<li>\u53d6\u6574\uff1aW_q = round(W_scaled)</li>\n<li>\u53cd\u91cf\u5316\uff1aW' = W_q \u00d7 3.7/127</li>\n</ol>\n<p>\u6700\u5927\u8bef\u5dee\u51fa\u73b0\u5728\u91cf\u5316\u8fb9\u754c\uff0c\u7ea6\u4e3a 0.0146\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e60 9.2\uff1aKV Cache \u5185\u5b58\u4f30\u7b97</strong>\n\u8ba1\u7b97\u4ee5\u4e0b\u914d\u7f6e\u7684 KV Cache \u5185\u5b58\u9700\u6c42\uff1a</p>\n<ul>\n<li>batch_size = 8</li>\n<li>max_seq_length = 2048</li>\n<li>num_layers = 24</li>\n<li>num_kv_heads = 8</li>\n<li>head_dim = 128</li>\n<li>dtype = float16</li>\n</ul>\n<details>\n<summary>Hint</summary>\n<p>KV Cache \u9700\u8981\u5b58\u50a8\u6bcf\u5c42\u7684 K \u548c V \u77e9\u9635\uff0c\u6ce8\u610f float16 \u5360 2 \u5b57\u8282\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u5185\u5b58\u8ba1\u7b97\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nx\">Cache_size</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"nx\">batch</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"nx\">seq_len</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"nx\">n_layers</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"nx\">n_kv_heads</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"nx\">d_head</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"nx\">dtype_size</span>\n<span class=\"w\">         </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">2048</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">128</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"nx\">bytes</span>\n<span class=\"w\">         </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">2048</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">128</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"err\">\u00d7</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"w\">         </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">610</span><span class=\"p\">,</span><span class=\"mi\">612</span><span class=\"p\">,</span><span class=\"mi\">736</span><span class=\"w\"> </span><span class=\"nx\">bytes</span>\n<span class=\"w\">         </span><span class=\"err\">\u2248</span><span class=\"w\"> </span><span class=\"m m-Double\">1.5</span><span class=\"w\"> </span><span class=\"nx\">GB</span>\n</code></pre></div>\n\n<p>\u89e3\u91ca\uff1a</p>\n<ul>\n<li>2 \u8868\u793a K \u548c V \u4e24\u4e2a\u77e9\u9635</li>\n<li>float16 \u5360 2 \u5b57\u8282</li>\n<li>\u603b\u8ba1\u7ea6 1.5 GB \u663e\u5b58</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e60 9.3\uff1a\u91d1\u4e1d\u96c0\u53d1\u5e03\u6d41\u91cf\u8ba1\u7b97</strong>\n\u91d1\u4e1d\u96c0\u53d1\u5e03\u91c7\u7528\u6307\u6570\u589e\u957f\u7b56\u7565\uff0c\u521d\u59cb\u6d41\u91cf 2%\uff0c\u6bcf\u9636\u6bb5\u7ffb\u500d\u3002\u9700\u8981\u591a\u5c11\u9636\u6bb5\u624d\u80fd\u8fbe\u5230 100% \u6d41\u91cf\uff1f\u6bcf\u9636\u6bb5\u7684\u5177\u4f53\u6d41\u91cf\u6bd4\u4f8b\u662f\u591a\u5c11\uff1f</p>\n<details>\n<summary>Hint</summary>\n<p>\u4f7f\u7528 2^n \u8ba1\u7b97\u9636\u6bb5\u6570\uff0c\u6ce8\u610f\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\u76f4\u63a5\u5230 100%\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u6d41\u91cf\u589e\u957f\u5e8f\u5217\uff1a</p>\n<ul>\n<li>\u9636\u6bb5 1\uff1a2%</li>\n<li>\u9636\u6bb5 2\uff1a4%</li>\n<li>\u9636\u6bb5 3\uff1a8%</li>\n<li>\u9636\u6bb5 4\uff1a16%</li>\n<li>\u9636\u6bb5 5\uff1a32%</li>\n<li>\u9636\u6bb5 6\uff1a64%</li>\n<li>\u9636\u6bb5 7\uff1a100%</li>\n</ul>\n<p>\u5171\u9700\u8981 7 \u4e2a\u9636\u6bb5\u3002\u5b9e\u9645\u90e8\u7f72\u4e2d\uff0c\u901a\u5e38\u4f1a\u5728 50% \u540e\u76f4\u63a5\u8df3\u5230 100%\uff0c\u5373\uff1a\n2% \u2192 5% \u2192 10% \u2192 25% \u2192 50% \u2192 100%\uff086 \u4e2a\u9636\u6bb5\uff09</p>\n</details>\n<h3 id=\"_24\">\u6311\u6218\u9898</h3>\n<p><strong>\u7ec3\u4e60 9.4\uff1a\u6f02\u79fb\u68c0\u6d4b\u7b97\u6cd5\u8bbe\u8ba1</strong>\n\u8bbe\u8ba1\u4e00\u4e2a\u81ea\u9002\u5e94\u7684\u6f02\u79fb\u68c0\u6d4b\u7b97\u6cd5\uff0c\u8981\u6c42\uff1a</p>\n<ol>\n<li>\u80fd\u591f\u533a\u5206\u6e10\u8fdb\u6f02\u79fb\u548c\u7a81\u53d1\u6f02\u79fb</li>\n<li>\u81ea\u52a8\u8c03\u6574\u68c0\u6d4b\u7075\u654f\u5ea6</li>\n<li>\u63d0\u4f9b\u6f02\u79fb\u4e25\u91cd\u7a0b\u5ea6\u8bc4\u5206</li>\n</ol>\n<details>\n<summary>Hint</summary>\n<p>\u8003\u8651\u7ed3\u5408\u591a\u4e2a\u65f6\u95f4\u7a97\u53e3\u3001\u4f7f\u7528\u4e0d\u540c\u7684\u7edf\u8ba1\u68c0\u9a8c\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5982\u4f55\u91cf\u5316\u6f02\u79fb\u7a0b\u5ea6\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u591a\u5c3a\u5ea6\u81ea\u9002\u5e94\u6f02\u79fb\u68c0\u6d4b\u5668\u8bbe\u8ba1\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">AdaptiveDriftDetector</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">short_window</span> <span class=\"o\">=</span> <span class=\"n\">deque</span><span class=\"p\">(</span><span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">medium_window</span> <span class=\"o\">=</span> <span class=\"n\">deque</span><span class=\"p\">(</span><span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">long_window</span> <span class=\"o\">=</span> <span class=\"n\">deque</span><span class=\"p\">(</span><span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"mi\">2000</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">baseline_stats</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">detect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u66f4\u65b0\u7a97\u53e3</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">short_window</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">medium_window</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">long_window</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u7a81\u53d1\u6f02\u79fb\u68c0\u6d4b\uff08\u77ed\u671f vs \u957f\u671f\uff09</span>\n        <span class=\"n\">sudden_drift</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_detect_sudden</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">short_window</span><span class=\"p\">,</span> \n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">long_window</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6e10\u8fdb\u6f02\u79fb\u68c0\u6d4b\uff08\u4e2d\u671f\u8d8b\u52bf\uff09</span>\n        <span class=\"n\">gradual_drift</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_detect_gradual</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">medium_window</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u4e25\u91cd\u7a0b\u5ea6</span>\n        <span class=\"n\">severity</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_severity</span><span class=\"p\">(</span>\n            <span class=\"n\">sudden_drift</span><span class=\"p\">,</span> \n            <span class=\"n\">gradual_drift</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;sudden&#39;</span><span class=\"p\">:</span> <span class=\"n\">sudden_drift</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;gradual&#39;</span><span class=\"p\">:</span> <span class=\"n\">gradual_drift</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;severity&#39;</span><span class=\"p\">:</span> <span class=\"n\">severity</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_detect_sudden</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">short</span><span class=\"p\">,</span> <span class=\"n\">long</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">short</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">50</span> <span class=\"ow\">or</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">500</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"c1\"># KS \u68c0\u9a8c</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">p_value</span> <span class=\"o\">=</span> <span class=\"n\">ks_2samp</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">short</span><span class=\"p\">),</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">p_value</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.01</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_detect_gradual</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">window</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"c1\"># Mann-Kendall \u8d8b\u52bf\u68c0\u9a8c</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mann_kendall_test</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_compute_severity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sudden</span><span class=\"p\">,</span> <span class=\"n\">gradual</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">sudden</span> <span class=\"ow\">and</span> <span class=\"n\">gradual</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s1\">&#39;critical&#39;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">sudden</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s1\">&#39;high&#39;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">gradual</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s1\">&#39;medium&#39;</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;low&#39;</span>\n</code></pre></div>\n\n<p>\u5173\u952e\u8bbe\u8ba1\u70b9\uff1a</p>\n<ol>\n<li>\u591a\u65f6\u95f4\u5c3a\u5ea6\u7a97\u53e3\u6355\u83b7\u4e0d\u540c\u7c7b\u578b\u6f02\u79fb</li>\n<li>KS \u68c0\u9a8c\u68c0\u6d4b\u5206\u5e03\u7a81\u53d8</li>\n<li>Mann-Kendall \u68c0\u9a8c\u68c0\u6d4b\u8d8b\u52bf</li>\n<li>\u7ec4\u5408\u591a\u4e2a\u4fe1\u53f7\u8bc4\u4f30\u4e25\u91cd\u7a0b\u5ea6</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 9.5\uff1a\u81ea\u52a8\u5316\u5bb9\u91cf\u89c4\u5212</strong>\n\u8bbe\u8ba1\u4e00\u4e2a\u7cfb\u7edf\uff0c\u6839\u636e\u5386\u53f2\u8d1f\u8f7d\u6a21\u5f0f\u548c\u4e1a\u52a1\u589e\u957f\u9884\u6d4b\uff0c\u81ea\u52a8\u8fdb\u884c\u5bb9\u91cf\u89c4\u5212\u548c\u8d44\u6e90\u8c03\u5ea6\u3002\u8003\u8651\uff1a</p>\n<ol>\n<li>\u5468\u671f\u6027\u6a21\u5f0f\uff08\u65e5/\u5468/\u6708\uff09</li>\n<li>\u8d8b\u52bf\u589e\u957f</li>\n<li>\u7a81\u53d1\u6d41\u91cf</li>\n<li>\u6210\u672c\u4f18\u5316</li>\n</ol>\n<details>\n<summary>Hint</summary>\n<p>\u4f7f\u7528\u65f6\u95f4\u5e8f\u5217\u5206\u89e3\u3001\u9884\u6d4b\u6a21\u578b\u3001\u8d44\u6e90\u8c03\u5ea6\u7b97\u6cd5\u7684\u7ec4\u5408\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u81ea\u52a8\u5316\u5bb9\u91cf\u89c4\u5212\u7cfb\u7edf\u8bbe\u8ba1\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CapacityPlanner</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_history</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cost_model</span> <span class=\"o\">=</span> <span class=\"n\">CostModel</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">plan</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">forecast_days</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 1. \u65f6\u95f4\u5e8f\u5217\u5206\u89e3</span>\n        <span class=\"n\">trend</span><span class=\"p\">,</span> <span class=\"n\">seasonal</span><span class=\"p\">,</span> <span class=\"n\">residual</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_decompose_timeseries</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># 2. \u9884\u6d4b\u672a\u6765\u8d1f\u8f7d</span>\n        <span class=\"n\">future_load</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_forecast_load</span><span class=\"p\">(</span>\n            <span class=\"n\">trend</span><span class=\"p\">,</span> <span class=\"n\">seasonal</span><span class=\"p\">,</span> <span class=\"n\">forecast_days</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u8ba1\u7b97\u6240\u9700\u8d44\u6e90</span>\n        <span class=\"n\">required_resources</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_resources</span><span class=\"p\">(</span>\n            <span class=\"n\">future_load</span><span class=\"p\">,</span>\n            <span class=\"n\">include_buffer</span><span class=\"o\">=</span><span class=\"mf\">1.3</span>  <span class=\"c1\"># 30% \u7f13\u51b2</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 4. \u4f18\u5316\u8d44\u6e90\u914d\u7f6e</span>\n        <span class=\"n\">optimal_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_optimize_allocation</span><span class=\"p\">(</span>\n            <span class=\"n\">required_resources</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cost_model</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 5. \u751f\u6210\u6269\u7f29\u5bb9\u8ba1\u5212</span>\n        <span class=\"n\">scaling_plan</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_generate_scaling_plan</span><span class=\"p\">(</span>\n            <span class=\"n\">optimal_config</span><span class=\"p\">,</span>\n            <span class=\"n\">current_resources</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_current_resources</span><span class=\"p\">()</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">scaling_plan</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_decompose_timeseries</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># STL \u5206\u89e3</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">statsmodels.tsa.seasonal</span> <span class=\"kn\">import</span> <span class=\"n\">STL</span>\n        <span class=\"n\">stl</span> <span class=\"o\">=</span> <span class=\"n\">STL</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_history</span><span class=\"p\">,</span> <span class=\"n\">seasonal</span><span class=\"o\">=</span><span class=\"mi\">169</span><span class=\"p\">)</span>  <span class=\"c1\"># \u5468\u5468\u671f</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">stl</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">trend</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">seasonal</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">resid</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_forecast_load</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">trend</span><span class=\"p\">,</span> <span class=\"n\">seasonal</span><span class=\"p\">,</span> <span class=\"n\">days</span><span class=\"p\">):</span>\n        <span class=\"c1\"># SARIMA \u6a21\u578b\u9884\u6d4b</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">statsmodels.tsa.statespace.sarimax</span> <span class=\"kn\">import</span> <span class=\"n\">SARIMAX</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">SARIMAX</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_history</span><span class=\"p\">,</span>\n            <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n            <span class=\"n\">seasonal_order</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">fitted</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">()</span>\n        <span class=\"n\">forecast</span> <span class=\"o\">=</span> <span class=\"n\">fitted</span><span class=\"o\">.</span><span class=\"n\">forecast</span><span class=\"p\">(</span><span class=\"n\">steps</span><span class=\"o\">=</span><span class=\"n\">days</span> <span class=\"o\">*</span> <span class=\"mi\">24</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6dfb\u52a0\u5b63\u8282\u6027</span>\n        <span class=\"n\">forecast_with_seasonal</span> <span class=\"o\">=</span> <span class=\"n\">forecast</span> <span class=\"o\">+</span> <span class=\"n\">seasonal</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">days</span><span class=\"o\">*</span><span class=\"mi\">24</span><span class=\"p\">:]</span>\n\n        <span class=\"c1\"># \u6dfb\u52a0\u5b89\u5168\u8fb9\u9645\uff08P95\uff09</span>\n        <span class=\"n\">safety_margin</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">percentile</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_history</span><span class=\"p\">,</span> <span class=\"mi\">95</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_history</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">forecast_with_seasonal</span> <span class=\"o\">*</span> <span class=\"n\">safety_margin</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_optimize_allocation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">resources</span><span class=\"p\">,</span> <span class=\"n\">cost_model</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u6df7\u5408\u6574\u6570\u89c4\u5212</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">scipy.optimize</span> <span class=\"kn\">import</span> <span class=\"n\">milp</span>\n\n        <span class=\"c1\"># \u5b9a\u4e49\u51b3\u7b56\u53d8\u91cf\uff1a\u4e0d\u540c\u5b9e\u4f8b\u7c7b\u578b\u7684\u6570\u91cf</span>\n        <span class=\"c1\"># \u76ee\u6807\uff1a\u6700\u5c0f\u5316\u6210\u672c</span>\n        <span class=\"c1\"># \u7ea6\u675f\uff1a\u6ee1\u8db3\u8d44\u6e90\u9700\u6c42</span>\n\n        <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">cost_model</span><span class=\"o\">.</span><span class=\"n\">get_cost</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">instance_types</span><span class=\"p\">]</span>\n        <span class=\"n\">A_ub</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">capacity</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">instance_types</span><span class=\"p\">])</span>\n        <span class=\"n\">b_ub</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">resources</span><span class=\"p\">[</span><span class=\"s1\">&#39;compute&#39;</span><span class=\"p\">]</span>\n\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">milp</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">integrality</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">bounds</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span> \n                     <span class=\"n\">constraints</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">A_ub</span><span class=\"p\">,</span> <span class=\"n\">b_ub</span><span class=\"p\">])</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">x</span>\n</code></pre></div>\n\n<p>\u6838\u5fc3\u7ec4\u4ef6\uff1a</p>\n<ol>\n<li><strong>\u65f6\u95f4\u5e8f\u5217\u5206\u89e3</strong>\uff1a\u8bc6\u522b\u8d8b\u52bf\u3001\u5b63\u8282\u6027\u3001\u968f\u673a\u6210\u5206</li>\n<li><strong>\u8d1f\u8f7d\u9884\u6d4b</strong>\uff1aSARIMA \u6a21\u578b + \u5b89\u5168\u8fb9\u9645</li>\n<li><strong>\u8d44\u6e90\u6620\u5c04</strong>\uff1a\u8d1f\u8f7d \u2192 GPU/CPU/\u5185\u5b58\u9700\u6c42</li>\n<li><strong>\u6210\u672c\u4f18\u5316</strong>\uff1a\u8003\u8651 Spot/Reserved/On-Demand \u5b9e\u4f8b\u7ec4\u5408</li>\n<li><strong>\u6e10\u8fdb\u5f0f\u6269\u7f29\u5bb9</strong>\uff1a\u907f\u514d\u8d44\u6e90\u6296\u52a8</li>\n</ol>\n<p>\u5b9e\u65bd\u8981\u70b9\uff1a</p>\n<ul>\n<li>\u9884\u7559 20-30% \u7f13\u51b2\u5e94\u5bf9\u7a81\u53d1</li>\n<li>\u4f7f\u7528\u9884\u7559\u5b9e\u4f8b\u964d\u4f4e\u57fa\u7ebf\u6210\u672c</li>\n<li>Spot \u5b9e\u4f8b\u5904\u7406\u5f39\u6027\u8d1f\u8f7d</li>\n<li>\u81ea\u52a8\u544a\u8b66\u9608\u503c\uff1a\u5b9e\u9645 &gt; \u9884\u6d4b \u00d7 1.5</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e60 9.6\uff1a\u96f6\u505c\u673a\u8fc1\u79fb\u65b9\u6848</strong>\n\u8bbe\u8ba1\u4e00\u4e2a\u5c06 LLM \u670d\u52a1\u4ece\u6570\u636e\u4e2d\u5fc3 A \u8fc1\u79fb\u5230\u6570\u636e\u4e2d\u5fc3 B \u7684\u96f6\u505c\u673a\u65b9\u6848\uff0c\u8003\u8651\uff1a</p>\n<ol>\n<li>\u6a21\u578b\u6587\u4ef6\u540c\u6b65\uff08\u6570 GB\uff09</li>\n<li>\u6709\u72b6\u6001\u7684\u4f1a\u8bdd\u4fdd\u6301</li>\n<li>\u9010\u6b65\u6d41\u91cf\u8fc1\u79fb</li>\n<li>\u5931\u8d25\u56de\u6eda</li>\n</ol>\n<details>\n<summary>Hint</summary>\n<p>\u8003\u8651\u53cc\u5199\u3001\u4f1a\u8bdd\u8fc1\u79fb\u3001DNS \u5207\u6362\u3001\u6570\u636e\u4e00\u81f4\u6027\u7b49\u95ee\u9898\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u96f6\u505c\u673a\u8de8\u6570\u636e\u4e2d\u5fc3\u8fc1\u79fb\u65b9\u6848\uff1a</p>\n<p><strong>\u9636\u6bb5 1\uff1a\u51c6\u5907\uff08T-7 \u5929\uff09</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">tasks</span><span class=\"p\">:</span>\n\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">\u90e8\u7f72 B \u6570\u636e\u4e2d\u5fc3\u57fa\u7840\u8bbe\u65bd</span>\n<span class=\"w\">    </span><span class=\"nt\">steps</span><span class=\"p\">:</span>\n\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">\u914d\u7f6e\u7f51\u7edc\u548c\u8d1f\u8f7d\u5747\u8861\u5668</span>\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">\u90e8\u7f72 Kubernetes \u96c6\u7fa4</span>\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">\u8bbe\u7f6e\u76d1\u63a7\u548c\u65e5\u5fd7\u7cfb\u7edf</span>\n\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">\u6a21\u578b\u6587\u4ef6\u540c\u6b65</span>\n<span class=\"w\">    </span><span class=\"nt\">method</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">\u589e\u91cf\u540c\u6b65</span>\n<span class=\"w\">    </span><span class=\"nt\">tools</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">rsync --daemon</span>\n<span class=\"w\">    </span><span class=\"nt\">bandwidth_limit</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">50%</span><span class=\"w\">  </span><span class=\"c1\"># \u907f\u514d\u5f71\u54cd A \u6570\u636e\u4e2d\u5fc3</span>\n</code></pre></div>\n\n<p><strong>\u9636\u6bb5 2\uff1a\u53cc\u5199\u6a21\u5f0f\uff08T-3 \u5929\uff09</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">DualWriteProxy</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">primary</span> <span class=\"o\">=</span> <span class=\"n\">DataCenterA</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary</span> <span class=\"o\">=</span> <span class=\"n\">DataCenterB</span><span class=\"p\">()</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">handle_request</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u4e3b\u6570\u636e\u4e2d\u5fc3\u5904\u7406</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">primary</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5f02\u6b65\u590d\u5236\u5230\u526f\u6570\u636e\u4e2d\u5fc3</span>\n        <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_replicate_to_secondary</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">response</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">_replicate_to_secondary</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Secondary replication failed: </span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u9636\u6bb5 3\uff1a\u6d41\u91cf\u8fc1\u79fb\uff08T-0\uff09</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">TrafficMigrator</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">migration_percent</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">session_affinity</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">route</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u4f1a\u8bdd\u4fdd\u6301</span>\n        <span class=\"n\">session_id</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session_id</span>\n        <span class=\"k\">if</span> <span class=\"n\">session_id</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">session_affinity</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">session_affinity</span><span class=\"p\">[</span><span class=\"n\">session_id</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u65b0\u4f1a\u8bdd\u6309\u6bd4\u4f8b\u5206\u914d</span>\n        <span class=\"k\">if</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">migration_percent</span> <span class=\"o\">/</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n            <span class=\"n\">destination</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;datacenter_b&#39;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">destination</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;datacenter_a&#39;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">session_affinity</span><span class=\"p\">[</span><span class=\"n\">session_id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">destination</span>\n        <span class=\"k\">return</span> <span class=\"n\">destination</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">progressive_migration</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">stages</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">percent</span> <span class=\"ow\">in</span> <span class=\"n\">stages</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">migration_percent</span> <span class=\"o\">=</span> <span class=\"n\">percent</span>\n\n            <span class=\"c1\"># \u5065\u5eb7\u68c0\u67e5</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_health_check</span><span class=\"p\">():</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_rollback</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n            <span class=\"c1\"># \u4f1a\u8bdd\u8fc1\u79fb\uff08\u957f\u8fde\u63a5\uff09</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_migrate_sticky_sessions</span><span class=\"p\">(</span><span class=\"n\">percent</span><span class=\"p\">)</span>\n\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">)</span>  <span class=\"c1\"># 5 \u5206\u949f\u89c2\u5bdf\u671f</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n</code></pre></div>\n\n<p><strong>\u9636\u6bb5 4\uff1a\u4f1a\u8bdd\u8fc1\u79fb</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">SessionMigrator</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">migrate_session</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">session_id</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 1. \u83b7\u53d6\u4f1a\u8bdd\u72b6\u6001</span>\n        <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">datacenter_a</span><span class=\"o\">.</span><span class=\"n\">get_session_state</span><span class=\"p\">(</span><span class=\"n\">session_id</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. \u5e8f\u5217\u5316 KV Cache</span>\n        <span class=\"n\">kv_cache</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_serialize_kv_cache</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">kv_cache</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u4f20\u8f93\u5230 B \u6570\u636e\u4e2d\u5fc3</span>\n        <span class=\"n\">datacenter_b</span><span class=\"o\">.</span><span class=\"n\">restore_session</span><span class=\"p\">(</span><span class=\"n\">session_id</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;kv_cache&#39;</span><span class=\"p\">:</span> <span class=\"n\">kv_cache</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;context&#39;</span><span class=\"p\">:</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;timestamp&#39;</span><span class=\"p\">:</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">timestamp</span>\n        <span class=\"p\">})</span>\n\n        <span class=\"c1\"># 4. \u9a8c\u8bc1\u4e00\u81f4\u6027</span>\n        <span class=\"n\">checksum_a</span> <span class=\"o\">=</span> <span class=\"n\">datacenter_a</span><span class=\"o\">.</span><span class=\"n\">compute_checksum</span><span class=\"p\">(</span><span class=\"n\">session_id</span><span class=\"p\">)</span>\n        <span class=\"n\">checksum_b</span> <span class=\"o\">=</span> <span class=\"n\">datacenter_b</span><span class=\"o\">.</span><span class=\"n\">compute_checksum</span><span class=\"p\">(</span><span class=\"n\">session_id</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">checksum_a</span> <span class=\"o\">!=</span> <span class=\"n\">checksum_b</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ConsistencyError</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># 5. \u66f4\u65b0\u8def\u7531</span>\n        <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">update_affinity</span><span class=\"p\">(</span><span class=\"n\">session_id</span><span class=\"p\">,</span> <span class=\"s1\">&#39;datacenter_b&#39;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u9636\u6bb5 5\uff1a\u9a8c\u8bc1\u548c\u6e05\u7406</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># DNS \u5207\u6362</span>\ndig<span class=\"w\"> </span>@8.8.8.8<span class=\"w\"> </span>api.example.com<span class=\"w\">  </span><span class=\"c1\"># \u9a8c\u8bc1 TTL</span>\naws<span class=\"w\"> </span>route53<span class=\"w\"> </span>change-resource-record-sets<span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">  </span>--hosted-zone-id<span class=\"w\"> </span>Z123<span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">  </span>--change-batch<span class=\"w\"> </span>file://dns-cutover.json\n\n<span class=\"c1\"># \u76d1\u63a7\u9a8c\u8bc1</span>\n\n-<span class=\"w\"> </span>\u9519\u8bef\u7387<span class=\"w\"> </span>&lt;<span class=\"w\"> </span><span class=\"m\">0</span>.01%\n-<span class=\"w\"> </span>P99<span class=\"w\"> </span>\u5ef6\u8fdf<span class=\"w\"> </span>&lt;<span class=\"w\"> </span><span class=\"m\">110</span>%<span class=\"w\"> </span>\u57fa\u7ebf\n-<span class=\"w\"> </span>\u4f1a\u8bdd\u8fde\u7eed\u6027<span class=\"w\"> </span><span class=\"m\">100</span>%\n\n<span class=\"c1\"># \u6e05\u7406\u65e7\u8d44\u6e90\uff08T+7 \u5929\uff09</span>\nkubectl<span class=\"w\"> </span>--context<span class=\"o\">=</span>datacenter-a<span class=\"w\"> </span>delete<span class=\"w\"> </span>deployment<span class=\"w\"> </span>llm-service\n</code></pre></div>\n\n<p>\u5173\u952e\u6280\u672f\u70b9\uff1a</p>\n<ol>\n<li><strong>\u589e\u91cf\u540c\u6b65</strong>\uff1a\u907f\u514d\u7f51\u7edc\u62e5\u585e</li>\n<li><strong>\u4f1a\u8bdd\u4eb2\u548c\u6027</strong>\uff1a\u4fdd\u6301\u7528\u6237\u4f53\u9a8c</li>\n<li><strong>\u53cc\u5199\u9a8c\u8bc1</strong>\uff1a\u786e\u4fdd B \u6570\u636e\u4e2d\u5fc3\u5c31\u7eea</li>\n<li><strong>\u6e10\u8fdb\u5f0f\u5207\u6362</strong>\uff1a\u5feb\u901f\u56de\u6eda\u80fd\u529b</li>\n<li><strong>\u72b6\u6001\u8fc1\u79fb</strong>\uff1aKV Cache \u5e8f\u5217\u5316\u4f20\u8f93</li>\n</ol>\n<p>\u5931\u8d25\u56de\u6eda\u673a\u5236\uff1a</p>\n<ul>\n<li>DNS \u5feb\u901f\u5207\u56de\uff08TTL=60s\uff09</li>\n<li>\u4f1a\u8bdd\u8def\u7531\u8868\u56de\u6eda</li>\n<li>\u4fdd\u7559 A \u6570\u636e\u4e2d\u5fc3 7 \u5929</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e60 9.7\uff1a\u6210\u672c\u4f18\u5316\u7b56\u7565</strong>\n\u67d0 LLM \u670d\u52a1\u6708\u5ea6 GPU \u6210\u672c 10 \u4e07\u7f8e\u5143\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7efc\u5408\u6210\u672c\u4f18\u5316\u65b9\u6848\uff0c\u76ee\u6807\u964d\u4f4e 30% \u6210\u672c\u800c\u4e0d\u5f71\u54cd SLA\u3002</p>\n<details>\n<summary>Hint</summary>\n<p>\u4ece\u591a\u4e2a\u7ef4\u5ea6\u601d\u8003\uff1a\u5b9e\u4f8b\u7c7b\u578b\u3001\u8c03\u5ea6\u7b56\u7565\u3001\u7f13\u5b58\u3001\u6a21\u578b\u4f18\u5316\u7b49\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u7efc\u5408\u6210\u672c\u4f18\u5316\u65b9\u6848\uff1a</p>\n<ol>\n<li><strong>\u5b9e\u4f8b\u7c7b\u578b\u4f18\u5316\uff08\u9884\u671f\u8282\u7701 15%\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5f53\u524d\uff1a100% On-Demand</span>\n<span class=\"c1\"># \u4f18\u5316\u540e\uff1a\u6df7\u5408\u5b9e\u4f8b\u7b56\u7565</span>\n<span class=\"n\">instance_mix</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;reserved&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span>    <span class=\"c1\"># 50% \u9884\u7559\u5b9e\u4f8b\uff083\u5e74\u671f\uff0c\u8282\u7701 60%\uff09</span>\n    <span class=\"s1\">&#39;savings_plan&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"c1\"># 20% Savings Plan\uff08\u8282\u7701 40%\uff09  </span>\n    <span class=\"s1\">&#39;spot&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span>        <span class=\"c1\"># 20% Spot \u5b9e\u4f8b\uff08\u8282\u7701 70%\uff09</span>\n    <span class=\"s1\">&#39;on_demand&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span>    <span class=\"c1\"># 10% \u6309\u9700\uff08\u4fdd\u6301\u5f39\u6027\uff09</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># \u6210\u672c\u8ba1\u7b97</span>\n<span class=\"n\">original_cost</span> <span class=\"o\">=</span> <span class=\"mi\">100000</span>  <span class=\"c1\"># \u7f8e\u5143/\u6708</span>\n<span class=\"n\">optimized_cost</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"mi\">100000</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"mf\">0.4</span> <span class=\"o\">+</span>   <span class=\"c1\"># Reserved</span>\n    <span class=\"mi\">100000</span> <span class=\"o\">*</span> <span class=\"mf\">0.2</span> <span class=\"o\">*</span> <span class=\"mf\">0.6</span> <span class=\"o\">+</span>   <span class=\"c1\"># Savings Plan</span>\n    <span class=\"mi\">100000</span> <span class=\"o\">*</span> <span class=\"mf\">0.2</span> <span class=\"o\">*</span> <span class=\"mf\">0.3</span> <span class=\"o\">+</span>   <span class=\"c1\"># Spot</span>\n    <span class=\"mi\">100000</span> <span class=\"o\">*</span> <span class=\"mf\">0.1</span> <span class=\"o\">*</span> <span class=\"mf\">1.0</span>     <span class=\"c1\"># On-Demand</span>\n<span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"mi\">48000</span>  <span class=\"c1\"># \u8282\u7701 52%\uff0c\u4f46\u8003\u8651 Spot \u4e2d\u65ad\uff0c\u5b9e\u9645\u7ea6 15%</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u667a\u80fd\u8c03\u5ea6\u548c\u81ea\u52a8\u4f38\u7f29\uff08\u9884\u671f\u8282\u7701 8%\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CostAwareScheduler</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">schedule</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">priority</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_priority</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">priority</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;low&#39;</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u8c03\u5ea6\u5230 Spot \u5b9e\u4f8b</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">spot_instances</span><span class=\"o\">.</span><span class=\"n\">schedule</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">priority</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;medium&#39;</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u4e2d\u4f18\u5148\u7ea7\u4f7f\u7528\u9884\u7559\u5b9e\u4f8b</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reserved_instances</span><span class=\"o\">.</span><span class=\"n\">schedule</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u9ad8\u4f18\u5148\u7ea7\u4fdd\u8bc1 SLA</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">on_demand_instances</span><span class=\"o\">.</span><span class=\"n\">schedule</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">auto_scale</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u57fa\u4e8e\u8d1f\u8f7d\u9884\u6d4b\u7684\u63d0\u524d\u6269\u7f29\u5bb9</span>\n        <span class=\"n\">predicted_load</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">predictor</span><span class=\"o\">.</span><span class=\"n\">forecast</span><span class=\"p\">(</span><span class=\"n\">horizon</span><span class=\"o\">=</span><span class=\"s1\">&#39;1h&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">predicted_load</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.3</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6df1\u591c\u4f4e\u8c37\uff0c\u5173\u95ed\u90e8\u5206\u5b9e\u4f8b</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">scale_down</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">predicted_load</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.8</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u9ad8\u5cf0\u671f\uff0c\u63d0\u524d\u6269\u5bb9</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">scale_up</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"mf\">1.2</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u7f13\u5b58\u4f18\u5316\uff08\u9884\u671f\u8282\u7701 5%\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MultiLevelCache</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">l1_cache</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>  <span class=\"c1\"># \u5185\u5b58\u7f13\u5b58\uff08\u70ed\u70b9\u6570\u636e\uff09</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">l2_cache</span> <span class=\"o\">=</span> <span class=\"n\">Redis</span><span class=\"p\">()</span>  <span class=\"c1\"># \u5206\u5e03\u5f0f\u7f13\u5b58</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">l3_cache</span> <span class=\"o\">=</span> <span class=\"n\">S3</span><span class=\"p\">()</span>  <span class=\"c1\"># \u51b7\u6570\u636e</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n        <span class=\"c1\"># L1: \u547d\u4e2d\u7387 30%\uff0c\u8282\u7701 100% GPU \u65f6\u95f4</span>\n        <span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">l1_cache</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">l1_cache</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># L2: \u547d\u4e2d\u7387 20%\uff0c\u8282\u7701 95% GPU \u65f6\u95f4</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">l2_cache</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">):</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">l2_cache</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">l1_cache</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"k\">return</span> <span class=\"n\">value</span>\n\n        <span class=\"c1\"># L3: \u5d4c\u5165\u5411\u91cf\u7f13\u5b58</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_is_embedding_request</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">):</span>\n            <span class=\"n\">embedding</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">l3_cache</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">embedding</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">embedding</span>\n\n        <span class=\"c1\"># Cache miss\uff0c\u8ba1\u7b97\u5e76\u5b58\u50a8</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_caches</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span>\n</code></pre></div>\n\n<ol start=\"4\">\n<li><strong>\u6a21\u578b\u4f18\u5316\uff08\u9884\u671f\u8282\u7701 5%\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u52a8\u6001\u6a21\u578b\u9009\u62e9</span>\n<span class=\"k\">class</span> <span class=\"nc\">ModelSelector</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">select</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">complexity</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimate_complexity</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">complexity</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;simple&#39;</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u7b80\u5355\u4efb\u52a1\u7528\u5c0f\u6a21\u578b\uff087B\uff09</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">small_model</span>  <span class=\"c1\"># \u6210\u672c 1x</span>\n        <span class=\"k\">elif</span> <span class=\"n\">complexity</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;medium&#39;</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u4e2d\u7b49\u4efb\u52a1\u7528\u4e2d\u6a21\u578b\uff0813B\uff09</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">medium_model</span>  <span class=\"c1\"># \u6210\u672c 2x</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u590d\u6742\u4efb\u52a1\u7528\u5927\u6a21\u578b\uff0870B\uff09</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">large_model</span>  <span class=\"c1\"># \u6210\u672c 10x</span>\n\n<span class=\"c1\"># \u8bf7\u6c42\u7ea7\u91cf\u5316</span>\n<span class=\"k\">class</span> <span class=\"nc\">DynamicQuantization</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">latency_requirement</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1000</span><span class=\"p\">:</span>  <span class=\"c1\"># ms</span>\n            <span class=\"c1\"># \u5bbd\u677e\u5ef6\u8fdf\u8981\u6c42\uff0c\u4f7f\u7528 INT4 \u91cf\u5316</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int4_model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u4e25\u683c\u5ef6\u8fdf\u8981\u6c42\uff0c\u4f7f\u7528 FP16</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fp16_model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"5\">\n<li><strong>\u6279\u5904\u7406\u4f18\u5316\uff08\u9884\u671f\u8282\u7701 2%\uff09</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">BatchOptimizer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">optimize_batch_size</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u52a8\u6001\u8c03\u6574\u6279\u5927\u5c0f</span>\n        <span class=\"n\">current_latency</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">get_p95_latency</span><span class=\"p\">()</span>\n        <span class=\"n\">current_batch</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">batch_size</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">current_latency</span> <span class=\"o\">&lt;</span> <span class=\"n\">SLA_LATENCY</span> <span class=\"o\">*</span> <span class=\"mf\">0.8</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6709\u4f59\u91cf\uff0c\u589e\u52a0\u6279\u5927\u5c0f\u63d0\u9ad8\u541e\u5410</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">batch_size</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">current_batch</span> <span class=\"o\">*</span> <span class=\"mf\">1.2</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">current_latency</span> <span class=\"o\">&gt;</span> <span class=\"n\">SLA_LATENCY</span> <span class=\"o\">*</span> <span class=\"mf\">0.95</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u63a5\u8fd1 SLA\uff0c\u51cf\u5c0f\u6279\u5927\u5c0f</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">batch_size</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">current_batch</span> <span class=\"o\">*</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u5b9e\u65bd\u8ba1\u5212</strong>\uff1a</p>\n<ol>\n<li>\u7b2c 1 \u4e2a\u6708\uff1a\u91c7\u8d2d\u9884\u7559\u5b9e\u4f8b\uff0c\u90e8\u7f72\u7f13\u5b58\u7cfb\u7edf</li>\n<li>\u7b2c 2 \u4e2a\u6708\uff1a\u5b9e\u65bd\u667a\u80fd\u8c03\u5ea6\uff0cA/B \u6d4b\u8bd5</li>\n<li>\u7b2c 3 \u4e2a\u6708\uff1a\u6a21\u578b\u4f18\u5316\uff0c\u5168\u9762\u63a8\u5e7f</li>\n</ol>\n<p><strong>\u9884\u671f\u6548\u679c</strong>\uff1a</p>\n<ul>\n<li>\u603b\u6210\u672c\u964d\u4f4e\uff1a32%</li>\n<li>SLA \u4fdd\u6301\uff1a99.9%</li>\n<li>\u7528\u6237\u4f53\u9a8c\uff1a\u65e0\u611f\u77e5</li>\n</ul>\n<p><strong>\u98ce\u9669\u7f13\u89e3</strong>\uff1a</p>\n<ul>\n<li>Spot \u4e2d\u65ad\uff1a\u81ea\u52a8\u6545\u969c\u8f6c\u79fb\u5230 On-Demand</li>\n<li>\u7f13\u5b58\u5931\u6548\uff1a\u964d\u7ea7\u5230\u76f4\u63a5\u8ba1\u7b97</li>\n<li>\u6a21\u578b\u5207\u6362\uff1a\u5e73\u6ed1\u8fc7\u6e21\uff0c\u76d1\u63a7\u8d28\u91cf</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e60 9.8\uff1a\u7aef\u5230\u7aef\u5ef6\u8fdf\u4f18\u5316</strong>\n\u4e00\u4e2a LLM \u670d\u52a1\u7684 P99 \u5ef6\u8fdf\u4e3a 5 \u79d2\uff0c\u5206\u6790\u5e76\u4f18\u5316\u5230 2 \u79d2\u4ee5\u5185\u3002\u7ed9\u51fa\u8be6\u7ec6\u7684\u5206\u6790\u65b9\u6cd5\u548c\u4f18\u5316\u65b9\u6848\u3002</p>\n<details>\n<summary>Hint</summary>\n<p>\u4f7f\u7528\u706b\u7130\u56fe\u5206\u6790\u3001\u5206\u9636\u6bb5\u4f18\u5316\u3001\u5173\u6ce8\u957f\u5c3e\u5ef6\u8fdf\u7684\u7279\u6b8a\u539f\u56e0\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u7aef\u5230\u7aef\u5ef6\u8fdf\u4f18\u5316\u65b9\u6848\uff1a</p>\n<p><strong>\u7b2c\u4e00\u6b65\uff1a\u5ef6\u8fdf\u5206\u89e3\u5206\u6790</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">LatencyProfiler</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">profile_request</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">timeline</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"c1\"># 1. \u7f51\u7edc\u63a5\u6536</span>\n        <span class=\"n\">t0</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">receive_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"n\">timeline</span><span class=\"p\">[</span><span class=\"s1\">&#39;network_in&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t0</span>\n\n        <span class=\"c1\"># 2. \u8ba4\u8bc1\u6388\u6743</span>\n        <span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"n\">auth</span> <span class=\"o\">=</span> <span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n        <span class=\"n\">timeline</span><span class=\"p\">[</span><span class=\"s1\">&#39;auth&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t1</span>\n\n        <span class=\"c1\"># 3. \u9884\u5904\u7406</span>\n        <span class=\"n\">t2</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"n\">tokenize</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n        <span class=\"n\">timeline</span><span class=\"p\">[</span><span class=\"s1\">&#39;tokenization&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t2</span>\n\n        <span class=\"c1\"># 4. \u961f\u5217\u7b49\u5f85</span>\n        <span class=\"n\">t3</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"n\">batch</span> <span class=\"o\">=</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">wait_for_batch</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">)</span>\n        <span class=\"n\">timeline</span><span class=\"p\">[</span><span class=\"s1\">&#39;queue_wait&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t3</span>\n\n        <span class=\"c1\"># 5. \u6a21\u578b\u63a8\u7406</span>\n        <span class=\"n\">t4</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n        <span class=\"n\">timeline</span><span class=\"p\">[</span><span class=\"s1\">&#39;inference&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t4</span>\n\n        <span class=\"c1\"># 6. \u540e\u5904\u7406</span>\n        <span class=\"n\">t5</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">postprocess</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">)</span>\n        <span class=\"n\">timeline</span><span class=\"p\">[</span><span class=\"s1\">&#39;postprocess&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t5</span>\n\n        <span class=\"c1\"># 7. \u7f51\u7edc\u53d1\u9001</span>\n        <span class=\"n\">t6</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"n\">send_response</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n        <span class=\"n\">timeline</span><span class=\"p\">[</span><span class=\"s1\">&#39;network_out&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t6</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">timeline</span>\n\n<span class=\"c1\"># \u5206\u6790 P99 \u5ef6\u8fdf\u7ec4\u6210</span>\n<span class=\"n\">p99_breakdown</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;network_in&#39;</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span>      <span class=\"c1\"># ms</span>\n    <span class=\"s1\">&#39;auth&#39;</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span>           <span class=\"c1\"># ms</span>\n    <span class=\"s1\">&#39;tokenization&#39;</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span>  <span class=\"c1\"># ms</span>\n    <span class=\"s1\">&#39;queue_wait&#39;</span><span class=\"p\">:</span> <span class=\"mi\">500</span><span class=\"p\">,</span>    <span class=\"c1\"># ms (!)</span>\n    <span class=\"s1\">&#39;inference&#39;</span><span class=\"p\">:</span> <span class=\"mi\">4000</span><span class=\"p\">,</span>    <span class=\"c1\"># ms (!)</span>\n    <span class=\"s1\">&#39;postprocess&#39;</span><span class=\"p\">:</span> <span class=\"mi\">80</span><span class=\"p\">,</span>    <span class=\"c1\"># ms</span>\n    <span class=\"s1\">&#39;network_out&#39;</span><span class=\"p\">:</span> <span class=\"mi\">250</span>    <span class=\"c1\"># ms (!)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u7b2c\u4e8c\u6b65\uff1a\u9488\u5bf9\u6027\u4f18\u5316</strong></p>\n<p><strong>\u4f18\u5316 1\uff1a\u63a8\u7406\u52a0\u901f\uff084000ms \u2192 1500ms\uff09</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Flash Attention \u5b9e\u73b0</span>\n<span class=\"k\">class</span> <span class=\"nc\">FlashAttentionOptimized</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u5206\u5757\u8ba1\u7b97\uff0c\u51cf\u5c11\u5185\u5b58\u8bbf\u95ee</span>\n        <span class=\"n\">BLOCK_SIZE</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>\n\n        <span class=\"c1\"># \u4f7f\u7528 Triton \u6838\u51fd\u6570</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">triton_flash_attn</span><span class=\"p\">(</span>\n            <span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span>\n            <span class=\"n\">causal</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">block_size</span><span class=\"o\">=</span><span class=\"n\">BLOCK_SIZE</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">output</span>\n\n<span class=\"c1\"># KV Cache \u4f18\u5316</span>\n<span class=\"k\">class</span> <span class=\"nc\">OptimizedKVCache</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cache</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gpu_cache</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>  <span class=\"c1\"># GPU \u5e38\u9a7b</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gpu_cache</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gpu_cache</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>  <span class=\"c1\"># 0 \u62f7\u8d1d</span>\n        <span class=\"k\">elif</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u5f02\u6b65\u4f20\u8f93\u5230 GPU</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gpu_cache</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"p\">(</span><span class=\"n\">non_blocking</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gpu_cache</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n<span class=\"c1\"># \u7b97\u5b50\u878d\u5408</span>\n<span class=\"nd\">@torch</span><span class=\"o\">.</span><span class=\"n\">jit</span><span class=\"o\">.</span><span class=\"n\">script</span>\n<span class=\"k\">def</span> <span class=\"nf\">fused_gelu_linear</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">weight</span><span class=\"p\">,</span> <span class=\"n\">bias</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u878d\u5408 GELU \u6fc0\u6d3b\u548c\u7ebf\u6027\u5c42</span>\n    <span class=\"k\">return</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">linear</span><span class=\"p\">(</span><span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">gelu</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">),</span> <span class=\"n\">weight</span><span class=\"p\">,</span> <span class=\"n\">bias</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u5316 2\uff1a\u961f\u5217\u4f18\u5316\uff08500ms \u2192 100ms\uff09</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">PriorityBatchQueue</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queues</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;high&#39;</span><span class=\"p\">:</span> <span class=\"n\">deque</span><span class=\"p\">(),</span>     <span class=\"c1\"># SLA \u4e25\u683c</span>\n            <span class=\"s1\">&#39;medium&#39;</span><span class=\"p\">:</span> <span class=\"n\">deque</span><span class=\"p\">(),</span>   <span class=\"c1\"># \u666e\u901a\u8bf7\u6c42</span>\n            <span class=\"s1\">&#39;low&#39;</span><span class=\"p\">:</span> <span class=\"n\">deque</span><span class=\"p\">()</span>       <span class=\"c1\"># \u6279\u91cf\u4efb\u52a1</span>\n        <span class=\"p\">}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">continuous_batching</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add_request</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">priority</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_priority</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queues</span><span class=\"p\">[</span><span class=\"n\">priority</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u9ad8\u4f18\u5148\u7ea7\u7acb\u5373\u5904\u7406</span>\n        <span class=\"k\">if</span> <span class=\"n\">priority</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;high&#39;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_immediate_batch</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8fde\u7eed\u6279\u5904\u7406</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">continuous_batching</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_try_merge_batch</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_immediate_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u9ad8\u4f18\u5148\u7ea7\u8bf7\u6c42\u4e0d\u7b49\u5f85</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">request</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_try_merge_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u52a8\u6001\u6279\u5904\u7406\uff0c\u6700\u5927\u7b49\u5f85 100ms</span>\n        <span class=\"n\">deadline</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mf\">0.1</span>\n        <span class=\"n\">batch</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">request</span><span class=\"p\">]</span>\n\n        <span class=\"k\">while</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"n\">deadline</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">32</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queues</span><span class=\"p\">[</span><span class=\"s1\">&#39;medium&#39;</span><span class=\"p\">]:</span>\n                <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queues</span><span class=\"p\">[</span><span class=\"s1\">&#39;medium&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">popleft</span><span class=\"p\">())</span>\n            <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queues</span><span class=\"p\">[</span><span class=\"s1\">&#39;low&#39;</span><span class=\"p\">]:</span>\n                <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queues</span><span class=\"p\">[</span><span class=\"s1\">&#39;low&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">popleft</span><span class=\"p\">())</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">break</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">batch</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u5316 3\uff1a\u7f51\u7edc\u4f18\u5316\uff08250ms \u2192 50ms\uff09</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># HTTP/2 \u670d\u52a1\u5668\u63a8\u9001</span>\n<span class=\"k\">class</span> <span class=\"nc\">HTTP2Streaming</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stream_response</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tokens</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u670d\u52a1\u5668\u63a8\u9001\uff0c\u9010 token \u53d1\u9001</span>\n        <span class=\"k\">for</span> <span class=\"n\">token</span> <span class=\"ow\">in</span> <span class=\"n\">tokens</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">push_frame</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># \u96f6\u62f7\u8d1d\u53d1\u9001</span>\n<span class=\"k\">class</span> <span class=\"nc\">ZeroCopySender</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u4f7f\u7528 sendfile \u7cfb\u7edf\u8c03\u7528</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">sendfile</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">fileno</span><span class=\"p\">(),</span>\n            <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">fileno</span><span class=\"p\">(),</span>\n            <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n<span class=\"c1\"># \u538b\u7f29\u4f20\u8f93</span>\n<span class=\"k\">class</span> <span class=\"nc\">CompressionMiddleware</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">compress_response</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1024</span><span class=\"p\">:</span>  <span class=\"c1\"># 1KB \u4ee5\u4e0a\u624d\u538b\u7f29</span>\n            <span class=\"k\">return</span> <span class=\"n\">gzip</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">compresslevel</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># \u5feb\u901f\u538b\u7f29</span>\n        <span class=\"k\">return</span> <span class=\"n\">response</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u5316 4\uff1a\u957f\u5c3e\u5ef6\u8fdf\u4e13\u9879\u4f18\u5316</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">TailLatencyOptimizer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gc_controller</span> <span class=\"o\">=</span> <span class=\"n\">GCController</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">memory_pool</span> <span class=\"o\">=</span> <span class=\"n\">MemoryPool</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">optimize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 1. GC \u8c03\u4f18</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gc_controller</span><span class=\"o\">.</span><span class=\"n\">set_gc_threshold</span><span class=\"p\">(</span>\n            <span class=\"n\">threshold0</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">,</span>  <span class=\"c1\"># \u5ef6\u8fdf GC</span>\n            <span class=\"n\">threshold1</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n            <span class=\"n\">threshold2</span><span class=\"o\">=</span><span class=\"mi\">20</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. \u5185\u5b58\u6c60\u5316</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">memory_pool</span><span class=\"o\">.</span><span class=\"n\">preallocate</span><span class=\"p\">(</span>\n            <span class=\"n\">tensor_sizes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">2048</span><span class=\"p\">,</span> <span class=\"mi\">4096</span><span class=\"p\">],</span>\n            <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">100</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. CPU \u4eb2\u548c\u6027</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">sched_setaffinity</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">})</span>  <span class=\"c1\"># \u7ed1\u5b9a CPU \u6838\u5fc3</span>\n\n        <span class=\"c1\"># 4. \u9884\u70ed</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_warmup_model</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_warmup_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># JIT \u7f16\u8bd1\u9884\u70ed</span>\n        <span class=\"n\">dummy_input</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">512</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">dummy_input</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u5316 5\uff1a\u81ea\u9002\u5e94\u964d\u7ea7</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">AdaptiveDegradation</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">process</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">current_latency</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">get_current_p99</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">current_latency</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3000</span><span class=\"p\">:</span>  <span class=\"c1\"># \u4e25\u91cd\u5ef6\u8fdf</span>\n            <span class=\"c1\"># \u964d\u7ea7\u5230\u5c0f\u6a21\u578b</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">small_model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span>\n                <span class=\"n\">request</span><span class=\"p\">,</span>\n                <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">max_length</span><span class=\"p\">,</span> <span class=\"mi\">256</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">current_latency</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2000</span><span class=\"p\">:</span>  <span class=\"c1\"># \u4e2d\u5ea6\u5ef6\u8fdf</span>\n            <span class=\"c1\"># \u51cf\u5c11\u751f\u6210\u957f\u5ea6</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span>\n                <span class=\"n\">request</span><span class=\"p\">,</span>\n                <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">max_length</span><span class=\"p\">,</span> <span class=\"mi\">512</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6b63\u5e38\u5904\u7406</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u6700\u7ec8\u6548\u679c</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u539f\u59cb P99: 5000ms\n\u4f18\u5316\u540e P99: 1850ms\n\n\u5206\u89e3\uff1a\n\n- \u7f51\u7edc\u63a5\u6536: 50ms\n- \u8ba4\u8bc1: 20ms\n- Tokenization: 100ms\n- \u961f\u5217: 100ms (\u4f18\u5316 400ms)\n- \u63a8\u7406: 1500ms (\u4f18\u5316 2500ms)\n- \u540e\u5904\u7406: 80ms\n- \u7f51\u7edc\u53d1\u9001: 50ms (\u4f18\u5316 200ms)\n\n\u603b\u8ba1: 1900ms\uff08\u8fbe\u6807\uff09\n</code></pre></div>\n\n<p><strong>\u76d1\u63a7\u9a8c\u8bc1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># A/B \u6d4b\u8bd5\u9a8c\u8bc1</span>\n<span class=\"n\">ab_test</span> <span class=\"o\">=</span> <span class=\"n\">ABTest</span><span class=\"p\">(</span>\n    <span class=\"n\">control</span><span class=\"o\">=</span><span class=\"s1\">&#39;original&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">treatment</span><span class=\"o\">=</span><span class=\"s1\">&#39;optimized&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;p50&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;p95&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;p99&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;error_rate&#39;</span><span class=\"p\">],</span>\n    <span class=\"n\">duration_hours</span><span class=\"o\">=</span><span class=\"mi\">24</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">ab_test</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">&#39;treatment&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;p99&#39;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2000</span>\n<span class=\"k\">assert</span> <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">&#39;treatment&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;error_rate&#39;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.001</span>\n</code></pre></div>\n\n</details>\n<hr />\n<p><strong>\u4e0b\u4e00\u7ae0</strong>\uff1a<a href=\"chapter10.md\">\u7b2c\u5341\u7ae0\uff1a\u6848\u4f8b\u7814\u7a76\u4e0e\u6700\u4f73\u5b9e\u8df5 \u2192</a></p>"
  },
  "index.md": {
    "hash": "23add416e1495bb6a880f27d5317962d",
    "content": "<h1 id=\"llm\">LLM \u540e\u8bad\u7ec3\u5b9e\u9a8c\u8bbe\u8ba1\u6307\u5357</h1>\n<h2 id=\"_1\">\u5173\u4e8e\u672c\u6559\u7a0b</h2>\n<p>\u672c\u6559\u7a0b\u9762\u5411\u7ecf\u9a8c\u4e30\u5bcc\u7684\u5de5\u7a0b\u5e08\u548c AI \u79d1\u5b66\u5bb6\uff0c\u7cfb\u7edf\u4ecb\u7ecd\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u540e\u8bad\u7ec3\u7684\u5b9e\u9a8c\u8bbe\u8ba1\u65b9\u6cd5\u8bba\u3002\u6db5\u76d6\u4ece\u57fa\u7840\u7406\u8bba\u5230\u751f\u4ea7\u5b9e\u8df5\u7684\u5b8c\u6574\u6d41\u7a0b\uff0c\u5305\u62ec\u7eaf\u8bed\u8a00\u4efb\u52a1\u3001\u591a\u6a21\u6001\u4efb\u52a1\u3001\u5f3a\u5316\u5b66\u4e60\u4ee5\u53ca\u5b9e\u9a8c\u4ee3\u7801\u7ba1\u7406\u7b49\u6838\u5fc3\u4e3b\u9898\u3002</p>\n<h3 id=\"_2\">\u5b66\u4e60\u76ee\u6807</h3>\n<p>\u5b8c\u6210\u672c\u6559\u7a0b\u540e\uff0c\u60a8\u5c06\u638c\u63e1\uff1a</p>\n<ul>\n<li>\u8bbe\u8ba1\u548c\u7ba1\u7406\u5927\u89c4\u6a21 LLM \u540e\u8bad\u7ec3\u5b9e\u9a8c\u7684\u7cfb\u7edf\u65b9\u6cd5</li>\n<li>\u6784\u5efa\u9ad8\u6548\u7684\u6570\u636e\u91c7\u96c6\u3001\u6807\u6ce8\u548c\u8bad\u7ec3\u5faa\u73af</li>\n<li>\u5b9e\u73b0\u591a\u6a21\u6001\u6a21\u578b\u7684\u5bf9\u9f50\u548c\u4f18\u5316</li>\n<li>\u5e94\u7528 RLHF/RLAIF \u7b49\u4eba\u7c7b\u53cd\u9988\u6280\u672f</li>\n<li>\u5efa\u7acb\u53ef\u590d\u73b0\u3001\u53ef\u6269\u5c55\u7684\u5b9e\u9a8c\u4ee3\u7801\u57fa\u7840\u8bbe\u65bd</li>\n</ul>\n<h3 id=\"_3\">\u5148\u4fee\u77e5\u8bc6</h3>\n<p>\u672c\u6559\u7a0b\u5047\u8bbe\u8bfb\u8005\u5df2\u638c\u63e1\uff1a</p>\n<ul>\n<li>Transformer \u67b6\u6784\u548c\u6ce8\u610f\u529b\u673a\u5236</li>\n<li>\u57fa\u7840\u6df1\u5ea6\u5b66\u4e60\u6982\u5ff5\uff08\u53cd\u5411\u4f20\u64ad\u3001\u4f18\u5316\u5668\u3001\u6b63\u5219\u5316\uff09</li>\n<li>Python \u7f16\u7a0b\u548c PyTorch/JAX \u6846\u67b6</li>\n<li>\u57fa\u672c\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u6982\u5ff5</li>\n</ul>\n<h2 id=\"_4\">\u76ee\u5f55</h2>\n<h3 id=\"_5\"><a href=\"chapter1.md\">\u7b2c\u4e00\u7ae0\uff1a\u540e\u8bad\u7ec3\u57fa\u7840\u7406\u8bba</a></h3>\n<p>\u6df1\u5165\u7406\u89e3\u540e\u8bad\u7ec3\u7684\u6838\u5fc3\u6982\u5ff5\u3001\u76ee\u6807\u548c\u6311\u6218\u3002\u5305\u62ec SFT\u3001RLHF\u3001DPO \u7b49\u65b9\u6cd5\u7684\u7406\u8bba\u57fa\u7840\uff0c\u4ee5\u53ca\u4e0e\u9884\u8bad\u7ec3\u7684\u672c\u8d28\u533a\u522b\u3002</p>\n<p><strong>\u5173\u952e\u4e3b\u9898</strong>\uff1a</p>\n<ul>\n<li>\u540e\u8bad\u7ec3\u7684\u76ee\u6807\u51fd\u6570\u8bbe\u8ba1</li>\n<li>\u5bf9\u9f50\u7a0e\uff08Alignment Tax\uff09\u4e0e\u80fd\u529b\u6743\u8861</li>\n<li>\u6307\u4ee4\u8ddf\u968f\u4e0e\u5b89\u5168\u6027\u5e73\u8861</li>\n<li>\u5206\u5e03\u504f\u79fb\u95ee\u9898</li>\n</ul>\n<h3 id=\"_6\"><a href=\"chapter2.md\">\u7b2c\u4e8c\u7ae0\uff1a\u5b9e\u9a8c\u4ee3\u7801\u57fa\u7840\u8bbe\u65bd</a></h3>\n<p>\u6784\u5efa\u53ef\u7ef4\u62a4\u3001\u53ef\u6269\u5c55\u7684\u5b9e\u9a8c\u4ee3\u7801\u67b6\u6784\u3002\u91cd\u70b9\u89e3\u51b3\u5b9e\u9a8c\u7ba1\u7406\u7684\u5b9e\u9645\u6311\u6218\u3002</p>\n<p><strong>\u5173\u952e\u4e3b\u9898</strong>\uff1a</p>\n<ul>\n<li>\u5b9e\u9a8c\u914d\u7f6e\u7ba1\u7406\uff08YAML vs TOML vs Python\uff09</li>\n<li>Flag\u3001\u73af\u5883\u53d8\u91cf\u3001Git \u5206\u652f\u7684\u4f7f\u7528\u573a\u666f</li>\n<li>\u5b9e\u9a8c\u8ffd\u8e2a\u4e0e\u7248\u672c\u63a7\u5236\u7b56\u7565</li>\n<li>\u9632\u6b62\u4ee3\u7801\u8150\u5316\u7684\u6700\u4f73\u5b9e\u8df5</li>\n</ul>\n<h3 id=\"_7\"><a href=\"chapter3.md\">\u7b2c\u4e09\u7ae0\uff1a\u6570\u636e\u5de5\u7a0b</a></h3>\n<p>\u540e\u8bad\u7ec3\u6570\u636e\u7684\u91c7\u96c6\u3001\u6807\u6ce8\u3001\u6e05\u6d17\u548c\u7ba1\u7406\u5168\u6d41\u7a0b\u3002</p>\n<p><strong>\u5173\u952e\u4e3b\u9898</strong>\uff1a</p>\n<ul>\n<li>\u9ad8\u8d28\u91cf\u6307\u4ee4\u6570\u636e\u7684\u6784\u9020\u65b9\u6cd5</li>\n<li>\u6807\u6ce8\u89c4\u8303\u8bbe\u8ba1\u4e0e\u8d28\u91cf\u63a7\u5236</li>\n<li>\u6570\u636e\u98de\u8f6e\uff08Data Flywheel\uff09\u642d\u5efa</li>\n<li>\u5408\u6210\u6570\u636e\u751f\u6210\u7b56\u7565</li>\n<li>\u6570\u636e\u914d\u6bd4\u4e0e\u8bfe\u7a0b\u5b66\u4e60</li>\n</ul>\n<h3 id=\"_8\"><a href=\"chapter4.md\">\u7b2c\u56db\u7ae0\uff1a\u7eaf\u8bed\u8a00\u4efb\u52a1\u5b9e\u9a8c\u8bbe\u8ba1</a></h3>\n<p>\u9488\u5bf9\u6587\u672c\u751f\u6210\u3001\u7406\u89e3\u548c\u63a8\u7406\u4efb\u52a1\u7684\u5b9e\u9a8c\u65b9\u6cd5\u3002</p>\n<p><strong>\u5173\u952e\u4e3b\u9898</strong>\uff1a</p>\n<ul>\n<li>\u591a\u8f6e\u5bf9\u8bdd\u7684\u610f\u56fe\u8bc6\u522b\u4e0e\u72b6\u6001\u7ba1\u7406</li>\n<li>\u957f\u6587\u672c\u5904\u7406\u4e0e\u4f4d\u7f6e\u7f16\u7801\u4f18\u5316</li>\n<li>\u601d\u7ef4\u94fe\uff08CoT\uff09\u8bad\u7ec3\u7b56\u7565</li>\n<li>\u9886\u57df\u9002\u5e94\u4e0e\u6301\u7eed\u5b66\u4e60</li>\n<li>\u5e7b\u89c9\u68c0\u6d4b\u4e0e\u7f13\u89e3</li>\n</ul>\n<h3 id=\"_9\"><a href=\"chapter5.md\">\u7b2c\u4e94\u7ae0\uff1a\u591a\u6a21\u6001\u4efb\u52a1\u5b9e\u9a8c\u8bbe\u8ba1</a></h3>\n<p>\u89c6\u89c9\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49\u591a\u6a21\u6001\u878d\u5408\u7684\u8bad\u7ec3\u65b9\u6cd5\u3002</p>\n<p><strong>\u5173\u952e\u4e3b\u9898</strong>\uff1a</p>\n<ul>\n<li>\u89c6\u89c9-\u8bed\u8a00\u5bf9\u9f50\uff08CLIP\u3001ALIGN\u3001FLIP\uff09</li>\n<li>\u56fe\u50cf\u7406\u89e3\u4e0e\u751f\u6210\u7684\u7edf\u4e00\u5efa\u6a21</li>\n<li>\u97f3\u9891\u6a21\u6001\u96c6\u6210\uff08\u8bed\u97f3\u8bc6\u522b\u3001\u97f3\u4e50\u7406\u89e3\uff09</li>\n<li>\u89c6\u9891\u7406\u89e3\u7684\u65f6\u5e8f\u5efa\u6a21</li>\n<li>\u8de8\u6a21\u6001\u6ce8\u610f\u529b\u673a\u5236\u8bbe\u8ba1</li>\n</ul>\n<h3 id=\"_10\"><a href=\"chapter6.md\">\u7b2c\u516d\u7ae0\uff1a\u5f3a\u5316\u5b66\u4e60\u4e0e\u4eba\u7c7b\u53cd\u9988</a></h3>\n<p>RLHF\u3001DPO\u3001PPO \u7b49\u57fa\u4e8e\u53cd\u9988\u7684\u4f18\u5316\u65b9\u6cd5\u3002</p>\n<p><strong>\u5173\u952e\u4e3b\u9898</strong>\uff1a</p>\n<ul>\n<li>\u5956\u52b1\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u6821\u51c6</li>\n<li>PPO \u5728 LLM \u4e2d\u7684\u5b9e\u73b0\u7ec6\u8282</li>\n<li>DPO \u4e0e IPO \u7684\u6bd4\u8f83\u5206\u6790</li>\n<li>Constitutional AI \u4e0e\u81ea\u6211\u6539\u8fdb</li>\n<li>\u5728\u7ebf\u4e0e\u79bb\u7ebf RL \u7684\u6743\u8861</li>\n</ul>\n<h3 id=\"_11\"><a href=\"chapter7.md\">\u7b2c\u4e03\u7ae0\uff1a\u8bad\u7ec3\u5faa\u73af\u4e0e\u8fed\u4ee3\u4f18\u5316</a></h3>\n<p>\u7aef\u5230\u7aef\u7684\u8bad\u7ec3\u6d41\u7a0b\u8bbe\u8ba1\u4e0e\u4f18\u5316\u7b56\u7565\u3002</p>\n<p><strong>\u5173\u952e\u4e3b\u9898</strong>\uff1a</p>\n<ul>\n<li>\u6570\u636e-\u6807\u6ce8-\u8bad\u7ec3-\u8bc4\u4f30\u5faa\u73af\u8bbe\u8ba1</li>\n<li>\u4e3b\u52a8\u5b66\u4e60\u4e0e\u6570\u636e\u9009\u62e9\u7b56\u7565</li>\n<li>\u6a21\u578b\u5408\u5e76\u4e0e\u96c6\u6210\u5b66\u4e60</li>\n<li>\u8d85\u53c2\u6570\u641c\u7d22\u7684\u5b9e\u7528\u6280\u5de7</li>\n<li>\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684\u5de5\u7a0b\u4f18\u5316</li>\n</ul>\n<h3 id=\"_12\"><a href=\"chapter8.md\">\u7b2c\u516b\u7ae0\uff1a\u8bc4\u4f30\u4e0e\u57fa\u51c6\u6d4b\u8bd5</a></h3>\n<p>\u5168\u9762\u7684\u6a21\u578b\u8bc4\u4f30\u4f53\u7cfb\u6784\u5efa\u3002</p>\n<p><strong>\u5173\u952e\u4e3b\u9898</strong>\uff1a</p>\n<ul>\n<li>\u81ea\u52a8\u8bc4\u4f30\u6307\u6807\u8bbe\u8ba1</li>\n<li>\u4eba\u5de5\u8bc4\u4f30\u7684\u7ec4\u7ec7\u4e0e\u504f\u5dee\u63a7\u5236</li>\n<li>A/B \u6d4b\u8bd5\u4e0e\u5728\u7ebf\u5b9e\u9a8c</li>\n<li>\u57fa\u51c6\u6d4b\u8bd5\u96c6\u7684\u6784\u5efa\u539f\u5219</li>\n<li>\u8bc4\u4f30\u6570\u636e\u6cc4\u9732\u7684\u68c0\u6d4b\u4e0e\u9884\u9632</li>\n</ul>\n<h3 id=\"_13\"><a href=\"chapter9.md\">\u7b2c\u4e5d\u7ae0\uff1a\u751f\u4ea7\u90e8\u7f72\u4e0e\u76d1\u63a7</a></h3>\n<p>\u4ece\u5b9e\u9a8c\u5230\u751f\u4ea7\u7684\u5b8c\u6574\u8def\u5f84\u3002</p>\n<p><strong>\u5173\u952e\u4e3b\u9898</strong>\uff1a</p>\n<ul>\n<li>\u6a21\u578b\u538b\u7f29\u4e0e\u52a0\u901f\u6280\u672f</li>\n<li>\u670d\u52a1\u5316\u67b6\u6784\u8bbe\u8ba1</li>\n<li>\u5b9e\u65f6\u76d1\u63a7\u4e0e\u544a\u8b66\u7cfb\u7edf</li>\n<li>\u6a21\u578b\u6f02\u79fb\u68c0\u6d4b</li>\n<li>\u56de\u6eda\u4e0e\u7070\u5ea6\u53d1\u5e03\u7b56\u7565</li>\n</ul>\n<h3 id=\"_14\"><a href=\"chapter10.md\">\u7b2c\u5341\u7ae0\uff1a\u6848\u4f8b\u7814\u7a76\u4e0e\u6700\u4f73\u5b9e\u8df5</a></h3>\n<p>\u771f\u5b9e\u573a\u666f\u7684\u7aef\u5230\u7aef\u5b9e\u8df5\u6848\u4f8b\u3002</p>\n<p><strong>\u5173\u952e\u4e3b\u9898</strong>\uff1a</p>\n<ul>\n<li>ChatGPT \u7c7b\u5bf9\u8bdd\u7cfb\u7edf\u7684\u5b8c\u6574\u5b9e\u73b0</li>\n<li>\u591a\u6a21\u6001\u52a9\u624b\u7684\u8bad\u7ec3\u6d41\u7a0b</li>\n<li>\u9886\u57df\u4e13\u5bb6\u6a21\u578b\u7684\u6784\u5efa</li>\n<li>\u5e38\u89c1\u5931\u8d25\u6a21\u5f0f\u4e0e\u8c03\u8bd5\u6280\u5de7</li>\n</ul>\n<h2 id=\"_15\">\u4f7f\u7528\u6307\u5357</h2>\n<h3 id=\"_16\">\u7ec3\u4e60\u9898\u8bf4\u660e</h3>\n<p>\u6bcf\u7ae0\u5305\u542b 6-8 \u9053\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u7ec3\u4e60\u9898\uff1a</p>\n<ul>\n<li><strong>\u57fa\u7840\u9898</strong>\uff0850%\uff09\uff1a\u5de9\u56fa\u6838\u5fc3\u6982\u5ff5\uff0c\u9a8c\u8bc1\u7406\u89e3</li>\n<li><strong>\u6311\u6218\u9898</strong>\uff0850%\uff09\uff1a\u5f00\u653e\u6027\u601d\u8003\uff0c\u63a2\u7d22\u524d\u6cbf\u95ee\u9898</li>\n<li>\u6240\u6709\u9898\u76ee\u63d0\u4f9b\u63d0\u793a\uff08Hint\uff09\u5f15\u5bfc\u601d\u8003\u65b9\u5411</li>\n<li>\u53c2\u8003\u7b54\u6848\u9ed8\u8ba4\u6298\u53e0\uff0c\u9f13\u52b1\u72ec\u7acb\u601d\u8003</li>\n</ul>\n<h3 id=\"_17\">\u5b66\u4e60\u5efa\u8bae</h3>\n<ol>\n<li><strong>\u5faa\u5e8f\u6e10\u8fdb</strong>\uff1a\u5efa\u8bae\u6309\u7ae0\u8282\u987a\u5e8f\u5b66\u4e60\uff0c\u6bcf\u7ae0\u6982\u5ff5\u76f8\u4e92\u5173\u8054</li>\n<li><strong>\u52a8\u624b\u5b9e\u8df5</strong>\uff1a\u5b8c\u6210\u6bcf\u7ae0\u7ec3\u4e60\u9898\uff0c\u52a0\u6df1\u7406\u89e3</li>\n<li><strong>\u8bb0\u5f55\u7b14\u8bb0</strong>\uff1a\u603b\u7ed3\u6bcf\u7ae0\u7684\u5173\u952e Rule-of-Thumb</li>\n<li><strong>\u53c2\u4e0e\u8ba8\u8bba</strong>\uff1a\u4e0e\u540c\u884c\u4ea4\u6d41\u5b9e\u9a8c\u7ecf\u9a8c\u548c\u8e29\u5751\u5fc3\u5f97</li>\n</ol>\n<h3 id=\"_18\">\u7b26\u53f7\u7ea6\u5b9a</h3>\n<ul>\n<li>\ud83d\udccc <strong>\u91cd\u8981\u6982\u5ff5</strong>\uff1a\u9700\u8981\u91cd\u70b9\u638c\u63e1\u7684\u6838\u5fc3\u77e5\u8bc6</li>\n<li>\u26a0\ufe0f <strong>\u5e38\u89c1\u9677\u9631</strong>\uff1a\u5bb9\u6613\u51fa\u9519\u7684\u5730\u65b9</li>\n<li>\ud83d\udca1 <strong>\u5b9e\u7528\u6280\u5de7</strong>\uff1a\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u6700\u4f73\u5b9e\u8df5</li>\n<li>\ud83d\udd2c <strong>\u6df1\u5165\u63a2\u7d22</strong>\uff1a\u53ef\u9009\u7684\u8fdb\u9636\u5185\u5bb9</li>\n</ul>\n<h2 id=\"_19\">\u7248\u672c\u4fe1\u606f</h2>\n<ul>\n<li><strong>\u7248\u672c</strong>\uff1a1.0.0</li>\n<li><strong>\u6700\u540e\u66f4\u65b0</strong>\uff1a2025\u5e741\u6708</li>\n<li><strong>\u4f5c\u8005\u56e2\u961f</strong>\uff1aLLM \u540e\u8bad\u7ec3\u7814\u7a76\u7ec4</li>\n</ul>\n<h2 id=\"_20\">\u53cd\u9988\u4e0e\u8d21\u732e</h2>\n<p>\u6b22\u8fce\u63d0\u51fa\u6539\u8fdb\u5efa\u8bae\u548c\u7ea0\u9519\u3002\u672c\u6559\u7a0b\u5c06\u6301\u7eed\u66f4\u65b0\uff0c\u878d\u5165\u6700\u65b0\u7684\u7814\u7a76\u8fdb\u5c55\u548c\u5de5\u7a0b\u5b9e\u8df5\u3002</p>\n<hr />\n<p><strong>\u5f00\u59cb\u5b66\u4e60</strong>\uff1a<a href=\"chapter1.md\">\u7b2c\u4e00\u7ae0\uff1a\u540e\u8bad\u7ec3\u57fa\u7840\u7406\u8bba \u2192</a></p>"
  },
  "chapter8.md": {
    "hash": "833681574b157d64049aedb0b6481564",
    "content": "<h1 id=\"_1\">\u7b2c\u516b\u7ae0\uff1a\u8bc4\u4f30\u4e0e\u57fa\u51c6\u6d4b\u8bd5</h1>\n<p>\u6784\u5efa\u5168\u9762\u3001\u53ef\u9760\u7684\u8bc4\u4f30\u4f53\u7cfb\u662f LLM \u540e\u8bad\u7ec3\u6210\u529f\u7684\u5173\u952e\u3002\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u5982\u4f55\u8bbe\u8ba1\u81ea\u52a8\u8bc4\u4f30\u6307\u6807\u3001\u7ec4\u7ec7\u4eba\u5de5\u8bc4\u4f30\u3001\u5b9e\u65bd\u5728\u7ebf\u5b9e\u9a8c\uff0c\u4ee5\u53ca\u6784\u5efa\u9ad8\u8d28\u91cf\u7684\u57fa\u51c6\u6d4b\u8bd5\u96c6\u3002\u6211\u4eec\u5c06\u91cd\u70b9\u5173\u6ce8\u8bc4\u4f30\u7684\u53ef\u9760\u6027\u3001\u6548\u7387\u548c\u9632\u6b62\u6570\u636e\u6cc4\u9732\u7b49\u5b9e\u9645\u6311\u6218\u3002</p>\n<h2 id=\"81\">8.1 \u81ea\u52a8\u8bc4\u4f30\u6307\u6807\u8bbe\u8ba1</h2>\n<h3 id=\"811\">8.1.1 \u8bc4\u4f30\u6307\u6807\u5206\u7c7b\u4f53\u7cfb</h3>\n<p>LLM \u7684\u81ea\u52a8\u8bc4\u4f30\u6307\u6807\u53ef\u5206\u4e3a\u56db\u4e2a\u5c42\u6b21\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                  \u8bc4\u4f30\u6307\u6807\u4f53\u7cfb                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                                   \u2502\n\u2502  1. \u8868\u9762\u6307\u6807 (Surface Metrics)                    \u2502\n\u2502     \u251c\u2500\u2500 BLEU, ROUGE, METEOR                      \u2502\n\u2502     \u2514\u2500\u2500 \u56f0\u60d1\u5ea6 (Perplexity)                       \u2502\n\u2502                                                   \u2502\n\u2502  2. \u8bed\u4e49\u6307\u6807 (Semantic Metrics)                   \u2502\n\u2502     \u251c\u2500\u2500 BERTScore, BLEURT                        \u2502\n\u2502     \u2514\u2500\u2500 \u8bed\u4e49\u76f8\u4f3c\u5ea6 (Cosine Similarity)            \u2502\n\u2502                                                   \u2502\n\u2502  3. \u4efb\u52a1\u6307\u6807 (Task-specific Metrics)              \u2502\n\u2502     \u251c\u2500\u2500 \u51c6\u786e\u7387\u3001\u53ec\u56de\u7387\u3001F1                         \u2502\n\u2502     \u2514\u2500\u2500 \u9886\u57df\u7279\u5b9a\u6307\u6807                              \u2502\n\u2502                                                   \u2502\n\u2502  4. \u6a21\u578b\u8bc4\u4f30 (Model-based Evaluation)             \u2502\n\u2502     \u251c\u2500\u2500 GPT-4 \u8bc4\u5206                               \u2502\n\u2502     \u2514\u2500\u2500 \u5956\u52b1\u6a21\u578b\u8bc4\u5206                              \u2502\n\u2502                                                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<h3 id=\"812\">8.1.2 \u7ec4\u5408\u6307\u6807\u8bbe\u8ba1</h3>\n<p>\u5355\u4e00\u6307\u6807\u5f80\u5f80\u65e0\u6cd5\u5168\u9762\u53cd\u6620\u6a21\u578b\u6027\u80fd\uff0c\u9700\u8981\u8bbe\u8ba1\u7ec4\u5408\u6307\u6807\uff1a</p>\n<p>$$\\text{Score}_{\\text{composite}} = \\sum_{i=1}^{n} w_i \\cdot \\text{normalize}(m_i)$$\n\u5176\u4e2d $w_i$ \u662f\u6743\u91cd\uff0c$m_i$ \u662f\u7b2c $i$ \u4e2a\u6307\u6807\uff0cnormalize \u51fd\u6570\u5c06\u4e0d\u540c\u91cf\u7eb2\u7684\u6307\u6807\u5f52\u4e00\u5316\u3002</p>\n<p><strong>\u6743\u91cd\u8bbe\u8ba1\u539f\u5219</strong>\uff1a</p>\n<ol>\n<li><strong>\u4e1a\u52a1\u5bfc\u5411</strong>\uff1a\u6839\u636e\u5b9e\u9645\u5e94\u7528\u573a\u666f\u8c03\u6574\u6743\u91cd</li>\n<li><strong>\u52a8\u6001\u8c03\u6574</strong>\uff1a\u968f\u6a21\u578b\u80fd\u529b\u63d0\u5347\u8c03\u6574\u6743\u91cd\u5206\u914d</li>\n<li><strong>\u654f\u611f\u6027\u5206\u6790</strong>\uff1a\u9a8c\u8bc1\u6743\u91cd\u53d8\u5316\u5bf9\u6700\u7ec8\u6392\u5e8f\u7684\u5f71\u54cd</li>\n</ol>\n<h3 id=\"813\">8.1.3 \u6307\u6807\u53ef\u9760\u6027\u9a8c\u8bc1</h3>\n<p>\u8bc4\u4f30\u6307\u6807\u672c\u8eab\u9700\u8981\u9a8c\u8bc1\u5176\u53ef\u9760\u6027\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u4f2a\u4ee3\u7801\uff1a\u6307\u6807\u53ef\u9760\u6027\u9a8c\u8bc1\u6846\u67b6</span>\n<span class=\"k\">def</span> <span class=\"nf\">validate_metric</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"n\">test_cases</span><span class=\"p\">):</span>\n    <span class=\"c1\"># 1. \u4e00\u81f4\u6027\u68c0\u9a8c</span>\n    <span class=\"n\">consistency_score</span> <span class=\"o\">=</span> <span class=\"n\">check_consistency</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"n\">test_cases</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># 2. \u533a\u5206\u5ea6\u68c0\u9a8c</span>\n    <span class=\"n\">discrimination_score</span> <span class=\"o\">=</span> <span class=\"n\">check_discrimination</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"n\">test_cases</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># 3. \u4e0e\u4eba\u5de5\u8bc4\u5206\u76f8\u5173\u6027</span>\n    <span class=\"n\">human_correlation</span> <span class=\"o\">=</span> <span class=\"n\">compute_correlation</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"n\">human_scores</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># 4. \u7a33\u5b9a\u6027\u68c0\u9a8c\uff08\u591a\u6b21\u8fd0\u884c\uff09</span>\n    <span class=\"n\">stability_score</span> <span class=\"o\">=</span> <span class=\"n\">check_stability</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"n\">test_cases</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;consistency&#39;</span><span class=\"p\">:</span> <span class=\"n\">consistency_score</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;discrimination&#39;</span><span class=\"p\">:</span> <span class=\"n\">discrimination_score</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;human_correlation&#39;</span><span class=\"p\">:</span> <span class=\"n\">human_correlation</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;stability&#39;</span><span class=\"p\">:</span> <span class=\"n\">stability_score</span>\n    <span class=\"p\">}</span>\n</code></pre></div>\n\n<h3 id=\"814-llm-as-judge\">8.1.4 LLM-as-Judge \u65b9\u6cd5</h3>\n<p>\u4f7f\u7528\u5f3a\u5927\u7684 LLM \u4f5c\u4e3a\u8bc4\u5224\u8005\u5df2\u6210\u4e3a\u4e3b\u6d41\u65b9\u6cd5\uff1a</p>\n<p><strong>\u4f18\u52bf</strong>\uff1a</p>\n<ul>\n<li>\u80fd\u7406\u89e3\u590d\u6742\u7684\u8bed\u4e49\u548c\u4e0a\u4e0b\u6587</li>\n<li>\u53ef\u4ee5\u63d0\u4f9b\u8be6\u7ec6\u7684\u8bc4\u5206\u7406\u7531</li>\n<li>\u6613\u4e8e\u6269\u5c55\u5230\u65b0\u4efb\u52a1</li>\n</ul>\n<p><strong>\u6311\u6218\u4e0e\u89e3\u51b3\u65b9\u6848</strong>\uff1a</p>\n<ol>\n<li><strong>\u4f4d\u7f6e\u504f\u5dee</strong>\uff1a\u968f\u673a\u6253\u4e71\u5019\u9009\u7b54\u6848\u987a\u5e8f</li>\n<li><strong>\u957f\u5ea6\u504f\u5dee</strong>\uff1a\u5f52\u4e00\u5316\u6216\u4f7f\u7528\u914d\u5bf9\u6bd4\u8f83</li>\n<li><strong>\u81ea\u6211\u504f\u597d</strong>\uff1a\u4f7f\u7528\u591a\u4e2a\u4e0d\u540c\u6a21\u578b\u4ea4\u53c9\u9a8c\u8bc1</li>\n<li><strong>\u63d0\u793a\u654f\u611f\u6027</strong>\uff1a\u6d4b\u8bd5\u591a\u4e2a\u63d0\u793a\u6a21\u677f</li>\n</ol>\n<p><strong>\u8bc4\u5206\u63d0\u793a\u6a21\u677f\u793a\u4f8b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u8bf7\u8bc4\u4f30\u4ee5\u4e0b\u56de\u7b54\u7684\u8d28\u91cf\uff0c\u8003\u8651\u4ee5\u4e0b\u7ef4\u5ea6\uff1a\n\n1. \u51c6\u786e\u6027\uff080-10\u5206\uff09\uff1a\u4fe1\u606f\u662f\u5426\u6b63\u786e\n2. \u76f8\u5173\u6027\uff080-10\u5206\uff09\uff1a\u662f\u5426\u56de\u7b54\u4e86\u95ee\u9898\n3. \u5b8c\u6574\u6027\uff080-10\u5206\uff09\uff1a\u662f\u5426\u6db5\u76d6\u5173\u952e\u70b9\n4. \u6e05\u6670\u5ea6\uff080-10\u5206\uff09\uff1a\u8868\u8fbe\u662f\u5426\u6e05\u695a\n\n\u95ee\u9898\uff1a{question}\n\u56de\u7b54\uff1a{answer}\n\n\u8bf7\u63d0\u4f9b\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u5206\u6570\u548c\u7b80\u8981\u7406\u7531\u3002\n</code></pre></div>\n\n<h2 id=\"82\">8.2 \u4eba\u5de5\u8bc4\u4f30\u7684\u7ec4\u7ec7\u4e0e\u504f\u5dee\u63a7\u5236</h2>\n<h3 id=\"821\">8.2.1 \u8bc4\u4f30\u4efb\u52a1\u8bbe\u8ba1</h3>\n<p>\u4eba\u5de5\u8bc4\u4f30\u8bbe\u8ba1\u7684\u6838\u5fc3\u8981\u7d20\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         \u4eba\u5de5\u8bc4\u4f30\u4efb\u52a1\u8bbe\u8ba1               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                      \u2502\n\u2502  1. \u8bc4\u4f30\u7c7b\u578b\u9009\u62e9                      \u2502\n\u2502     \u251c\u2500\u2500 \u7edd\u5bf9\u8bc4\u5206 (1-5\u5206)             \u2502\n\u2502     \u251c\u2500\u2500 \u914d\u5bf9\u6bd4\u8f83 (A vs B)            \u2502\n\u2502     \u2514\u2500\u2500 \u6392\u5e8f\u4efb\u52a1 (Ranking)           \u2502\n\u2502                                      \u2502\n\u2502  2. \u8bc4\u4f30\u7ef4\u5ea6\u5b9a\u4e49                      \u2502\n\u2502     \u251c\u2500\u2500 \u5355\u7ef4\u5ea6 vs \u591a\u7ef4\u5ea6              \u2502\n\u2502     \u2514\u2500\u2500 \u6574\u4f53 vs \u7ec6\u7c92\u5ea6                \u2502\n\u2502                                      \u2502\n\u2502  3. \u6807\u6ce8\u754c\u9762\u8bbe\u8ba1                      \u2502\n\u2502     \u251c\u2500\u2500 \u6e05\u6670\u7684\u6307\u4ee4                   \u2502\n\u2502     \u251c\u2500\u2500 \u793a\u4f8b\u8bf4\u660e                     \u2502\n\u2502     \u2514\u2500\u2500 \u5b9e\u65f6\u53cd\u9988\u673a\u5236                 \u2502\n\u2502                                      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<h3 id=\"822\">8.2.2 \u6807\u6ce8\u8005\u7ba1\u7406</h3>\n<p><strong>\u6807\u6ce8\u8005\u9009\u62e9</strong>\uff1a</p>\n<ul>\n<li><strong>\u4e13\u5bb6\u6807\u6ce8</strong>\uff1a\u9886\u57df\u4e13\u5bb6\uff0c\u8d28\u91cf\u9ad8\u4f46\u6210\u672c\u9ad8</li>\n<li><strong>\u4f17\u5305\u6807\u6ce8</strong>\uff1a\u89c4\u6a21\u5927\u4f46\u9700\u8981\u4e25\u683c\u8d28\u63a7</li>\n<li><strong>\u5185\u90e8\u56e2\u961f</strong>\uff1a\u53ef\u63a7\u6027\u5f3a\uff0c\u9002\u5408\u654f\u611f\u6570\u636e</li>\n</ul>\n<p><strong>\u8d28\u91cf\u63a7\u5236\u673a\u5236</strong>\uff1a</p>\n<ol>\n<li><strong>\u9ec4\u91d1\u6807\u51c6\u9898</strong>\uff1a\u63d2\u5165\u5df2\u77e5\u7b54\u6848\u7684\u6d4b\u8bd5\u9898</li>\n<li><strong>\u91cd\u590d\u6807\u6ce8</strong>\uff1a\u8ba1\u7b97\u6807\u6ce8\u8005\u95f4\u4e00\u81f4\u6027\uff08Kappa\u7cfb\u6570\uff09</li>\n<li><strong>\u52a8\u6001\u76d1\u63a7</strong>\uff1a\u5b9e\u65f6\u8ffd\u8e2a\u6807\u6ce8\u8d28\u91cf\u8d8b\u52bf</li>\n<li><strong>\u57f9\u8bad\u4e0e\u53cd\u9988</strong>\uff1a\u5b9a\u671f\u57f9\u8bad\u548c\u4e2a\u6027\u5316\u53cd\u9988</li>\n</ol>\n<h3 id=\"823\">8.2.3 \u504f\u5dee\u8bc6\u522b\u4e0e\u7f13\u89e3</h3>\n<p>\u5e38\u89c1\u7684\u4eba\u5de5\u8bc4\u4f30\u504f\u5dee\uff1a</p>\n<p>| \u504f\u5dee\u7c7b\u578b | \u63cf\u8ff0 | \u7f13\u89e3\u7b56\u7565 |</p>\n<table>\n<thead>\n<tr>\n<th>\u504f\u5dee\u7c7b\u578b</th>\n<th>\u63cf\u8ff0</th>\n<th>\u7f13\u89e3\u7b56\u7565</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u987a\u5e8f\u6548\u5e94</td>\n<td>\u7b2c\u4e00\u4e2a\u6216\u6700\u540e\u4e00\u4e2a\u9009\u9879\u66f4\u5bb9\u6613\u88ab\u9009\u4e2d</td>\n<td>\u968f\u673a\u5316\u5448\u73b0\u987a\u5e8f</td>\n</tr>\n<tr>\n<td>\u951a\u5b9a\u6548\u5e94</td>\n<td>\u53d7\u7b2c\u4e00\u4e2a\u8bc4\u5206\u5f71\u54cd</td>\n<td>\u4f7f\u7528\u914d\u5bf9\u6bd4\u8f83\u4ee3\u66ff\u7edd\u5bf9\u8bc4\u5206</td>\n</tr>\n<tr>\n<td>\u75b2\u52b3\u6548\u5e94</td>\n<td>\u957f\u65f6\u95f4\u6807\u6ce8\u5bfc\u81f4\u8d28\u91cf\u4e0b\u964d</td>\n<td>\u9650\u5236\u5355\u6b21\u4efb\u52a1\u91cf\uff0c\u5f3a\u5236\u4f11\u606f</td>\n</tr>\n<tr>\n<td>\u4e2a\u4eba\u504f\u597d</td>\n<td>\u6807\u6ce8\u8005\u7684\u4e3b\u89c2\u504f\u597d</td>\n<td>\u591a\u4eba\u6807\u6ce8\u53d6\u5e73\u5747\uff0c\u5f02\u5e38\u503c\u68c0\u6d4b</td>\n</tr>\n<tr>\n<td>\u6837\u672c\u9009\u62e9\u504f\u5dee</td>\n<td>\u8bc4\u4f30\u96c6\u4e0d\u4ee3\u8868\u771f\u5b9e\u5206\u5e03</td>\n<td>\u5206\u5c42\u91c7\u6837\uff0c\u5b9a\u671f\u66f4\u65b0\u8bc4\u4f30\u96c6</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"824\">8.2.4 \u6807\u6ce8\u4e00\u81f4\u6027\u5206\u6790</h3>\n<p><strong>Fleiss' Kappa \u8ba1\u7b97</strong>\uff1a\n$$\\kappa = \\frac{P_o - P_e}{1 - P_e}$$\n\u5176\u4e2d $P_o$ \u662f\u89c2\u5bdf\u5230\u7684\u4e00\u81f4\u6027\uff0c$P_e$ \u662f\u968f\u673a\u4e00\u81f4\u6027\u3002</p>\n<p><strong>\u4e00\u81f4\u6027\u9608\u503c\u53c2\u8003</strong>\uff1a</p>\n<ul>\n<li>\u03ba &gt; 0.8\uff1a\u51e0\u4e4e\u5b8c\u7f8e\u4e00\u81f4</li>\n<li>0.6 &lt; \u03ba \u2264 0.8\uff1a\u5b9e\u8d28\u6027\u4e00\u81f4</li>\n<li>0.4 &lt; \u03ba \u2264 0.6\uff1a\u4e2d\u7b49\u4e00\u81f4</li>\n<li>\u03ba \u2264 0.4\uff1a\u9700\u8981\u6539\u8fdb\u6807\u6ce8\u6d41\u7a0b</li>\n</ul>\n<h2 id=\"83-ab\">8.3 A/B \u6d4b\u8bd5\u4e0e\u5728\u7ebf\u5b9e\u9a8c</h2>\n<h3 id=\"831\">8.3.1 \u5b9e\u9a8c\u8bbe\u8ba1\u539f\u5219</h3>\n<div class=\"codehilite\"><pre><span></span><code>   \u7528\u6237\u6d41\u91cf\u5206\u914d\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502          \u603b\u6d41\u91cf                  \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2502\n      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n      \u2502                   \u2502\n  \u250c\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2510\n  \u2502\u63a7\u5236\u7ec4  \u2502         \u2502 \u5b9e\u9a8c\u7ec4   \u2502\n  \u2502 50%   \u2502         \u2502  50%    \u2502\n  \u2514\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2518\n      \u2502                   \u2502\n      \u2502                   \u2502\n  \u250c\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2510\n  \u2502\u6a21\u578b A  \u2502         \u2502 \u6a21\u578b B  \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u8003\u8651\u56e0\u7d20</strong>\uff1a</p>\n<ol>\n<li><strong>\u6837\u672c\u91cf\u8ba1\u7b97</strong>\uff1a\u57fa\u4e8e\u7edf\u8ba1\u529f\u6548\u5206\u6790</li>\n<li><strong>\u5206\u6d41\u7b56\u7565</strong>\uff1a\u7528\u6237\u7ea7 vs \u4f1a\u8bdd\u7ea7</li>\n<li><strong>\u5b9e\u9a8c\u65f6\u957f</strong>\uff1a\u8003\u8651\u5468\u671f\u6027\u6548\u5e94</li>\n<li><strong>\u62a4\u680f\u6307\u6807</strong>\uff1a\u9632\u6b62\u8d1f\u9762\u5f71\u54cd</li>\n</ol>\n<h3 id=\"832\">8.3.2 \u7edf\u8ba1\u663e\u8457\u6027\u68c0\u9a8c</h3>\n<p><strong>\u6837\u672c\u91cf\u4f30\u7b97\u516c\u5f0f</strong>\uff1a\n$$n = \\frac{2(Z_{\\alpha/2} + Z_{\\beta})^2 \\sigma^2}{\\delta^2}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$Z_{\\alpha/2}$\uff1a\u663e\u8457\u6027\u6c34\u5e73\u5bf9\u5e94\u7684 Z \u503c</li>\n<li>$Z_{\\beta}$\uff1a\u7edf\u8ba1\u529f\u6548\u5bf9\u5e94\u7684 Z \u503c</li>\n<li>$\\sigma$\uff1a\u6807\u51c6\u5dee</li>\n<li>$\\delta$\uff1a\u6700\u5c0f\u53ef\u68c0\u6d4b\u6548\u5e94</li>\n</ul>\n<h3 id=\"833\">8.3.3 \u591a\u81c2\u8001\u864e\u673a\u4f18\u5316</h3>\n<p>\u52a8\u6001\u8c03\u6574\u6d41\u91cf\u5206\u914d\u4ee5\u6700\u5927\u5316\u6536\u76ca\uff1a</p>\n<p><strong>Thompson Sampling \u7b97\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u4f2a\u4ee3\u7801</span>\n<span class=\"k\">def</span> <span class=\"nf\">thompson_sampling</span><span class=\"p\">(</span><span class=\"n\">arms</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"p\">):</span>\n    <span class=\"n\">samples</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">arms</span><span class=\"p\">)):</span>\n        <span class=\"c1\"># \u4ece Beta \u5206\u5e03\u91c7\u6837</span>\n        <span class=\"n\">sample</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">beta</span><span class=\"p\">(</span><span class=\"n\">alpha</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">beta</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n        <span class=\"n\">samples</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u9009\u62e9\u91c7\u6837\u503c\u6700\u5927\u7684\u81c2</span>\n    <span class=\"k\">return</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"n\">samples</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"834\">8.3.4 \u5b9e\u9a8c\u76d1\u63a7\u4e0e\u65e9\u505c</h3>\n<p><strong>\u76d1\u63a7\u6307\u6807\u4f53\u7cfb</strong>\uff1a</p>\n<ol>\n<li><strong>\u6838\u5fc3\u6307\u6807</strong>\uff1a\u76f4\u63a5\u4e1a\u52a1\u76ee\u6807\uff08\u5982\u7528\u6237\u6ee1\u610f\u5ea6\uff09</li>\n<li><strong>\u62a4\u680f\u6307\u6807</strong>\uff1a\u5b89\u5168\u8fb9\u754c\uff08\u5982\u5ef6\u8fdf\u3001\u9519\u8bef\u7387\uff09</li>\n<li><strong>\u8bca\u65ad\u6307\u6807</strong>\uff1a\u5e2e\u52a9\u7406\u89e3\u53d8\u5316\u539f\u56e0</li>\n<li><strong>\u9886\u5148\u6307\u6807</strong>\uff1a\u9884\u6d4b\u957f\u671f\u5f71\u54cd</li>\n</ol>\n<p><strong>\u65e9\u505c\u51b3\u7b56\u6846\u67b6</strong>\uff1a</p>\n<ul>\n<li>\u663e\u8457\u8d1f\u9762\u5f71\u54cd\uff1a\u7acb\u5373\u505c\u6b62</li>\n<li>\u663e\u8457\u6b63\u9762\u5f71\u54cd\uff1a\u8003\u8651\u63d0\u524d\u7ed3\u675f</li>\n<li>\u65e0\u663e\u8457\u5dee\u5f02\uff1a\u8bc4\u4f30\u7ee7\u7eed\u7684\u4ef7\u503c</li>\n</ul>\n<h2 id=\"84\">8.4 \u57fa\u51c6\u6d4b\u8bd5\u96c6\u7684\u6784\u5efa\u539f\u5219</h2>\n<h3 id=\"841\">8.4.1 \u6d4b\u8bd5\u96c6\u8bbe\u8ba1\u539f\u5219</h3>\n<p>\u9ad8\u8d28\u91cf\u57fa\u51c6\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         \u57fa\u51c6\u6d4b\u8bd5\u96c6\u8bbe\u8ba1\u539f\u5219                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                        \u2502\n\u2502  1. \u4ee3\u8868\u6027 (Representativeness)        \u2502\n\u2502     \u2514\u2500\u2500 \u8986\u76d6\u771f\u5b9e\u4f7f\u7528\u573a\u666f                 \u2502\n\u2502                                        \u2502\n\u2502  2. \u591a\u6837\u6027 (Diversity)                 \u2502\n\u2502     \u2514\u2500\u2500 \u96be\u5ea6\u68af\u5ea6\u3001\u9886\u57df\u8986\u76d6               \u2502\n\u2502                                        \u2502\n\u2502  3. \u533a\u5206\u5ea6 (Discrimination)            \u2502\n\u2502     \u2514\u2500\u2500 \u80fd\u591f\u533a\u5206\u4e0d\u540c\u80fd\u529b\u6c34\u5e73             \u2502\n\u2502                                        \u2502\n\u2502  4. \u7a33\u5b9a\u6027 (Stability)                 \u2502\n\u2502     \u2514\u2500\u2500 \u8bc4\u5206\u4e00\u81f4\u3001\u4e0d\u6613\u8fc7\u62df\u5408             \u2502\n\u2502                                        \u2502\n\u2502  5. \u53ef\u89e3\u91ca\u6027 (Interpretability)        \u2502\n\u2502     \u2514\u2500\u2500 \u9519\u8bef\u53ef\u5206\u6790\u3001\u53ef\u5f52\u56e0               \u2502\n\u2502                                        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<h3 id=\"842\">8.4.2 \u52a8\u6001\u57fa\u51c6\u6784\u5efa</h3>\n<p>\u9759\u6001\u57fa\u51c6\u5bb9\u6613\u88ab\u8fc7\u62df\u5408\uff0c\u9700\u8981\u52a8\u6001\u66f4\u65b0\uff1a</p>\n<p><strong>\u52a8\u6001\u751f\u6210\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u5bf9\u6297\u6837\u672c\u751f\u6210</strong>\uff1a\u57fa\u4e8e\u6a21\u578b\u5f31\u70b9\u751f\u6210</li>\n<li><strong>\u96be\u5ea6\u81ea\u9002\u5e94</strong>\uff1a\u6839\u636e\u6a21\u578b\u80fd\u529b\u8c03\u6574</li>\n<li><strong>\u7248\u672c\u63a7\u5236</strong>\uff1a\u4fdd\u6301\u5411\u540e\u517c\u5bb9\u6027</li>\n<li><strong>\u589e\u91cf\u66f4\u65b0</strong>\uff1a\u5b9a\u671f\u6dfb\u52a0\u65b0\u6837\u672c</li>\n</ol>\n<h3 id=\"843\">8.4.3 \u591a\u7ef4\u5ea6\u8bc4\u4f30\u77e9\u9635</h3>\n<div class=\"codehilite\"><pre><span></span><code>\u8bc4\u4f30\u7ef4\u5ea6\u77e9\u9635\u793a\u4f8b\uff1a\n\n        \u77e5\u8bc6  \u63a8\u7406  \u521b\u9020  \u5b89\u5168  \u6548\u7387\n\u4efb\u52a11    \u2713    \u2713    -    \u2713    -\n\u4efb\u52a12    -    \u2713    \u2713    -    \u2713\n\u4efb\u52a13    \u2713    -    -    \u2713    \u2713\n\u4efb\u52a14    -    \u2713    \u2713    \u2713    -\n\u4efb\u52a15    \u2713    -    \u2713    -    \u2713\n\n\u2713 \u8868\u793a\u8be5\u4efb\u52a1\u6d4b\u8bd5\u8be5\u7ef4\u5ea6\n</code></pre></div>\n\n<h3 id=\"844\">8.4.4 \u6807\u51c6\u5316\u8bc4\u4f30\u534f\u8bae</h3>\n<p><strong>\u8bc4\u4f30\u534f\u8bae\u8981\u7d20</strong>\uff1a</p>\n<ol>\n<li><strong>\u8f93\u5165\u683c\u5f0f</strong>\uff1a\u7edf\u4e00\u7684\u63d0\u793a\u6a21\u677f</li>\n<li><strong>\u8f93\u51fa\u89e3\u6790</strong>\uff1a\u6807\u51c6\u5316\u7684\u7b54\u6848\u63d0\u53d6</li>\n<li><strong>\u8bc4\u5206\u89c4\u5219</strong>\uff1a\u660e\u786e\u7684\u8ba1\u5206\u65b9\u6cd5</li>\n<li><strong>\u8fd0\u884c\u73af\u5883</strong>\uff1a\u56fa\u5b9a\u7684\u63a8\u7406\u53c2\u6570</li>\n</ol>\n<h2 id=\"85\">8.5 \u8bc4\u4f30\u6570\u636e\u6cc4\u9732\u7684\u68c0\u6d4b\u4e0e\u9884\u9632</h2>\n<h3 id=\"851\">8.5.1 \u6570\u636e\u6cc4\u9732\u7684\u7c7b\u578b\u4e0e\u5371\u5bb3</h3>\n<p>\u6570\u636e\u6cc4\u9732\u4f1a\u4e25\u91cd\u5f71\u54cd\u8bc4\u4f30\u7684\u53ef\u9760\u6027\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u6570\u636e\u6cc4\u9732\u5206\u7c7b\uff1a\n\n1. \u76f4\u63a5\u6cc4\u9732 (Direct Leakage)\n   \u2514\u2500\u2500 \u6d4b\u8bd5\u96c6\u76f4\u63a5\u51fa\u73b0\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\n\n2. \u95f4\u63a5\u6cc4\u9732 (Indirect Leakage)\n   \u251c\u2500\u2500 \u76f8\u4f3c\u6837\u672c\u6cc4\u9732\n   \u2514\u2500\u2500 \u7b54\u6848\u6a21\u5f0f\u6cc4\u9732\n\n3. \u65f6\u95f4\u6cc4\u9732 (Temporal Leakage)\n   \u2514\u2500\u2500 \u4f7f\u7528\u672a\u6765\u6570\u636e\u8bad\u7ec3\n\n4. \u7279\u5f81\u6cc4\u9732 (Feature Leakage)\n   \u2514\u2500\u2500 \u6807\u7b7e\u4fe1\u606f\u7f16\u7801\u5728\u7279\u5f81\u4e2d\n</code></pre></div>\n\n<h3 id=\"852\">8.5.2 \u6cc4\u9732\u68c0\u6d4b\u65b9\u6cd5</h3>\n<ol>\n<li><strong>N-gram \u91cd\u53e0\u68c0\u6d4b</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">detect_ngram_overlap</span><span class=\"p\">(</span><span class=\"n\">train_data</span><span class=\"p\">,</span> <span class=\"n\">test_data</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">13</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u68c0\u6d4b\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684 n-gram \u91cd\u53e0</span>\n<span class=\"sd\">    n=13 \u662f\u7ecf\u9a8c\u503c\uff0c\u80fd\u6709\u6548\u68c0\u6d4b\u5927\u90e8\u5206\u6cc4\u9732</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">train_ngrams</span> <span class=\"o\">=</span> <span class=\"n\">extract_ngrams</span><span class=\"p\">(</span><span class=\"n\">train_data</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n    <span class=\"n\">test_ngrams</span> <span class=\"o\">=</span> <span class=\"n\">extract_ngrams</span><span class=\"p\">(</span><span class=\"n\">test_data</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n\n    <span class=\"n\">overlap</span> <span class=\"o\">=</span> <span class=\"n\">train_ngrams</span><span class=\"o\">.</span><span class=\"n\">intersection</span><span class=\"p\">(</span><span class=\"n\">test_ngrams</span><span class=\"p\">)</span>\n    <span class=\"n\">overlap_ratio</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">overlap</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">test_ngrams</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;overlap_ratio&#39;</span><span class=\"p\">:</span> <span class=\"n\">overlap_ratio</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;suspicious_samples&#39;</span><span class=\"p\">:</span> <span class=\"n\">find_suspicious_samples</span><span class=\"p\">(</span><span class=\"n\">overlap</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u5d4c\u5165\u7a7a\u95f4\u76f8\u4f3c\u5ea6\u68c0\u6d4b</strong></li>\n</ol>\n<p>\u4f7f\u7528\u53e5\u5b50\u5d4c\u5165\u68c0\u6d4b\u8bed\u4e49\u76f8\u4f3c\u7684\u6837\u672c\uff1a\n$$\\text{similarity} = \\frac{\\mathbf{e}_{\\text{train}} \\cdot \\mathbf{e}_{\\text{test}}}{||\\mathbf{e}_{\\text{train}}|| \\cdot ||\\mathbf{e}_{\\text{test}}||}$$\n\u9608\u503c\u8bbe\u7f6e\uff1a</p>\n<ul>\n<li>similarity &gt; 0.95\uff1a\u9ad8\u5ea6\u53ef\u7591</li>\n<li>0.90 &lt; similarity \u2264 0.95\uff1a\u9700\u8981\u4eba\u5de5\u5ba1\u6838</li>\n<li>similarity \u2264 0.90\uff1a\u57fa\u672c\u5b89\u5168</li>\n</ul>\n<ol start=\"3\">\n<li><strong>\u6a21\u578b\u884c\u4e3a\u5206\u6790</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">analyze_model_behavior</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">test_set</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u901a\u8fc7\u6a21\u578b\u884c\u4e3a\u68c0\u6d4b\u53ef\u80fd\u7684\u6570\u636e\u6cc4\u9732</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"c1\"># 1. \u56f0\u60d1\u5ea6\u5f02\u5e38\u68c0\u6d4b</span>\n    <span class=\"n\">perplexity</span> <span class=\"o\">=</span> <span class=\"n\">compute_perplexity</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">test_set</span><span class=\"p\">)</span>\n    <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;perplexity_anomaly&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">detect_anomaly</span><span class=\"p\">(</span><span class=\"n\">perplexity</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># 2. \u7f6e\u4fe1\u5ea6\u5206\u5e03\u5206\u6790</span>\n    <span class=\"n\">confidence</span> <span class=\"o\">=</span> <span class=\"n\">get_confidence_distribution</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">test_set</span><span class=\"p\">)</span>\n    <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;confidence_skew&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">compute_skewness</span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># 3. \u8bb0\u5fc6\u5316\u68c0\u6d4b</span>\n    <span class=\"n\">memorization</span> <span class=\"o\">=</span> <span class=\"n\">test_memorization</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">test_set</span><span class=\"p\">)</span>\n    <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;memorization_score&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">memorization</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">metrics</span>\n</code></pre></div>\n\n<h3 id=\"853\">8.5.3 \u9884\u9632\u7b56\u7565</h3>\n<ol>\n<li><strong>\u6570\u636e\u9694\u79bb\u673a\u5236</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502          \u6570\u636e\u9694\u79bb\u67b6\u6784                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                     \u2502\n\u2502   \u8bad\u7ec3\u73af\u5883          \u8bc4\u4f30\u73af\u5883          \u2502\n\u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n\u2502   \u2502\u8bad\u7ec3\u96c6 \u2502        \u2502\u6d4b\u8bd5\u96c6 \u2502         \u2502\n\u2502   \u2514\u2500\u2500\u252c\u2500\u2500\u2500\u2518        \u2514\u2500\u2500\u252c\u2500\u2500\u2500\u2518         \u2502\n\u2502      \u2502               \u2502              \u2502\n\u2502      \u25bc               \u25bc              \u2502\n\u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n\u2502   \u2502 \u6a21\u578b  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500&gt;\u2502 \u8bc4\u4f30  \u2502         \u2502\n\u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502\n\u2502                                     \u2502\n\u2502   \u8bbf\u95ee\u63a7\u5236\uff1a                         \u2502\n\u2502   - \u8bad\u7ec3\u56e2\u961f\u65e0\u6cd5\u8bbf\u95ee\u6d4b\u8bd5\u96c6            \u2502\n\u2502   - \u8bc4\u4f30\u56e2\u961f\u65e0\u6cd5\u4fee\u6539\u8bad\u7ec3\u6570\u636e          \u2502\n\u2502   - \u5ba1\u8ba1\u65e5\u5fd7\u8bb0\u5f55\u6240\u6709\u8bbf\u95ee              \u2502\n\u2502                                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u65f6\u95f4\u6233\u9a8c\u8bc1</strong></li>\n</ol>\n<p>\u786e\u4fdd\u8bad\u7ec3\u6570\u636e\u7684\u65f6\u95f4\u65e9\u4e8e\u6d4b\u8bd5\u6570\u636e\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">validate_temporal_integrity</span><span class=\"p\">(</span><span class=\"n\">train_data</span><span class=\"p\">,</span> <span class=\"n\">test_data</span><span class=\"p\">):</span>\n    <span class=\"n\">train_latest</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"o\">.</span><span class=\"n\">timestamp</span> <span class=\"k\">for</span> <span class=\"n\">sample</span> <span class=\"ow\">in</span> <span class=\"n\">train_data</span><span class=\"p\">)</span>\n    <span class=\"n\">test_earliest</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"o\">.</span><span class=\"n\">timestamp</span> <span class=\"k\">for</span> <span class=\"n\">sample</span> <span class=\"ow\">in</span> <span class=\"n\">test_data</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">train_latest</span> <span class=\"o\">&gt;=</span> <span class=\"n\">test_earliest</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">DataLeakageError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Temporal leakage detected&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u54c8\u5e0c\u6307\u7eb9\u8ffd\u8e2a</strong></li>\n</ol>\n<p>\u4e3a\u6bcf\u4e2a\u6570\u636e\u6837\u672c\u751f\u6210\u552f\u4e00\u6307\u7eb9\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">generate_data_fingerprint</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u89c4\u8303\u5316\u6587\u672c</span>\n    <span class=\"n\">normalized</span> <span class=\"o\">=</span> <span class=\"n\">normalize_text</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">)</span>\n    <span class=\"c1\"># \u751f\u6210\u54c8\u5e0c</span>\n    <span class=\"n\">fingerprint</span> <span class=\"o\">=</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">sha256</span><span class=\"p\">(</span><span class=\"n\">normalized</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">fingerprint</span>\n\n<span class=\"c1\"># \u6784\u5efa\u6307\u7eb9\u6570\u636e\u5e93</span>\n<span class=\"n\">fingerprint_db</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;train&#39;</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">generate_fingerprint</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">train_data</span><span class=\"p\">),</span>\n    <span class=\"s1\">&#39;test&#39;</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">generate_fingerprint</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">test_data</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># \u68c0\u67e5\u91cd\u53e0</span>\n<span class=\"n\">overlap</span> <span class=\"o\">=</span> <span class=\"n\">fingerprint_db</span><span class=\"p\">[</span><span class=\"s1\">&#39;train&#39;</span><span class=\"p\">]</span> <span class=\"o\">&amp;</span> <span class=\"n\">fingerprint_db</span><span class=\"p\">[</span><span class=\"s1\">&#39;test&#39;</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<h3 id=\"854\">8.5.4 \u6301\u7eed\u76d1\u63a7\u673a\u5236</h3>\n<p><strong>\u76d1\u63a7\u6307\u6807\u4eea\u8868\u677f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u5b9e\u65f6\u76d1\u63a7\u6307\u6807\uff1a\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  \u6570\u636e\u6cc4\u9732\u76d1\u63a7\u4eea\u8868\u677f                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                      \u2502\n\u2502  N-gram \u91cd\u53e0\u7387\uff1a     0.3% [\u6b63\u5e38]      \u2502\n\u2502  \u5d4c\u5165\u76f8\u4f3c\u5ea6\u5cf0\u503c\uff1a    0.89 [\u6b63\u5e38]      \u2502\n\u2502  \u56f0\u60d1\u5ea6\u5f02\u5e38\u503c\uff1a      2\u4e2a [\u8b66\u544a]       \u2502\n\u2502  \u65b0\u589e\u6d4b\u8bd5\u6837\u672c\uff1a      523\u4e2a            \u2502\n\u2502  \u6700\u540e\u68c0\u67e5\u65f6\u95f4\uff1a      2\u5c0f\u65f6\u524d          \u2502\n\u2502                                      \u2502\n\u2502  \u5386\u53f2\u8d8b\u52bf\uff1a                          \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n\u2502  \u2502     \u2571\u2572    \u2571\u2572           \u2502         \u2502\n\u2502  \u2502    \u2571  \u2572  \u2571  \u2572          \u2502         \u2502\n\u2502  \u2502   \u2571    \u2572\u2571    \u2572         \u2502         \u2502\n\u2502  \u2502  \u2571            \u2572        \u2502         \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502\n\u2502                                      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<h2 id=\"86\">8.6 \u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u7cfb\u7edf\u4ecb\u7ecd\u4e86 LLM \u540e\u8bad\u7ec3\u7684\u8bc4\u4f30\u4f53\u7cfb\u6784\u5efa\uff0c\u6838\u5fc3\u8981\u70b9\u5305\u62ec\uff1a</p>\n<p><strong>\u5173\u952e\u6982\u5ff5</strong>\uff1a</p>\n<ol>\n<li><strong>\u591a\u5c42\u6b21\u8bc4\u4f30\u4f53\u7cfb</strong>\uff1a\u4ece\u8868\u9762\u6307\u6807\u5230\u6a21\u578b\u8bc4\u4f30\u7684\u9012\u8fdb\u5f0f\u8bc4\u4f30</li>\n<li><strong>\u4eba\u673a\u7ed3\u5408\u8bc4\u4f30</strong>\uff1a\u81ea\u52a8\u6307\u6807\u4e0e\u4eba\u5de5\u8bc4\u4f30\u7684\u4f18\u52bf\u4e92\u8865</li>\n<li><strong>\u5728\u7ebf\u5b9e\u9a8c\u65b9\u6cd5</strong>\uff1aA/B \u6d4b\u8bd5\u548c\u591a\u81c2\u8001\u864e\u673a\u7684\u5e94\u7528</li>\n<li><strong>\u6570\u636e\u6cc4\u9732\u9632\u63a7</strong>\uff1a\u68c0\u6d4b\u548c\u9884\u9632\u673a\u5236\u7684\u5efa\u7acb</li>\n</ol>\n<p><strong>\u6838\u5fc3\u516c\u5f0f</strong>\uff1a</p>\n<ul>\n<li>\u7ec4\u5408\u6307\u6807\uff1a$\\text{Score}_{\\text{composite}} = \\sum_{i=1}^{n} w_i \\cdot \\text{normalize}(m_i)$</li>\n<li>Kappa \u4e00\u81f4\u6027\uff1a$\\kappa = \\frac{P_o - P_e}{1 - P_e}$</li>\n<li>\u6837\u672c\u91cf\u4f30\u7b97\uff1a$n = \\frac{2(Z_{\\alpha/2} + Z_{\\beta})^2 \\sigma^2}{\\delta^2}$</li>\n</ul>\n<p><strong>\u5b9e\u8df5\u8981\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u8bc4\u4f30\u6307\u6807\u9700\u8981\u9a8c\u8bc1\u5176\u81ea\u8eab\u7684\u53ef\u9760\u6027</li>\n<li>\u4eba\u5de5\u8bc4\u4f30\u9700\u8981\u4e25\u683c\u7684\u8d28\u91cf\u63a7\u5236\u6d41\u7a0b</li>\n<li>\u57fa\u51c6\u6d4b\u8bd5\u96c6\u5e94\u5f53\u52a8\u6001\u66f4\u65b0\u4ee5\u9632\u8fc7\u62df\u5408</li>\n<li>\u6570\u636e\u6cc4\u9732\u68c0\u6d4b\u5e94\u8d2f\u7a7f\u6574\u4e2a\u8bad\u7ec3\u5468\u671f</li>\n</ul>\n<h2 id=\"87\">8.7 \u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</h2>\n<h3 id=\"1\">\u26a0\ufe0f \u9677\u9631 1\uff1a\u8fc7\u5ea6\u4f9d\u8d56\u5355\u4e00\u6307\u6807</h3>\n<p><strong>\u95ee\u9898</strong>\uff1a\u4ec5\u4f18\u5316 BLEU \u6216\u56f0\u60d1\u5ea6\uff0c\u5bfc\u81f4\u6a21\u578b\u4ea7\u751f\u4e0d\u81ea\u7136\u7684\u8f93\u51fa\u3002</p>\n<p><strong>\u89e3\u51b3</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u591a\u7ef4\u5ea6\u8bc4\u4f30\u77e9\u9635</li>\n<li>\u7ed3\u5408\u81ea\u52a8\u6307\u6807\u548c\u4eba\u5de5\u8bc4\u4f30</li>\n<li>\u5b9a\u671f\u5ba1\u67e5\u6307\u6807\u7684\u4e1a\u52a1\u76f8\u5173\u6027</li>\n</ul>\n<h3 id=\"2\">\u26a0\ufe0f \u9677\u9631 2\uff1a\u8bc4\u4f30\u96c6\u5206\u5e03\u504f\u79fb</h3>\n<p><strong>\u95ee\u9898</strong>\uff1a\u8bc4\u4f30\u96c6\u4e0d\u80fd\u4ee3\u8868\u5b9e\u9645\u4f7f\u7528\u573a\u666f\uff0c\u5bfc\u81f4\u7ebf\u4e0a\u6548\u679c\u5dee\u3002</p>\n<p><strong>\u89e3\u51b3</strong>\uff1a</p>\n<ul>\n<li>\u5b9a\u671f\u4ece\u7ebf\u4e0a\u91c7\u6837\u66f4\u65b0\u8bc4\u4f30\u96c6</li>\n<li>\u76d1\u63a7\u8bc4\u4f30\u96c6\u4e0e\u7ebf\u4e0a\u6570\u636e\u7684\u5206\u5e03\u5dee\u5f02</li>\n<li>\u4f7f\u7528\u5206\u5c42\u91c7\u6837\u786e\u4fdd\u8986\u76d6\u5404\u79cd\u573a\u666f</li>\n</ul>\n<h3 id=\"3\">\u26a0\ufe0f \u9677\u9631 3\uff1a\u6807\u6ce8\u8005\u504f\u5dee\u672a\u63a7\u5236</h3>\n<p><strong>\u95ee\u9898</strong>\uff1a\u6807\u6ce8\u8d28\u91cf\u4e0d\u7a33\u5b9a\uff0c\u5bfc\u81f4\u8bc4\u4f30\u7ed3\u679c\u4e0d\u53ef\u9760\u3002</p>\n<p><strong>\u89e3\u51b3</strong>\uff1a</p>\n<ul>\n<li>\u5b9e\u65bd\u6807\u6ce8\u8005\u57f9\u8bad\u548c\u8ba4\u8bc1</li>\n<li>\u4f7f\u7528\u591a\u4eba\u6807\u6ce8\u548c\u4e00\u81f4\u6027\u68c0\u67e5</li>\n<li>\u5b9a\u671f\u5ba1\u8ba1\u6807\u6ce8\u8d28\u91cf</li>\n</ul>\n<h3 id=\"4ab\">\u26a0\ufe0f \u9677\u9631 4\uff1aA/B \u6d4b\u8bd5\u6837\u672c\u91cf\u4e0d\u8db3</h3>\n<p><strong>\u95ee\u9898</strong>\uff1a\u8fc7\u65e9\u5f97\u51fa\u7ed3\u8bba\uff0c\u7edf\u8ba1\u529f\u6548\u4e0d\u8db3\u3002</p>\n<p><strong>\u89e3\u51b3</strong>\uff1a</p>\n<ul>\n<li>\u4e8b\u5148\u8fdb\u884c\u529f\u6548\u5206\u6790\u8ba1\u7b97\u6837\u672c\u91cf</li>\n<li>\u4f7f\u7528\u5e8f\u8d2f\u6d4b\u8bd5\u65b9\u6cd5</li>\n<li>\u8bbe\u7f6e\u6700\u5c0f\u5b9e\u9a8c\u65f6\u957f</li>\n</ul>\n<h3 id=\"5\">\u26a0\ufe0f \u9677\u9631 5\uff1a\u5ffd\u89c6\u9690\u6027\u6570\u636e\u6cc4\u9732</h3>\n<p><strong>\u95ee\u9898</strong>\uff1a\u53ea\u68c0\u67e5\u76f4\u63a5\u91cd\u590d\uff0c\u5ffd\u7565\u8bed\u4e49\u76f8\u4f3c\u7684\u6cc4\u9732\u3002</p>\n<p><strong>\u89e3\u51b3</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u591a\u79cd\u68c0\u6d4b\u65b9\u6cd5\uff08n-gram\u3001\u5d4c\u5165\u3001\u884c\u4e3a\uff09</li>\n<li>\u5efa\u7acb\u6570\u636e\u8c31\u7cfb\u8ffd\u8e2a\u7cfb\u7edf</li>\n<li>\u5b9e\u65bd\u4e25\u683c\u7684\u6570\u636e\u8bbf\u95ee\u63a7\u5236</li>\n</ul>\n<h3 id=\"_2\">\ud83d\udca1 \u8c03\u8bd5\u6280\u5de7</h3>\n<ol>\n<li>\n<p><strong>\u8bc4\u4f30\u8c03\u8bd5\u68c0\u67e5\u6e05\u5355</strong>\uff1a\n   - [ ] \u8bc4\u4f30\u6307\u6807\u4e0e\u4e1a\u52a1\u76ee\u6807\u5bf9\u9f50\n   - [ ] \u4eba\u5de5\u8bc4\u4f30\u6307\u5357\u6e05\u6670\u65e0\u6b67\u4e49\n   - [ ] A/B \u6d4b\u8bd5\u6d41\u91cf\u5206\u914d\u5747\u5300\n   - [ ] \u6570\u636e\u6cc4\u9732\u68c0\u6d4b\u5df2\u8fd0\u884c\n   - [ ] \u8bc4\u4f30\u7ed3\u679c\u53ef\u590d\u73b0</p>\n</li>\n<li>\n<p><strong>\u5f02\u5e38\u7ed3\u679c\u6392\u67e5\u6d41\u7a0b</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u8bc4\u4f30\u5f02\u5e38 \u2192 \u68c0\u67e5\u6570\u636e\u8d28\u91cf \u2192 \u9a8c\u8bc1\u8bc4\u4f30\u4ee3\u7801 \n         \u2192 \u5206\u6790\u6a21\u578b\u8f93\u51fa \u2192 \u5ba1\u67e5\u6807\u6ce8\u4e00\u81f4\u6027\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u6027\u80fd\u74f6\u9888\u4f18\u5316</strong>\uff1a\n   - \u6279\u91cf\u5316\u8bc4\u4f30\u8bf7\u6c42\n   - \u7f13\u5b58\u91cd\u590d\u8ba1\u7b97\u7ed3\u679c\n   - \u5e76\u884c\u5316\u72ec\u7acb\u8bc4\u4f30\u4efb\u52a1</li>\n</ol>\n<h2 id=\"88\">8.8 \u7ec3\u4e60\u9898</h2>\n<h3 id=\"81_1\">\u7ec3\u4e60 8.1\uff1a\u8bbe\u8ba1\u7ec4\u5408\u8bc4\u4f30\u6307\u6807</h3>\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u7528\u4e8e\u8bc4\u4f30\u5ba2\u670d\u5bf9\u8bdd\u7cfb\u7edf\u7684\u7ec4\u5408\u6307\u6807\uff0c\u9700\u8981\u540c\u65f6\u8003\u8651\u51c6\u786e\u6027\u3001\u54cd\u5e94\u901f\u5ea6\u548c\u7528\u6237\u6ee1\u610f\u5ea6\u3002</p>\n<p><strong>Hint</strong>: \u8003\u8651\u4e0d\u540c\u6307\u6807\u7684\u91cf\u7eb2\u548c\u4e1a\u52a1\u91cd\u8981\u6027\u3002</p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u7ec4\u5408\u6307\u6807\u8bbe\u8ba1\uff1a\n$$\\text{Score} = 0.4 \\times \\text{norm}(\\text{\u51c6\u786e\u7387}) + 0.3 \\times \\text{norm}(\\text{\u6ee1\u610f\u5ea6}) + 0.2 \\times \\text{norm}(\\frac{1}{\\text{\u5ef6\u8fdf}}) + 0.1 \\times \\text{norm}(\\text{\u8986\u76d6\u7387})$$\n\u5176\u4e2d\u5f52\u4e00\u5316\u51fd\u6570\uff1a\n$$\\text{norm}(x) = \\frac{x - x_{\\min}}{x_{\\max} - x_{\\min}}$$\n\u6743\u91cd\u8bbe\u8ba1\u7406\u7531\uff1a</p>\n<ul>\n<li>\u51c6\u786e\u7387\uff0840%\uff09\uff1a\u6838\u5fc3\u4e1a\u52a1\u6307\u6807\uff0c\u76f4\u63a5\u5f71\u54cd\u95ee\u9898\u89e3\u51b3\u7387</li>\n<li>\u6ee1\u610f\u5ea6\uff0830%\uff09\uff1a\u7528\u6237\u4f53\u9a8c\u7684\u76f4\u63a5\u53cd\u6620</li>\n<li>\u54cd\u5e94\u901f\u5ea6\uff0820%\uff09\uff1a\u5f71\u54cd\u7528\u6237\u7b49\u5f85\u4f53\u9a8c\uff0c\u4f7f\u7528\u5012\u6570\u786e\u4fdd\u8d8a\u5feb\u8d8a\u597d</li>\n<li>\u8986\u76d6\u7387\uff0810%\uff09\uff1a\u80fd\u5904\u7406\u7684\u95ee\u9898\u7c7b\u578b\u8303\u56f4</li>\n</ul>\n<p>\u5b9e\u65bd\u8981\u70b9\uff1a</p>\n<ol>\n<li>\u5b9a\u671f\u6839\u636e\u4e1a\u52a1\u53cd\u9988\u8c03\u6574\u6743\u91cd</li>\n<li>\u8bbe\u7f6e\u5404\u6307\u6807\u7684\u6700\u4f4e\u9608\u503c\uff0c\u4efb\u4e00\u6307\u6807\u4f4e\u4e8e\u9608\u503c\u5219\u603b\u5206\u7f6e\u96f6</li>\n<li>\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u8ba1\u7b97\uff0c\u907f\u514d\u77ed\u671f\u6ce2\u52a8\u5f71\u54cd</li>\n</ol>\n</details>\n<h3 id=\"82_1\">\u7ec3\u4e60 8.2\uff1a\u8ba1\u7b97\u6807\u6ce8\u4e00\u81f4\u6027</h3>\n<p>\u4e09\u4f4d\u6807\u6ce8\u8005\u5bf9 100 \u4e2a\u6837\u672c\u8fdb\u884c\u4e8c\u5206\u7c7b\u6807\u6ce8\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a</p>\n<ul>\n<li>\u6240\u6709\u4eba\u90fd\u6807\u6ce8\u4e3a\u6b63\u4f8b\uff1a30 \u4e2a</li>\n<li>\u6240\u6709\u4eba\u90fd\u6807\u6ce8\u4e3a\u8d1f\u4f8b\uff1a40 \u4e2a</li>\n<li>\u4e24\u4eba\u6b63\u4f8b\u4e00\u4eba\u8d1f\u4f8b\uff1a20 \u4e2a</li>\n<li>\u4e00\u4eba\u6b63\u4f8b\u4e24\u4eba\u8d1f\u4f8b\uff1a10 \u4e2a</li>\n</ul>\n<p>\u8ba1\u7b97 Fleiss' Kappa \u503c\u5e76\u8bc4\u4f30\u4e00\u81f4\u6027\u6c34\u5e73\u3002</p>\n<p><strong>Hint</strong>: Fleiss' Kappa \u9700\u8981\u5148\u8ba1\u7b97\u89c2\u5bdf\u4e00\u81f4\u6027\u548c\u671f\u671b\u4e00\u81f4\u6027\u3002</p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u8ba1\u7b97\u6b65\u9aa4\uff1a</p>\n<ol>\n<li>\n<p>\u6784\u5efa\u4e00\u81f4\u6027\u77e9\u9635\uff1a\n   - \u5b8c\u5168\u4e00\u81f4\uff083\u4eba\u540c\u610f\uff09\uff1a70\u4e2a\u6837\u672c\n   - \u90e8\u5206\u4e00\u81f4\uff082\u4eba\u540c\u610f\uff09\uff1a30\u4e2a\u6837\u672c</p>\n</li>\n<li>\n<p>\u8ba1\u7b97\u89c2\u5bdf\u4e00\u81f4\u6027 $P_o$\uff1a\n$$P_o = \\frac{1}{N \\times k(k-1)} \\sum_{i=1}^{N} \\sum_{j=1}^{c} n_{ij}(n_{ij}-1)$$\n\u5176\u4e2d N=100, k=3, c=2\n$$P_o = \\frac{70 \\times 3 \\times 2 + 30 \\times 2 \\times 1}{100 \\times 3 \\times 2} = \\frac{480}{600} = 0.8$$</p>\n</li>\n<li>\n<p>\u8ba1\u7b97\u671f\u671b\u4e00\u81f4\u6027 $P_e$\uff1a\n   - \u6b63\u4f8b\u603b\u6570\uff1a30\u00d73 + 20\u00d72 + 10\u00d71 = 140\n   - \u8d1f\u4f8b\u603b\u6570\uff1a40\u00d73 + 20\u00d71 + 10\u00d72 = 160\n   - $p_{\\text{\u6b63}} = 140/300 = 0.467$\n   - $p_{\\text{\u8d1f}} = 160/300 = 0.533$\n$$P_e = p_{\\text{\u6b63}}^2 + p_{\\text{\u8d1f}}^2 = 0.467^2 + 0.533^2 = 0.502$$</p>\n</li>\n<li>\n<p>\u8ba1\u7b97 Kappa\uff1a\n$$\\kappa = \\frac{P_o - P_e}{1 - P_e} = \\frac{0.8 - 0.502}{1 - 0.502} = \\frac{0.298}{0.498} = 0.598$$\n\u8bc4\u4f30\uff1a\u03ba = 0.598 \u8868\u793a\"\u4e2d\u7b49\u4e00\u81f4\u6027\"\uff0c\u63a5\u8fd1\"\u5b9e\u8d28\u6027\u4e00\u81f4\"\u7684\u8fb9\u754c\u3002\u5efa\u8bae\u52a0\u5f3a\u6807\u6ce8\u6307\u5357\u57f9\u8bad\u3002</p>\n</li>\n</ol>\n</details>\n<h3 id=\"83ab\">\u7ec3\u4e60 8.3\uff1aA/B \u6d4b\u8bd5\u6837\u672c\u91cf\u8ba1\u7b97</h3>\n<p>\u8ba1\u5212\u8fdb\u884c\u4e00\u4e2a A/B \u6d4b\u8bd5\uff0c\u5f53\u524d\u8f6c\u5316\u7387\u4e3a 5%\uff0c\u5e0c\u671b\u68c0\u6d4b\u51fa 0.5% \u7684\u63d0\u5347\uff08\u5230 5.5%\uff09\uff0c\u8981\u6c42\u663e\u8457\u6027\u6c34\u5e73 \u03b1=0.05\uff0c\u7edf\u8ba1\u529f\u6548 1-\u03b2=0.8\u3002\u9700\u8981\u591a\u5c11\u6837\u672c\u91cf\uff1f</p>\n<p><strong>Hint</strong>: \u4f7f\u7528\u6bd4\u4f8b\u68c0\u9a8c\u7684\u6837\u672c\u91cf\u516c\u5f0f\u3002</p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u4f7f\u7528\u6bd4\u4f8b\u5dee\u5f02\u7684\u6837\u672c\u91cf\u516c\u5f0f\uff1a</p>\n<p>\u7ed9\u5b9a\u53c2\u6570\uff1a</p>\n<ul>\n<li>$p_1 = 0.05$\uff08\u63a7\u5236\u7ec4\u8f6c\u5316\u7387\uff09</li>\n<li>$p_2 = 0.055$\uff08\u5b9e\u9a8c\u7ec4\u671f\u671b\u8f6c\u5316\u7387\uff09</li>\n<li>$\\alpha = 0.05$\uff0c$Z_{\\alpha/2} = 1.96$</li>\n<li>$\\beta = 0.2$\uff0c$Z_{\\beta} = 0.84$</li>\n</ul>\n<p>\u8ba1\u7b97\u6b65\u9aa4\uff1a</p>\n<ol>\n<li>\n<p>\u8ba1\u7b97\u5e73\u5747\u6bd4\u4f8b\uff1a\n$$\\bar{p} = \\frac{p_1 + p_2}{2} = 0.0525$$</p>\n</li>\n<li>\n<p>\u8ba1\u7b97\u6807\u51c6\u5dee\uff1a\n$$\\sigma = \\sqrt{2\\bar{p}(1-\\bar{p})} = \\sqrt{2 \\times 0.0525 \\times 0.9475} = 0.315$$</p>\n</li>\n<li>\n<p>\u8ba1\u7b97\u6837\u672c\u91cf\uff1a\n$$n = \\frac{(Z_{\\alpha/2} + Z_{\\beta})^2 \\times \\sigma^2}{(p_2 - p_1)^2}$$\n   $$n = \\frac{(1.96 + 0.84)^2 \\times 0.315^2}{0.005^2} = \\frac{7.84 \\times 0.099}{0.000025} = 31,046$$</p>\n</li>\n</ol>\n<p>\u6bcf\u7ec4\u9700\u8981\u7ea6 31,000 \u4e2a\u6837\u672c\uff0c\u603b\u5171\u9700\u8981 62,000 \u4e2a\u6837\u672c\u3002</p>\n<p>\u5b9e\u8df5\u5efa\u8bae\uff1a</p>\n<ul>\n<li>\u8003\u8651\u4f7f\u7528\u5e8f\u8d2f\u6d4b\u8bd5\u51cf\u5c11\u6837\u672c\u9700\u6c42</li>\n<li>\u53ef\u4ee5\u5148\u8fdb\u884c\u5c0f\u89c4\u6a21\u8bd5\u9a8c\u8bc4\u4f30\u5b9e\u9645\u6548\u5e94\u5927\u5c0f</li>\n<li>\u8003\u8651\u4f7f\u7528\u8d1d\u53f6\u65af\u65b9\u6cd5\u83b7\u5f97\u66f4\u7075\u6d3b\u7684\u51b3\u7b56\u6846\u67b6</li>\n</ul>\n</details>\n<h3 id=\"84_1\">\u7ec3\u4e60 8.4\uff1a\u8bbe\u8ba1\u6570\u636e\u6cc4\u9732\u68c0\u6d4b\u7cfb\u7edf</h3>\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u6cc4\u9732\u68c0\u6d4b\u7cfb\u7edf\uff0c\u5305\u62ec\u9884\u9632\u3001\u68c0\u6d4b\u548c\u54cd\u5e94\u673a\u5236\u3002</p>\n<p><strong>Hint</strong>: \u8003\u8651\u6280\u672f\u624b\u6bb5\u548c\u6d41\u7a0b\u7ba1\u7406\u4e24\u4e2a\u5c42\u9762\u3002</p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u6570\u636e\u6cc4\u9732\u68c0\u6d4b\u7cfb\u7edf\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li>\n<p><strong>\u9884\u9632\u5c42</strong>\n- \u6570\u636e\u8bbf\u95ee\u63a7\u5236\uff1a\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u7ba1\u7406\n- \u6570\u636e\u52a0\u5bc6\uff1a\u6d4b\u8bd5\u96c6\u52a0\u5bc6\u5b58\u50a8\uff0c\u4ec5\u8bc4\u4f30\u65f6\u89e3\u5bc6\n- \u5ba1\u8ba1\u65e5\u5fd7\uff1a\u8bb0\u5f55\u6240\u6709\u6570\u636e\u8bbf\u95ee\u64cd\u4f5c\n- \u81ea\u52a8\u5316\u9694\u79bb\uff1aCI/CD \u6d41\u7a0b\u4e2d\u81ea\u52a8\u5206\u79bb\u8bad\u7ec3\u548c\u6d4b\u8bd5\u6570\u636e</p>\n</li>\n<li>\n<p><strong>\u68c0\u6d4b\u5c42</strong>\n- \u9759\u6001\u68c0\u6d4b\uff1a\n  - N-gram \u91cd\u53e0\u5206\u6790\uff08n=5,10,15\uff09\n  - \u8bed\u4e49\u76f8\u4f3c\u5ea6\u68c0\u6d4b\uff08\u9608\u503c 0.9\uff09\n  - \u54c8\u5e0c\u6307\u7eb9\u5339\u914d\n- \u52a8\u6001\u68c0\u6d4b\uff1a\n  - \u6a21\u578b\u56f0\u60d1\u5ea6\u5f02\u5e38\u68c0\u6d4b\n  - \u7f6e\u4fe1\u5ea6\u5206\u5e03\u5206\u6790\n  - \u8bb0\u5fc6\u5316\u6d4b\u8bd5</p>\n</li>\n<li>\n<p><strong>\u54cd\u5e94\u673a\u5236</strong>\n- \u81ea\u52a8\u544a\u8b66\uff1a\u68c0\u6d4b\u5230\u6cc4\u9732\u7acb\u5373\u901a\u77e5\n- \u6cc4\u9732\u8bc4\u4f30\uff1a\u91cf\u5316\u6cc4\u9732\u7a0b\u5ea6\u548c\u5f71\u54cd\n- \u6570\u636e\u6e05\u7406\uff1a\u79fb\u9664\u6216\u66ff\u6362\u6cc4\u9732\u6837\u672c\n- \u6a21\u578b\u56de\u6eda\uff1a\u5fc5\u8981\u65f6\u56de\u6eda\u5230\u672a\u6c61\u67d3\u7248\u672c</p>\n</li>\n<li>\n<p><strong>\u76d1\u63a7\u6307\u6807</strong></p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">monitoring_metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;ngram_overlap&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;threshold&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"s1\">&#39;action&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;warn&#39;</span><span class=\"p\">},</span>\n    <span class=\"s1\">&#39;semantic_similarity&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;threshold&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"s1\">&#39;action&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;alert&#39;</span><span class=\"p\">},</span>\n    <span class=\"s1\">&#39;perplexity_drop&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;threshold&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;action&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;investigate&#39;</span><span class=\"p\">},</span>\n    <span class=\"s1\">&#39;exact_match_rate&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;threshold&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.001</span><span class=\"p\">,</span> <span class=\"s1\">&#39;action&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;block&#39;</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<ol start=\"5\">\n<li><strong>\u6d41\u7a0b\u96c6\u6210</strong>\n- \u8bad\u7ec3\u524d\u68c0\u67e5\uff1a\u81ea\u52a8\u626b\u63cf\u8bad\u7ec3\u6570\u636e\n- \u8bad\u7ec3\u4e2d\u76d1\u63a7\uff1a\u5b9a\u671f\u91c7\u6837\u68c0\u6d4b\n- \u8bc4\u4f30\u524d\u9a8c\u8bc1\uff1a\u786e\u8ba4\u6d4b\u8bd5\u96c6\u5b8c\u6574\u6027\n- \u5b9a\u671f\u5ba1\u8ba1\uff1a\u6708\u5ea6\u6570\u636e\u6cc4\u9732\u5ba1\u8ba1\u62a5\u544a</li>\n</ol>\n</details>\n<h3 id=\"85_1\">\u7ec3\u4e60 8.5\uff1a\u4f18\u5316\u4eba\u5de5\u8bc4\u4f30\u6210\u672c</h3>\n<p>\u4f60\u6709 1000 \u4e2a\u6837\u672c\u9700\u8981\u8bc4\u4f30\uff0c\u9884\u7b97\u53ea\u591f 2000 \u6b21\u6807\u6ce8\u3002\u5982\u4f55\u8bbe\u8ba1\u6807\u6ce8\u7b56\u7565\u4ee5\u83b7\u5f97\u6700\u53ef\u9760\u7684\u7ed3\u679c\uff1f</p>\n<p><strong>Hint</strong>: \u8003\u8651\u6837\u672c\u9009\u62e9\u3001\u6807\u6ce8\u5206\u914d\u548c\u8d28\u91cf\u63a7\u5236\u7684\u5e73\u8861\u3002</p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u4f18\u5316\u7b56\u7565\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6837\u672c\u5206\u5c42\uff08300\u4e2a\u6837\u672c\uff09</strong>\n- \u4f7f\u7528\u805a\u7c7b\u5c06 1000 \u4e2a\u6837\u672c\u5206\u6210 10 \u7c7b\n- \u6bcf\u7c7b\u968f\u673a\u9009\u62e9 30 \u4e2a\u4ee3\u8868\u6027\u6837\u672c\n- \u6bcf\u4e2a\u6837\u672c\u6807\u6ce8 3 \u6b21\uff08900 \u6b21\u6807\u6ce8\uff09</p>\n</li>\n<li>\n<p><strong>\u91cd\u70b9\u6837\u672c\uff08200\u4e2a\u6837\u672c\uff09</strong>\n- \u6a21\u578b\u7f6e\u4fe1\u5ea6\u4f4e\u7684 100 \u4e2a\u6837\u672c\n- \u4e1a\u52a1\u5173\u952e\u573a\u666f 100 \u4e2a\u6837\u672c\n- \u6bcf\u4e2a\u6837\u672c\u6807\u6ce8 2 \u6b21\uff08400 \u6b21\u6807\u6ce8\uff09</p>\n</li>\n<li>\n<p><strong>\u666e\u901a\u91c7\u6837\uff08300\u4e2a\u6837\u672c\uff09</strong>\n- \u5269\u4f59\u6837\u672c\u968f\u673a\u91c7\u6837 300 \u4e2a\n- \u6bcf\u4e2a\u6837\u672c\u6807\u6ce8 1 \u6b21\uff08300 \u6b21\u6807\u6ce8\uff09</p>\n</li>\n<li>\n<p><strong>\u8d28\u91cf\u63a7\u5236\uff08200\u4e2a\u6837\u672c\uff09</strong>\n- 50 \u4e2a\u9ec4\u91d1\u6807\u51c6\u9898\uff08\u5df2\u77e5\u7b54\u6848\uff09\n- 150 \u4e2a\u91cd\u590d\u9898\uff08\u4ece\u5df2\u6807\u6ce8\u4e2d\u9009\u62e9\uff09\n- \u5206\u6563\u5728\u6807\u6ce8\u4efb\u52a1\u4e2d\uff08200 \u6b21\u6807\u6ce8\uff09</p>\n</li>\n<li>\n<p><strong>\u52a8\u6001\u8c03\u6574\uff08200\u6b21\u673a\u52a8\uff09</strong>\n- \u6839\u636e\u521d\u6b65\u7ed3\u679c\u8c03\u6574\uff1a\n  - \u4e00\u81f4\u6027\u4f4e\u7684\u589e\u52a0\u6807\u6ce8\n  - \u53d1\u73b0\u65b0\u6a21\u5f0f\u65f6\u6269\u5927\u91c7\u6837</p>\n</li>\n</ol>\n<p>\u603b\u8ba1\uff1a300\u00d73 + 200\u00d72 + 300\u00d71 + 200 + 200 = 2000 \u6b21</p>\n<p><strong>\u6548\u679c\u8bc4\u4f30</strong>\uff1a</p>\n<ul>\n<li>\u6838\u5fc3\u6837\u672c\u8986\u76d6\u7387\uff1a80%\uff08800/1000\uff09</li>\n<li>\u5e73\u5747\u6807\u6ce8\u6b21\u6570\uff1a2\u6b21\uff082000/1000\uff09</li>\n<li>\u8d28\u63a7\u6bd4\u4f8b\uff1a10%\uff08200/2000\uff09</li>\n</ul>\n</details>\n<h3 id=\"86_1\">\u7ec3\u4e60 8.6\uff1a\u8bbe\u8ba1\u591a\u6a21\u6001\u8bc4\u4f30\u4f53\u7cfb</h3>\n<p>\u4e3a\u4e00\u4e2a\u89c6\u89c9-\u8bed\u8a00\u6a21\u578b\u8bbe\u8ba1\u8bc4\u4f30\u4f53\u7cfb\uff0c\u9700\u8981\u8bc4\u4f30\u56fe\u50cf\u7406\u89e3\u3001\u6587\u672c\u751f\u6210\u548c\u8de8\u6a21\u6001\u5bf9\u9f50\u80fd\u529b\u3002</p>\n<p><strong>Hint</strong>: \u8003\u8651\u5355\u6a21\u6001\u548c\u8de8\u6a21\u6001\u7684\u8bc4\u4f30\u6307\u6807\u3002</p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u591a\u6a21\u6001\u8bc4\u4f30\u4f53\u7cfb\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li>\n<p><strong>\u56fe\u50cf\u7406\u89e3\u8bc4\u4f30</strong>\n- \u56fe\u50cf\u5206\u7c7b\u51c6\u786e\u7387\n- \u76ee\u6807\u68c0\u6d4b mAP\n- \u56fe\u50cf\u63cf\u8ff0 CIDEr \u5206\u6570\n- \u89c6\u89c9\u95ee\u7b54\u51c6\u786e\u7387</p>\n</li>\n<li>\n<p><strong>\u6587\u672c\u751f\u6210\u8bc4\u4f30</strong>\n- \u8bed\u8a00\u6d41\u7545\u5ea6\uff08\u56f0\u60d1\u5ea6\uff09\n- \u4e8b\u5b9e\u51c6\u786e\u6027\uff08\u77e5\u8bc6\u95ee\u7b54\uff09\n- \u903b\u8f91\u4e00\u81f4\u6027\uff08\u63a8\u7406\u4efb\u52a1\uff09\n- \u591a\u6837\u6027\u6307\u6807\uff08Self-BLEU\uff09</p>\n</li>\n<li>\n<p><strong>\u8de8\u6a21\u6001\u5bf9\u9f50\u8bc4\u4f30</strong>\n- \u56fe\u6587\u5339\u914d\u51c6\u786e\u7387\uff08\u68c0\u7d22\u4efb\u52a1\uff09\n- \u8bed\u4e49\u76f8\u4f3c\u5ea6\uff08CLIP Score\uff09\n- \u7ec6\u7c92\u5ea6\u5bf9\u9f50\uff08\u533a\u57df-\u8bcd\u6c47\u5bf9\u5e94\uff09\n- \u65f6\u5e8f\u4e00\u81f4\u6027\uff08\u89c6\u9891\u7406\u89e3\uff09</p>\n</li>\n<li>\n<p><strong>\u7efc\u5408\u8bc4\u4f30\u6846\u67b6</strong></p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">multimodal_eval</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;image_only&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;classification&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;detection&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;captioning&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.6</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">&#39;text_only&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;fluency&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;accuracy&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;diversity&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">&#39;cross_modal&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;retrieval&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;alignment&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;reasoning&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># \u603b\u5206\u8ba1\u7b97</span>\n<span class=\"n\">total_score</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"mf\">0.3</span> <span class=\"o\">*</span> <span class=\"n\">weighted_avg</span><span class=\"p\">(</span><span class=\"n\">image_scores</span><span class=\"p\">,</span> <span class=\"n\">image_weights</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n    <span class=\"mf\">0.3</span> <span class=\"o\">*</span> <span class=\"n\">weighted_avg</span><span class=\"p\">(</span><span class=\"n\">text_scores</span><span class=\"p\">,</span> <span class=\"n\">text_weights</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n    <span class=\"mf\">0.4</span> <span class=\"o\">*</span> <span class=\"n\">weighted_avg</span><span class=\"p\">(</span><span class=\"n\">cross_scores</span><span class=\"p\">,</span> <span class=\"n\">cross_weights</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"5\">\n<li>\n<p><strong>\u7279\u6b8a\u8003\u8651</strong>\n- \u6a21\u6001\u7f3a\u5931\u9c81\u68d2\u6027\uff1a\u6d4b\u8bd5\u5355\u6a21\u6001\u8f93\u5165\n- \u6a21\u6001\u51b2\u7a81\u5904\u7406\uff1a\u63d0\u4f9b\u77db\u76fe\u4fe1\u606f\n- \u8ba1\u7b97\u6548\u7387\uff1a\u63a8\u7406\u901f\u5ea6\u548c\u5185\u5b58\u5360\u7528\n- \u516c\u5e73\u6027\u8bc4\u4f30\uff1a\u4e0d\u540c\u4eba\u7fa4\u3001\u6587\u5316\u7684\u8868\u73b0</p>\n</li>\n<li>\n<p><strong>\u57fa\u51c6\u6570\u636e\u96c6</strong>\n- COCO Captions\uff1a\u56fe\u50cf\u63cf\u8ff0\n- VQA v2\uff1a\u89c6\u89c9\u95ee\u7b54\n- Flickr30K\uff1a\u56fe\u6587\u68c0\u7d22\n- Conceptual Captions\uff1a\u5927\u89c4\u6a21\u9884\u8bad\u7ec3\u8bc4\u4f30</p>\n</li>\n</ol>\n</details>\n<h3 id=\"87_1\">\u7ec3\u4e60 8.7\uff1a\u5b9e\u73b0\u5728\u7ebf\u5b9e\u9a8c\u65e9\u505c\u673a\u5236</h3>\n<p>\u8bbe\u8ba1\u4e00\u4e2a A/B \u6d4b\u8bd5\u7684\u65e9\u505c\u51b3\u7b56\u7cfb\u7edf\uff0c\u9700\u8981\u5e73\u8861\u7edf\u8ba1\u4e25\u8c28\u6027\u548c\u4e1a\u52a1\u6548\u7387\u3002</p>\n<p><strong>Hint</strong>: \u8003\u8651\u5e8f\u8d2f\u6d4b\u8bd5\u548c\u4e1a\u52a1\u7ea6\u675f\u3002</p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u65e9\u505c\u51b3\u7b56\u7cfb\u7edf\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li><strong>\u7edf\u8ba1\u65e9\u505c\u89c4\u5219</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">StatisticalStopping</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">alpha</span>  <span class=\"c1\"># \u663e\u8457\u6027\u6c34\u5e73</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">beta</span> <span class=\"o\">=</span> <span class=\"n\">beta</span>    <span class=\"c1\"># Type II \u9519\u8bef\u7387</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">should_stop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data_a</span><span class=\"p\">,</span> <span class=\"n\">data_b</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u5e8f\u8d2f\u6982\u7387\u6bd4\u68c0\u9a8c (SPRT)</span>\n        <span class=\"n\">llr</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_likelihood_ratio</span><span class=\"p\">(</span><span class=\"n\">data_a</span><span class=\"p\">,</span> <span class=\"n\">data_b</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u505c\u6b62\u8fb9\u754c</span>\n        <span class=\"n\">upper_bound</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">beta</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alpha</span><span class=\"p\">)</span>\n        <span class=\"n\">lower_bound</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">beta</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alpha</span><span class=\"p\">))</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">llr</span> <span class=\"o\">&gt;=</span> <span class=\"n\">upper_bound</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;significant_positive&#39;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">llr</span> <span class=\"o\">&lt;=</span> <span class=\"n\">lower_bound</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;significant_negative&#39;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">t</span> <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_duration</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;max_duration&#39;</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;continue&#39;</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u4e1a\u52a1\u65e9\u505c\u89c4\u5219</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">BusinessStopping</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">thresholds</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thresholds</span> <span class=\"o\">=</span> <span class=\"n\">thresholds</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">should_stop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u62a4\u680f\u6307\u6807\u68c0\u67e5</span>\n        <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;error_rate&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thresholds</span><span class=\"p\">[</span><span class=\"s1\">&#39;max_error&#39;</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;guardrail_violation&#39;</span>\n\n        <span class=\"c1\"># \u4e1a\u52a1\u6307\u6807\u4e25\u91cd\u6076\u5316</span>\n        <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;revenue_drop&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thresholds</span><span class=\"p\">[</span><span class=\"s1\">&#39;max_revenue_drop&#39;</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;business_impact&#39;</span>\n\n        <span class=\"c1\"># \u660e\u663e\u6539\u5584\uff0c\u53ef\u8003\u8651\u63d0\u524d\u5168\u91cf</span>\n        <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;improvement&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thresholds</span><span class=\"p\">[</span><span class=\"s1\">&#39;clear_win&#39;</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;clear_winner&#39;</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">&#39;continue&#39;</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u7efc\u5408\u51b3\u7b56\u6846\u67b6</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">make_stopping_decision</span><span class=\"p\">(</span><span class=\"n\">experiment</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u6536\u96c6\u6570\u636e</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">collect_experiment_data</span><span class=\"p\">(</span><span class=\"n\">experiment</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u7edf\u8ba1\u68c0\u9a8c</span>\n    <span class=\"n\">stat_stop</span><span class=\"p\">,</span> <span class=\"n\">stat_reason</span> <span class=\"o\">=</span> <span class=\"n\">statistical_check</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u4e1a\u52a1\u68c0\u67e5</span>\n    <span class=\"n\">biz_stop</span><span class=\"p\">,</span> <span class=\"n\">biz_reason</span> <span class=\"o\">=</span> <span class=\"n\">business_check</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u6700\u5c0f\u6837\u672c\u91cf\u68c0\u67e5</span>\n    <span class=\"k\">if</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;sample_size&#39;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">MIN_SAMPLE_SIZE</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;continue&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;insufficient_data&#39;</span>\n\n    <span class=\"c1\"># \u51b3\u7b56\u903b\u8f91</span>\n    <span class=\"k\">if</span> <span class=\"n\">biz_reason</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;guardrail_violation&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;stop_immediately&#39;</span><span class=\"p\">,</span> <span class=\"n\">biz_reason</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">stat_stop</span> <span class=\"ow\">and</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">&#39;duration&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;=</span> <span class=\"n\">MIN_DURATION</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;stop&#39;</span><span class=\"p\">,</span> <span class=\"n\">stat_reason</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">biz_stop</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;stop&#39;</span><span class=\"p\">,</span> <span class=\"n\">biz_reason</span>\n\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;continue&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;monitoring&#39;</span>\n</code></pre></div>\n\n<ol start=\"4\">\n<li><strong>\u5b9e\u65bd\u8981\u70b9</strong>\n- \u8bbe\u7f6e\u6700\u5c0f\u8fd0\u884c\u65f6\u95f4\uff08\u5982 7 \u5929\uff09\u907f\u514d\u5468\u671f\u6548\u5e94\n- \u4f7f\u7528 Bonferroni \u6821\u6b63\u5904\u7406\u591a\u91cd\u6bd4\u8f83\n- \u4fdd\u7559\u5c11\u91cf\u6d41\u91cf\u7ee7\u7eed\u5b9e\u9a8c\u4ee5\u9a8c\u8bc1\u957f\u671f\u6548\u5e94\n- \u8bb0\u5f55\u6240\u6709\u65e9\u505c\u51b3\u7b56\u7528\u4e8e\u4e8b\u540e\u5206\u6790</li>\n</ol>\n</details>\n<h3 id=\"88_1\">\u7ec3\u4e60 8.8\uff1a\u68c0\u6d4b\u548c\u91cf\u5316\u6a21\u578b\u8bb0\u5fc6\u5316</h3>\n<p>\u8bbe\u8ba1\u5b9e\u9a8c\u68c0\u6d4b LLM \u662f\u5426\u8bb0\u5fc6\u4e86\u8bad\u7ec3\u6570\u636e\uff0c\u5e76\u91cf\u5316\u8bb0\u5fc6\u5316\u7a0b\u5ea6\u3002</p>\n<p><strong>Hint</strong>: \u8003\u8651\u4f7f\u7528\u63a2\u9488\u4efb\u52a1\u548c\u7edf\u8ba1\u5206\u6790\u3002</p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u8bb0\u5fc6\u5316\u68c0\u6d4b\u5b9e\u9a8c\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li><strong>\u76f4\u63a5\u63a2\u6d4b\u6cd5</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">direct_memorization_test</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">known_samples</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u6d4b\u8bd5\u6a21\u578b\u662f\u5426\u80fd\u9010\u5b57\u590d\u73b0\u8bad\u7ec3\u6837\u672c</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">memorization_scores</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">sample</span> <span class=\"ow\">in</span> <span class=\"n\">known_samples</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u63d0\u4f9b\u524d\u7f00\uff0c\u8ba9\u6a21\u578b\u7eed\u5199</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"n\">sample</span><span class=\"p\">[:</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">)</span><span class=\"o\">//</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"n\">generation</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u7cbe\u786e\u5339\u914d\u7387</span>\n        <span class=\"n\">exact_match</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">generation</span> <span class=\"o\">==</span> <span class=\"n\">sample</span><span class=\"p\">)</span>\n        <span class=\"n\">char_overlap</span> <span class=\"o\">=</span> <span class=\"n\">calculate_char_overlap</span><span class=\"p\">(</span><span class=\"n\">generation</span><span class=\"p\">,</span> <span class=\"n\">sample</span><span class=\"p\">)</span>\n\n        <span class=\"n\">memorization_scores</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n            <span class=\"s1\">&#39;exact_match&#39;</span><span class=\"p\">:</span> <span class=\"n\">exact_match</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;char_overlap&#39;</span><span class=\"p\">:</span> <span class=\"n\">char_overlap</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;perplexity&#39;</span><span class=\"p\">:</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">perplexity</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">)</span>\n        <span class=\"p\">})</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">aggregate_scores</span><span class=\"p\">(</span><span class=\"n\">memorization_scores</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u9690\u79c1\u653b\u51fb\u6d4b\u8bd5</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">membership_inference_attack</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">members</span><span class=\"p\">,</span> <span class=\"n\">non_members</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u901a\u8fc7\u7f6e\u4fe1\u5ea6\u5dee\u5f02\u5224\u65ad\u6837\u672c\u662f\u5426\u5728\u8bad\u7ec3\u96c6\u4e2d</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">member_scores</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">log_likelihood</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">members</span><span class=\"p\">]</span>\n    <span class=\"n\">non_member_scores</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">log_likelihood</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">non_members</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># \u8bad\u7ec3\u5206\u7c7b\u5668\u533a\u5206\u4e24\u7ec4</span>\n    <span class=\"n\">classifier</span> <span class=\"o\">=</span> <span class=\"n\">train_classifier</span><span class=\"p\">(</span><span class=\"n\">member_scores</span><span class=\"p\">,</span> <span class=\"n\">non_member_scores</span><span class=\"p\">)</span>\n    <span class=\"n\">auc</span> <span class=\"o\">=</span> <span class=\"n\">compute_auc</span><span class=\"p\">(</span><span class=\"n\">classifier</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># AUC &gt; 0.5 \u8868\u793a\u5b58\u5728\u8bb0\u5fc6\u5316</span>\n    <span class=\"n\">memorization_level</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">auc</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>  <span class=\"c1\"># \u5f52\u4e00\u5316\u5230 [0, 1]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">memorization_level</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u77e5\u8bc6\u63a2\u9488\u6d4b\u8bd5</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">knowledge_probe_test</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">factual_data</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u6d4b\u8bd5\u6a21\u578b\u8bb0\u5fc6\u7684\u4e8b\u5b9e\u6027\u77e5\u8bc6</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">fact</span> <span class=\"ow\">in</span> <span class=\"n\">factual_data</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u6d4b\u8bd5\u4e0d\u540c\u63d0\u793a\u4e0b\u7684\u4e00\u81f4\u6027</span>\n        <span class=\"n\">prompts</span> <span class=\"o\">=</span> <span class=\"n\">generate_paraphrases</span><span class=\"p\">(</span><span class=\"n\">fact</span><span class=\"p\">[</span><span class=\"s1\">&#39;question&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">answers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">prompts</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u7b54\u6848\u4e00\u81f4\u6027</span>\n        <span class=\"n\">consistency</span> <span class=\"o\">=</span> <span class=\"n\">calculate_consistency</span><span class=\"p\">(</span><span class=\"n\">answers</span><span class=\"p\">)</span>\n        <span class=\"n\">accuracy</span> <span class=\"o\">=</span> <span class=\"n\">check_accuracy</span><span class=\"p\">(</span><span class=\"n\">answers</span><span class=\"p\">,</span> <span class=\"n\">fact</span><span class=\"p\">[</span><span class=\"s1\">&#39;answer&#39;</span><span class=\"p\">])</span>\n\n        <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n            <span class=\"s1\">&#39;consistency&#39;</span><span class=\"p\">:</span> <span class=\"n\">consistency</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;accuracy&#39;</span><span class=\"p\">:</span> <span class=\"n\">accuracy</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;confidence&#39;</span><span class=\"p\">:</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">(</span><span class=\"n\">fact</span><span class=\"p\">[</span><span class=\"s1\">&#39;question&#39;</span><span class=\"p\">])</span>\n        <span class=\"p\">})</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">analyze_memorization_pattern</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"4\">\n<li><strong>\u91cf\u5316\u6307\u6807\u4f53\u7cfb</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compute_memorization_metrics</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">test_suite</span><span class=\"p\">):</span>\n    <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"c1\"># \u8868\u9762\u8bb0\u5fc6</span>\n        <span class=\"s1\">&#39;verbatim_memorization&#39;</span><span class=\"p\">:</span> <span class=\"n\">test_exact_reproduction</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">),</span>\n\n        <span class=\"c1\"># \u8bed\u4e49\u8bb0\u5fc6</span>\n        <span class=\"s1\">&#39;semantic_memorization&#39;</span><span class=\"p\">:</span> <span class=\"n\">test_paraphrase_invariance</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">),</span>\n\n        <span class=\"c1\"># \u9690\u79c1\u6cc4\u9732\u98ce\u9669</span>\n        <span class=\"s1\">&#39;privacy_risk&#39;</span><span class=\"p\">:</span> <span class=\"n\">membership_inference_score</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">),</span>\n\n        <span class=\"c1\"># \u77e5\u8bc6\u56fa\u5316\u7a0b\u5ea6</span>\n        <span class=\"s1\">&#39;knowledge_rigidity&#39;</span><span class=\"p\">:</span> <span class=\"n\">test_fact_flexibility</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">),</span>\n\n        <span class=\"c1\"># \u5206\u5e03\u8bb0\u5fc6</span>\n        <span class=\"s1\">&#39;distribution_memorization&#39;</span><span class=\"p\">:</span> <span class=\"n\">test_style_mimicry</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\"># \u7efc\u5408\u8bb0\u5fc6\u5316\u5206\u6570</span>\n    <span class=\"n\">total_score</span> <span class=\"o\">=</span> <span class=\"n\">weighted_average</span><span class=\"p\">(</span><span class=\"n\">metrics</span><span class=\"p\">,</span> <span class=\"n\">weights</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;verbatim&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;semantic&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;privacy&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;rigidity&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;distribution&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span>\n    <span class=\"p\">})</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">metrics</span><span class=\"p\">,</span> <span class=\"n\">total_score</span>\n</code></pre></div>\n\n<ol start=\"5\">\n<li><strong>\u7f13\u89e3\u7b56\u7565\u9a8c\u8bc1</strong></li>\n</ol>\n<p>\u6d4b\u8bd5\u4e0d\u540c\u8bad\u7ec3\u6280\u672f\u7684\u53bb\u8bb0\u5fc6\u5316\u6548\u679c\uff1a</p>\n<ul>\n<li>Dropout \u7387\u5bf9\u8bb0\u5fc6\u5316\u7684\u5f71\u54cd</li>\n<li>\u5dee\u5206\u9690\u79c1\u8bad\u7ec3\u7684\u6548\u679c</li>\n<li>\u6570\u636e\u589e\u5f3a\u7684\u4f5c\u7528</li>\n<li>\u6b63\u5219\u5316\u5f3a\u5ea6\u7684\u5f71\u54cd</li>\n</ul>\n<p>\u901a\u8fc7 A/B \u5bf9\u6bd4\u5b9e\u9a8c\u91cf\u5316\u5404\u7b56\u7565\u7684\u6548\u679c\u3002</p>\n</details>"
  },
  "chapter3.md": {
    "hash": "28d42746e206b5eb40f944b8fef905f5",
    "content": "<h1 id=\"_1\">\u7b2c\u4e09\u7ae0\uff1a\u6570\u636e\u5de5\u7a0b</h1>\n<h2 id=\"_2\">\u672c\u7ae0\u6982\u89c8</h2>\n<p>\u6570\u636e\u662f\u540e\u8bad\u7ec3\u7684\u57fa\u77f3\u3002\u4e0e\u9884\u8bad\u7ec3\u9636\u6bb5\u8ffd\u6c42\u89c4\u6a21\u548c\u591a\u6837\u6027\u4e0d\u540c\uff0c\u540e\u8bad\u7ec3\u6570\u636e\u5de5\u7a0b\u805a\u7126\u4e8e\u8d28\u91cf\u3001\u5bf9\u9f50\u548c\u4efb\u52a1\u8986\u76d6\u3002\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u540e\u8bad\u7ec3\u6570\u636e\u7684\u5168\u751f\u547d\u5468\u671f\u7ba1\u7406\uff1a\u4ece\u9ad8\u8d28\u91cf\u6307\u4ee4\u6570\u636e\u7684\u6784\u9020\uff0c\u5230\u6807\u6ce8\u4f53\u7cfb\u7684\u8bbe\u8ba1\uff0c\u518d\u5230\u6570\u636e\u98de\u8f6e\u7684\u642d\u5efa\u3002\u6211\u4eec\u5c06\u7ed3\u5408\u5b9e\u9645\u6848\u4f8b\uff0c\u9610\u8ff0\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u53ef\u6301\u7eed\u3001\u53ef\u6269\u5c55\u7684\u6570\u636e\u5de5\u7a0b\u4f53\u7cfb\uff0c\u652f\u6491\u6a21\u578b\u80fd\u529b\u7684\u6301\u7eed\u8fed\u4ee3\u3002</p>\n<p><strong>\u5b66\u4e60\u76ee\u6807</strong>\uff1a</p>\n<ul>\n<li>\u638c\u63e1\u9ad8\u8d28\u91cf\u6307\u4ee4\u6570\u636e\u7684\u8bbe\u8ba1\u539f\u5219\u548c\u6784\u9020\u65b9\u6cd5</li>\n<li>\u7406\u89e3\u6807\u6ce8\u89c4\u8303\u7684\u5236\u5b9a\u6d41\u7a0b\u548c\u8d28\u91cf\u63a7\u5236\u673a\u5236</li>\n<li>\u5b66\u4f1a\u642d\u5efa\u6570\u636e\u98de\u8f6e\uff0c\u5b9e\u73b0\u6570\u636e\u7684\u81ea\u52a8\u5316\u8fed\u4ee3</li>\n<li>\u638c\u63e1\u5408\u6210\u6570\u636e\u751f\u6210\u7684\u5404\u7c7b\u6280\u672f\u548c\u8bc4\u4f30\u65b9\u6cd5</li>\n<li>\u7406\u89e3\u6570\u636e\u914d\u6bd4\u548c\u8bfe\u7a0b\u5b66\u4e60\u5728\u540e\u8bad\u7ec3\u4e2d\u7684\u5e94\u7528</li>\n</ul>\n<h2 id=\"31\">3.1 \u9ad8\u8d28\u91cf\u6307\u4ee4\u6570\u636e\u7684\u6784\u9020\u65b9\u6cd5</h2>\n<h3 id=\"311\">3.1.1 \u6307\u4ee4\u6570\u636e\u7684\u6838\u5fc3\u8981\u7d20</h3>\n<p>\u9ad8\u8d28\u91cf\u7684\u6307\u4ee4\u6570\u636e\u5e94\u5305\u542b\u4e09\u4e2a\u6838\u5fc3\u8981\u7d20\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         \u6307\u4ee4\u6570\u636e\u4e09\u8981\u7d20                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  1. \u6307\u4ee4(Instruction)               \u2502\n\u2502     - \u6e05\u6670\u7684\u4efb\u52a1\u63cf\u8ff0                 \u2502\n\u2502     - \u660e\u786e\u7684\u7ea6\u675f\u6761\u4ef6                 \u2502\n\u2502     - \u671f\u671b\u7684\u8f93\u51fa\u683c\u5f0f                 \u2502\n\u2502                                     \u2502\n\u2502  2. \u8f93\u5165(Input)                     \u2502\n\u2502     - \u4efb\u52a1\u76f8\u5173\u7684\u4e0a\u4e0b\u6587               \u2502\n\u2502     - \u5fc5\u8981\u7684\u80cc\u666f\u4fe1\u606f                 \u2502\n\u2502     - \u591a\u6a21\u6001\u5185\u5bb9(\u53ef\u9009)               \u2502\n\u2502                                     \u2502\n\u2502  3. \u8f93\u51fa(Output)                    \u2502\n\u2502     - \u9ad8\u8d28\u91cf\u7684\u6807\u51c6\u7b54\u6848               \u2502\n\u2502     - \u601d\u7ef4\u8fc7\u7a0b(\u5bf9\u4e8e\u63a8\u7406\u4efb\u52a1)         \u2502\n\u2502     - \u591a\u6837\u5316\u7684\u8868\u8fbe\u65b9\u5f0f               \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<h3 id=\"312\">3.1.2 \u6570\u636e\u6e90\u7684\u9009\u62e9\u7b56\u7565</h3>\n<ol>\n<li><strong>\u4eba\u5de5\u6784\u9020\u6570\u636e</strong></li>\n</ol>\n<p>\u4f18\u52bf\uff1a\u8d28\u91cf\u53ef\u63a7\u3001\u4efb\u52a1\u9488\u5bf9\u6027\u5f3a\n\u52a3\u52bf\uff1a\u6210\u672c\u9ad8\u3001\u89c4\u6a21\u53d7\u9650</p>\n<p>\u6784\u9020\u539f\u5219\uff1a</p>\n<ul>\n<li><strong>\u4efb\u52a1\u8986\u76d6\u5b8c\u6574\u6027</strong>\uff1a\u7cfb\u7edf\u6027\u5730\u8986\u76d6\u76ee\u6807\u80fd\u529b\u77e9\u9635</li>\n<li><strong>\u96be\u5ea6\u68af\u5ea6\u8bbe\u8ba1</strong>\uff1a\u4ece\u7b80\u5355\u5230\u590d\u6742\u7684\u6e10\u8fdb\u5f0f\u5206\u5e03</li>\n<li><strong>\u8fb9\u754c\u6848\u4f8b\u5305\u542b</strong>\uff1a\u523b\u610f\u5305\u542b\u5f02\u5e38\u548c\u8fb9\u754c\u60c5\u51b5</li>\n</ul>\n<ol start=\"2\">\n<li><strong>\u73b0\u6709\u6570\u636e\u6539\u9020</strong></li>\n</ol>\n<p>\u4ece\u9ad8\u8d28\u91cf\u7684\u6587\u672c\u8bed\u6599\uff08\u5982\u6559\u79d1\u4e66\u3001\u6280\u672f\u6587\u6863\uff09\u4e2d\u63d0\u53d6\u548c\u6539\u9020\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u539f\u59cb\u6587\u672c \u2192 \u95ee\u7b54\u5bf9\u63d0\u53d6 \u2192 \u6307\u4ee4\u683c\u5f0f\u5316 \u2192 \u8d28\u91cf\u7b5b\u9009\n         \u2193\n    \u4fe1\u606f\u62bd\u53d6\u89c4\u5219\n    (NER, \u5173\u7cfb\u62bd\u53d6\u7b49)\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u6a21\u578b\u751f\u6210\u6570\u636e</strong></li>\n</ol>\n<p>\u5229\u7528\u5f3a\u5927\u7684\u57fa\u7840\u6a21\u578b\u751f\u6210\u8bad\u7ec3\u6570\u636e\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nx\">\u79cd\u5b50\u4efb\u52a1</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"nx\">LLM\u751f\u6210</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"nx\">\u4eba\u5de5\u9a8c\u8bc1</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"nx\">\u81ea\u52a8\u6269\u5c55</span>\n<span class=\"w\">         </span><span class=\"err\">\u2193</span><span class=\"w\">            </span><span class=\"err\">\u2193</span>\n<span class=\"w\">    </span><span class=\"k\">Self</span><span class=\"o\">-</span><span class=\"nx\">Instruct</span><span class=\"w\">  </span><span class=\"nx\">\u8d28\u91cf\u8bc4\u5206\u6a21\u578b</span>\n</code></pre></div>\n\n<h3 id=\"313\">3.1.3 \u6570\u636e\u591a\u6837\u6027\u8bbe\u8ba1</h3>\n<p>\ud83d\udccc <strong>\u591a\u6837\u6027\u7ef4\u5ea6</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u4efb\u52a1\u7c7b\u578b\u591a\u6837\u6027</strong>\n   - \u751f\u6210\u7c7b\uff1a\u521b\u4f5c\u3001\u7ffb\u8bd1\u3001\u603b\u7ed3\n   - \u7406\u89e3\u7c7b\uff1a\u5206\u7c7b\u3001\u62bd\u53d6\u3001\u95ee\u7b54\n   - \u63a8\u7406\u7c7b\uff1a\u6570\u5b66\u3001\u903b\u8f91\u3001\u4ee3\u7801</p>\n</li>\n<li>\n<p><strong>\u9886\u57df\u591a\u6837\u6027</strong>\n   - \u901a\u7528\u77e5\u8bc6 vs \u4e13\u4e1a\u9886\u57df\n   - \u6b63\u5f0f\u8bed\u5883 vs \u65e5\u5e38\u5bf9\u8bdd\n   - \u4e0d\u540c\u6587\u5316\u80cc\u666f</p>\n</li>\n<li>\n<p><strong>\u590d\u6742\u5ea6\u591a\u6837\u6027</strong>\n   - \u5355\u8f6e vs \u591a\u8f6e\n   - \u7b80\u5355\u6307\u4ee4 vs \u590d\u5408\u4efb\u52a1\n   - \u77ed\u6587\u672c vs \u957f\u6587\u672c</p>\n</li>\n</ol>\n<h3 id=\"314\">3.1.4 \u6570\u636e\u8d28\u91cf\u8bc4\u4f30\u6846\u67b6</h3>\n<p>\u5efa\u7acb\u591a\u7ef4\u5ea6\u7684\u8d28\u91cf\u8bc4\u4f30\u4f53\u7cfb\uff1a</p>\n<p>$$Q_{data} = \\alpha \\cdot Q_{correctness} + \\beta \\cdot Q_{helpfulness} + \\gamma \\cdot Q_{harmlessness} + \\delta \\cdot Q_{diversity}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$Q_{correctness}$\uff1a\u4e8b\u5b9e\u51c6\u786e\u6027\u5f97\u5206</li>\n<li>$Q_{helpfulness}$\uff1a\u6709\u7528\u6027\u5f97\u5206  </li>\n<li>$Q_{harmlessness}$\uff1a\u5b89\u5168\u6027\u5f97\u5206</li>\n<li>$Q_{diversity}$\uff1a\u591a\u6837\u6027\u5f97\u5206</li>\n<li>$\\alpha, \\beta, \\gamma, \\delta$\uff1a\u6743\u91cd\u7cfb\u6570\uff0c\u6ee1\u8db3 $\\sum = 1$</li>\n</ul>\n<h2 id=\"32\">3.2 \u6807\u6ce8\u89c4\u8303\u8bbe\u8ba1\u4e0e\u8d28\u91cf\u63a7\u5236</h2>\n<h3 id=\"321\">3.2.1 \u6807\u6ce8\u89c4\u8303\u7684\u5c42\u6b21\u5316\u8bbe\u8ba1</h3>\n<div class=\"codehilite\"><pre><span></span><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502          \u6807\u6ce8\u89c4\u8303\u5c42\u6b21\u7ed3\u6784             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Level 1: \u57fa\u7840\u89c4\u8303                   \u2502\n\u2502  - \u683c\u5f0f\u8981\u6c42                          \u2502\n\u2502  - \u957f\u5ea6\u9650\u5236                          \u2502\n\u2502  - \u8bed\u8a00\u98ce\u683c                          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Level 2: \u4efb\u52a1\u89c4\u8303                   \u2502\n\u2502  - \u4efb\u52a1\u7279\u5b9a\u8981\u6c42                      \u2502\n\u2502  - \u8bc4\u5206\u6807\u51c6                          \u2502\n\u2502  - \u793a\u4f8b\u6848\u4f8b                          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Level 3: \u8d28\u91cf\u89c4\u8303                   \u2502\n\u2502  - \u51c6\u786e\u6027\u6807\u51c6                        \u2502\n\u2502  - \u5b8c\u6574\u6027\u8981\u6c42                        \u2502\n\u2502  - \u4e00\u81f4\u6027\u68c0\u67e5                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Level 4: \u5b89\u5168\u89c4\u8303                   \u2502\n\u2502  - \u6709\u5bb3\u5185\u5bb9\u8fc7\u6ee4                      \u2502\n\u2502  - \u504f\u89c1\u68c0\u6d4b                          \u2502\n\u2502  - \u9690\u79c1\u4fdd\u62a4                          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<h3 id=\"322\">3.2.2 \u6807\u6ce8\u8005\u7ba1\u7406\u4f53\u7cfb</h3>\n<ol>\n<li><strong>\u6807\u6ce8\u8005\u9009\u62e9\u4e0e\u57f9\u8bad</strong></li>\n</ol>\n<ul>\n<li><strong>\u80cc\u666f\u7b5b\u9009</strong>\uff1a\u6839\u636e\u4efb\u52a1\u9700\u6c42\u9009\u62e9\u5408\u9002\u80cc\u666f\u7684\u6807\u6ce8\u8005</li>\n<li><strong>\u57f9\u8bad\u6d41\u7a0b</strong>\uff1a</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>\u7406\u8bba\u5b66\u4e60 \u2192 \u6848\u4f8b\u7ec3\u4e60 \u2192 \u6d4b\u8bd5\u8003\u6838 \u2192 \u6b63\u5f0f\u6807\u6ce8 \u2192 \u6301\u7eed\u53cd\u9988\n</code></pre></div>\n\n<ul>\n<li><strong>\u80fd\u529b\u5206\u7ea7</strong>\uff1a\u521d\u7ea7\u3001\u4e2d\u7ea7\u3001\u9ad8\u7ea7\u6807\u6ce8\u8005\u7684\u4efb\u52a1\u5206\u914d</li>\n</ul>\n<ol start=\"2\">\n<li><strong>\u6807\u6ce8\u4e00\u81f4\u6027\u4fdd\u8bc1</strong></li>\n</ol>\n<p>Inter-Annotator Agreement (IAA) \u8ba1\u7b97\uff1a\n$$\\kappa = \\frac{P_o - P_e}{1 - P_e}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$P_o$\uff1a\u89c2\u5bdf\u5230\u7684\u4e00\u81f4\u6027\u6bd4\u4f8b</li>\n<li>$P_e$\uff1a\u968f\u673a\u4e00\u81f4\u6027\u7684\u671f\u671b\u6bd4\u4f8b</li>\n</ul>\n<p>\u76ee\u6807\uff1a$\\kappa &gt; 0.8$ \u8868\u793a\u9ad8\u5ea6\u4e00\u81f4</p>\n<h3 id=\"323\">3.2.3 \u8d28\u91cf\u63a7\u5236\u673a\u5236</h3>\n<ol>\n<li><strong>\u591a\u91cd\u6807\u6ce8\u7b56\u7565</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u4efb\u52a1 \u2192 \u6807\u6ce8\u8005A \u2192 \u7ed3\u679cA \u2198\n     \u2192 \u6807\u6ce8\u8005B \u2192 \u7ed3\u679cB \u2192 \u4ef2\u88c1/\u6295\u7968 \u2192 \u6700\u7ec8\u7ed3\u679c\n     \u2192 \u6807\u6ce8\u8005C \u2192 \u7ed3\u679cC \u2197\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u8d28\u91cf\u62bd\u68c0\u6d41\u7a0b</strong></li>\n</ol>\n<ul>\n<li><strong>\u968f\u673a\u62bd\u68c0</strong>\uff1a\u6309\u6bd4\u4f8b\u968f\u673a\u62bd\u53d6\u6837\u672c\u590d\u6838</li>\n<li><strong>\u5b9a\u5411\u62bd\u68c0</strong>\uff1a\u9488\u5bf9\u7279\u5b9a\u6807\u6ce8\u8005\u6216\u4efb\u52a1\u7c7b\u578b</li>\n<li><strong>\u4ea4\u53c9\u9a8c\u8bc1</strong>\uff1a\u6807\u6ce8\u8005\u4e92\u76f8\u68c0\u67e5</li>\n</ul>\n<ol start=\"3\">\n<li><strong>\u52a8\u6001\u8d28\u91cf\u8bc4\u5206</strong></li>\n</ol>\n<p>\u6807\u6ce8\u8005\u8d28\u91cf\u5f97\u5206\u66f4\u65b0\uff1a\n$$Q_t = \\lambda \\cdot Q_{t-1} + (1-\\lambda) \\cdot q_t$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$Q_t$\uff1a\u65f6\u523b $t$ \u7684\u8d28\u91cf\u5f97\u5206</li>\n<li>$q_t$\uff1a\u5f53\u524d\u6279\u6b21\u7684\u8d28\u91cf\u8bc4\u5206</li>\n<li>$\\lambda$\uff1a\u5386\u53f2\u6743\u91cd\u56e0\u5b50\uff08\u5178\u578b\u503c 0.7-0.9\uff09</li>\n</ul>\n<h3 id=\"324\">3.2.4 \u6807\u6ce8\u5de5\u5177\u4e0e\u5e73\u53f0</h3>\n<p><strong>\u5173\u952e\u529f\u80fd\u9700\u6c42</strong>\uff1a</p>\n<ol>\n<li><strong>\u4efb\u52a1\u5206\u53d1</strong>\uff1a\u667a\u80fd\u5206\u914d\u3001\u8d1f\u8f7d\u5747\u8861</li>\n<li><strong>\u8fdb\u5ea6\u8ffd\u8e2a</strong>\uff1a\u5b9e\u65f6\u76d1\u63a7\u3001\u74f6\u9888\u8bc6\u522b</li>\n<li><strong>\u7248\u672c\u7ba1\u7406</strong>\uff1a\u6807\u6ce8\u5386\u53f2\u3001\u53d8\u66f4\u8ffd\u8e2a</li>\n<li><strong>\u534f\u4f5c\u529f\u80fd</strong>\uff1a\u8ba8\u8bba\u3001\u4e89\u8bae\u89e3\u51b3</li>\n<li><strong>\u81ea\u52a8\u5316\u8f85\u52a9</strong>\uff1a\u9884\u6807\u6ce8\u3001\u667a\u80fd\u63d0\u793a</li>\n</ol>\n<p>\u26a0\ufe0f <strong>\u5e38\u89c1\u9677\u9631</strong>\uff1a</p>\n<ul>\n<li>\u8fc7\u5ea6\u4f9d\u8d56\u5355\u4e00\u6807\u6ce8\u6e90</li>\n<li>\u5ffd\u89c6\u6807\u6ce8\u8005\u75b2\u52b3\u5bfc\u81f4\u7684\u8d28\u91cf\u4e0b\u964d</li>\n<li>\u6807\u6ce8\u89c4\u8303\u8fc7\u4e8e\u590d\u6742\u5bfc\u81f4\u7406\u89e3\u504f\u5dee</li>\n<li>\u7f3a\u4e4f\u53ca\u65f6\u7684\u53cd\u9988\u5faa\u73af</li>\n</ul>\n<h2 id=\"33-data-flywheel\">3.3 \u6570\u636e\u98de\u8f6e\uff08Data Flywheel\uff09\u642d\u5efa</h2>\n<h3 id=\"331\">3.3.1 \u6570\u636e\u98de\u8f6e\u7684\u6838\u5fc3\u7406\u5ff5</h3>\n<p>\u6570\u636e\u98de\u8f6e\u662f\u4e00\u4e2a\u81ea\u6211\u5f3a\u5316\u7684\u5faa\u73af\u7cfb\u7edf\uff0c\u901a\u8fc7\u6a21\u578b\u90e8\u7f72\u6536\u96c6\u65b0\u6570\u636e\uff0c\u4e0d\u65ad\u6539\u8fdb\u6a21\u578b\u6027\u80fd\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502   1. \u6a21\u578b\u90e8\u7f72     \u2502\n     \u2502   \u6536\u96c6\u7528\u6237\u4ea4\u4e92    \u2502\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n              \u2193\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502   2. \u6570\u636e\u7b5b\u9009     \u2502\n     \u2502   \u8bc6\u522b\u9ad8\u4ef7\u503c\u6837\u672c  \u2502\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n              \u2193\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502   3. \u6570\u636e\u6807\u6ce8     \u2502\n     \u2502   \u4eba\u5de5/\u81ea\u52a8\u6807\u6ce8   \u2502\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n              \u2193\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502   4. \u6a21\u578b\u8bad\u7ec3     \u2502\n     \u2502   \u589e\u91cf/\u5168\u91cf\u8bad\u7ec3   \u2502\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n              \u2193\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502   5. \u8bc4\u4f30\u9a8c\u8bc1     \u2502\n     \u2502   A/B\u6d4b\u8bd5         \u2502\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n              \u2193\n         \u5faa\u73af\u7ee7\u7eed \u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<h3 id=\"332\">3.3.2 \u6570\u636e\u6536\u96c6\u7b56\u7565</h3>\n<ol>\n<li><strong>\u4e3b\u52a8\u6536\u96c6</strong></li>\n</ol>\n<ul>\n<li><strong>\u7528\u6237\u53cd\u9988\u6309\u94ae</strong>\uff1a\ud83d\udc4d/\ud83d\udc4e \u5feb\u901f\u53cd\u9988</li>\n<li><strong>\u8be6\u7ec6\u8bc4\u4ef7\u8868\u5355</strong>\uff1a\u7ed3\u6784\u5316\u7684\u8d28\u91cf\u8bc4\u4f30</li>\n<li><strong>\u5bf9\u6bd4\u8bc4\u6d4b</strong>\uff1aA/B \u6a21\u578b\u8f93\u51fa\u5bf9\u6bd4</li>\n</ul>\n<ol start=\"2\">\n<li><strong>\u88ab\u52a8\u6536\u96c6</strong></li>\n</ol>\n<ul>\n<li><strong>\u4ea4\u4e92\u65e5\u5fd7</strong>\uff1a\u7528\u6237\u884c\u4e3a\u5e8f\u5217\u5206\u6790</li>\n<li><strong>\u4fee\u6539\u75d5\u8ff9</strong>\uff1a\u7528\u6237\u5bf9\u8f93\u51fa\u7684\u7f16\u8f91</li>\n<li><strong>\u4f7f\u7528\u6a21\u5f0f</strong>\uff1a\u9ad8\u9891\u67e5\u8be2\u3001\u91cd\u8bd5\u884c\u4e3a</li>\n</ul>\n<ol start=\"3\">\n<li><strong>\u9690\u5f0f\u4fe1\u53f7\u63d0\u53d6</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u4f2a\u4ee3\u7801\u793a\u4f8b</span>\n<span class=\"n\">value_score</span> <span class=\"o\">=</span> <span class=\"n\">\u03b1</span> <span class=\"o\">*</span> <span class=\"n\">dwell_time</span> <span class=\"o\">+</span> \n              <span class=\"n\">\u03b2</span> <span class=\"o\">*</span> <span class=\"n\">copy_rate</span> <span class=\"o\">+</span> \n              <span class=\"n\">\u03b3</span> <span class=\"o\">*</span> <span class=\"n\">share_rate</span> <span class=\"o\">-</span> \n              <span class=\"n\">\u03b4</span> <span class=\"o\">*</span> <span class=\"n\">regeneration_rate</span>\n</code></pre></div>\n\n<h3 id=\"333\">3.3.3 \u9ad8\u4ef7\u503c\u6570\u636e\u8bc6\u522b</h3>\n<p><strong>\u4ef7\u503c\u8bc4\u5206\u6a21\u578b</strong>\uff1a\n$$V(x) = w_1 \\cdot \\text{Uncertainty}(x) + w_2 \\cdot \\text{Diversity}(x) + w_3 \\cdot \\text{Difficulty}(x) + w_4 \\cdot \\text{Frequency}(x)$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li><strong>Uncertainty</strong>\uff1a\u6a21\u578b\u9884\u6d4b\u7684\u4e0d\u786e\u5b9a\u6027\uff08\u71b5\uff09</li>\n<li><strong>Diversity</strong>\uff1a\u4e0e\u73b0\u6709\u6570\u636e\u7684\u5dee\u5f02\u5ea6</li>\n<li><strong>Difficulty</strong>\uff1a\u4efb\u52a1\u590d\u6742\u5ea6\u8bc4\u5206</li>\n<li><strong>Frequency</strong>\uff1a\u67e5\u8be2\u9891\u7387\u6216\u91cd\u8981\u6027</li>\n</ul>\n<p><strong>\u7b5b\u9009\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u4e0d\u786e\u5b9a\u6027\u91c7\u6837</strong>\uff1a\u9009\u62e9\u6a21\u578b\u6700\u4e0d\u786e\u5b9a\u7684\u6837\u672c</li>\n<li><strong>\u591a\u6837\u6027\u91c7\u6837</strong>\uff1a\u6700\u5927\u5316\u6570\u636e\u96c6\u7684\u8986\u76d6\u5ea6</li>\n<li><strong>\u5bf9\u6297\u6837\u672c\u6316\u6398</strong>\uff1a\u627e\u51fa\u6a21\u578b\u5931\u8d25\u7684\u6848\u4f8b</li>\n<li><strong>\u8fb9\u754c\u63a2\u7d22</strong>\uff1a\u63a5\u8fd1\u51b3\u7b56\u8fb9\u754c\u7684\u6837\u672c</li>\n</ol>\n<h3 id=\"334\">3.3.4 \u81ea\u52a8\u5316\u6807\u6ce8\u6d41\u6c34\u7ebf</h3>\n<p><strong>\u6df7\u5408\u6807\u6ce8\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>          \u9ad8\u7f6e\u4fe1\u5ea6\n\u65b0\u6570\u636e \u2192 \u6a21\u578b\u9884\u6807\u6ce8 \u2192 \u81ea\u52a8\u91c7\u7eb3\n                   \u2198\n                    \u4e2d\u7f6e\u4fe1\u5ea6 \u2192 \u4eba\u5de5\u590d\u6838 \u2192 \u6807\u6ce8\u7ed3\u679c\n                   \u2197\n         \u4f4e\u7f6e\u4fe1\u5ea6 \u2192 \u4eba\u5de5\u6807\u6ce8\n</code></pre></div>\n\n<p><strong>\u7f6e\u4fe1\u5ea6\u6821\u51c6</strong>\uff1a</p>\n<p>\u4f7f\u7528\u6e29\u5ea6\u7f29\u653e\uff08Temperature Scaling\uff09\u6821\u51c6\u6a21\u578b\u7f6e\u4fe1\u5ea6\uff1a\n$$p_i^{calibrated} = \\frac{\\exp(z_i/T)}{\\sum_j \\exp(z_j/T)}$$\n\u5176\u4e2d $T$ \u662f\u901a\u8fc7\u9a8c\u8bc1\u96c6\u4f18\u5316\u7684\u6e29\u5ea6\u53c2\u6570\u3002</p>\n<h3 id=\"335\">3.3.5 \u589e\u91cf\u8bad\u7ec3\u4e0e\u7248\u672c\u7ba1\u7406</h3>\n<p><strong>\u589e\u91cf\u8bad\u7ec3\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u6301\u7eed\u5fae\u8c03</strong>\uff1a\u5728\u65b0\u6570\u636e\u4e0a\u7ee7\u7eed\u8bad\u7ec3</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>Loss = \u03bb <span class=\"gs\">* L_new + (1-\u03bb) *</span> L_replay\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u7ecf\u9a8c\u56de\u653e</strong>\uff1a\u6df7\u5408\u5386\u53f2\u6570\u636e\u9632\u6b62\u9057\u5fd8</li>\n<li><strong>\u5f39\u6027\u6743\u91cd\u5de9\u56fa\uff08EWC\uff09</strong>\uff1a\u4fdd\u62a4\u91cd\u8981\u53c2\u6570</li>\n</ol>\n<p><strong>\u6570\u636e\u7248\u672c\u7ba1\u7406</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>data_v1.0/\n\u251c\u2500\u2500 raw/           # \u539f\u59cb\u6570\u636e\n\u251c\u2500\u2500 processed/     # \u5904\u7406\u540e\u6570\u636e\n\u251c\u2500\u2500 splits/        # \u8bad\u7ec3/\u9a8c\u8bc1/\u6d4b\u8bd5\u5212\u5206\n\u251c\u2500\u2500 metadata.json  # \u6570\u636e\u96c6\u5143\u4fe1\u606f\n\u2514\u2500\u2500 changelog.md   # \u53d8\u66f4\u8bb0\u5f55\n\ndata_v1.1/\n\u251c\u2500\u2500 incremental/   # \u589e\u91cf\u6570\u636e\n\u251c\u2500\u2500 merged/        # \u5408\u5e76\u540e\u5b8c\u6574\u6570\u636e\n\u2514\u2500\u2500 diff_report/   # \u53d8\u66f4\u5206\u6790\n</code></pre></div>\n\n<p>\ud83d\udca1 <strong>\u5b9e\u7528\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li>\u4fdd\u6301 10-20% \u7684\u9a8c\u8bc1\u96c6\u7a33\u5b9a\uff0c\u7528\u4e8e\u957f\u671f\u6027\u80fd\u8ffd\u8e2a</li>\n<li>\u4f7f\u7528\u6570\u636e\u54c8\u5e0c\u503c\u8ffd\u8e2a\u6570\u636e\u8840\u7f18</li>\n<li>\u5b9a\u671f\u8fdb\u884c\u5168\u91cf\u91cd\u8bad\uff0c\u91cd\u7f6e\u6a21\u578b\u72b6\u6001</li>\n</ul>\n<h2 id=\"34\">3.4 \u5408\u6210\u6570\u636e\u751f\u6210\u7b56\u7565</h2>\n<h3 id=\"341\">3.4.1 \u5408\u6210\u6570\u636e\u7684\u4ef7\u503c\u4e0e\u6311\u6218</h3>\n<p><strong>\u4ef7\u503c</strong>\uff1a</p>\n<ul>\n<li>\u89c4\u6a21\u5316\uff1a\u4f4e\u6210\u672c\u5927\u89c4\u6a21\u751f\u6210</li>\n<li>\u53ef\u63a7\u6027\uff1a\u7cbe\u786e\u63a7\u5236\u6570\u636e\u7279\u5f81</li>\n<li>\u9690\u79c1\u6027\uff1a\u907f\u514d\u771f\u5b9e\u6570\u636e\u9690\u79c1\u95ee\u9898</li>\n<li>\u5e73\u8861\u6027\uff1a\u8865\u5145\u7a00\u6709\u7c7b\u522b\u6570\u636e</li>\n</ul>\n<p><strong>\u6311\u6218</strong>\uff1a</p>\n<ul>\n<li>\u8d28\u91cf\u4fdd\u8bc1\uff1a\u907f\u514d\u9519\u8bef\u4f20\u64ad</li>\n<li>\u591a\u6837\u6027\uff1a\u9632\u6b62\u6a21\u5f0f\u574d\u7f29</li>\n<li>\u771f\u5b9e\u6027\uff1a\u4fdd\u6301\u4e0e\u771f\u5b9e\u5206\u5e03\u4e00\u81f4</li>\n</ul>\n<h3 id=\"342\">3.4.2 \u751f\u6210\u65b9\u6cd5\u5206\u7c7b</h3>\n<ol>\n<li><strong>\u6a21\u677f\u57fa\u7840\u751f\u6210</strong></li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;\u5c06\u4e0b\u5217</span><span class=\"si\">{\u8bed\u8a00A}</span><span class=\"s2\">\u7ffb\u8bd1\u6210</span><span class=\"si\">{\u8bed\u8a00B}</span><span class=\"s2\">\uff1a</span><span class=\"si\">{\u6587\u672c}</span><span class=\"s2\">&quot;</span>\n<span class=\"n\">instances</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;\u8bed\u8a00A&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\u82f1\u6587&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u8bed\u8a00B&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\u4e2d\u6587&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u6587\u672c&quot;</span><span class=\"p\">:</span> <span class=\"n\">text</span><span class=\"p\">}</span>\n    <span class=\"k\">for</span> <span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"n\">source_texts</span>\n<span class=\"p\">]</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u6270\u52a8\u57fa\u7840\u751f\u6210</strong></li>\n</ol>\n<p>\u539f\u59cb\u6837\u672c\u901a\u8fc7\u7cfb\u7edf\u6027\u6270\u52a8\u751f\u6210\u53d8\u4f53\uff1a</p>\n<ul>\n<li><strong>\u8bcd\u7ea7\u6270\u52a8</strong>\uff1a\u540c\u4e49\u8bcd\u66ff\u6362\u3001\u63d2\u5165\u3001\u5220\u9664</li>\n<li><strong>\u53e5\u7ea7\u6270\u52a8</strong>\uff1a\u6539\u5199\u3001\u5012\u88c5\u3001\u62c6\u5206\u5408\u5e76</li>\n<li><strong>\u8bed\u4e49\u6270\u52a8</strong>\uff1a\u5426\u5b9a\u3001\u6761\u4ef6\u53d8\u6362\u3001\u89c6\u89d2\u8f6c\u6362</li>\n</ul>\n<ol start=\"3\">\n<li><strong>\u6a21\u578b\u57fa\u7840\u751f\u6210</strong></li>\n</ol>\n<p>\u5229\u7528\u5927\u6a21\u578b\u751f\u6210\u8bad\u7ec3\u6570\u636e\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510</span>\n<span class=\"err\">\u2502</span><span class=\"w\">     </span><span class=\"k\">Self</span><span class=\"o\">-</span><span class=\"nx\">Instruct</span><span class=\"w\"> </span><span class=\"nx\">Pipeline</span><span class=\"w\">     </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524</span>\n<span class=\"err\">\u2502</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"nx\">\u79cd\u5b50\u4efb\u52a1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">175</span><span class=\"nx\">\u4e2a</span><span class=\"p\">)</span><span class=\"w\">             </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u2502</span><span class=\"w\">    </span><span class=\"err\">\u2193</span><span class=\"w\">                           </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u2502</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"nx\">\u6307\u4ee4\u751f\u6210</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">GPT\u751f\u6210\u65b0\u6307\u4ee4</span><span class=\"p\">)</span><span class=\"w\">     </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u2502</span><span class=\"w\">    </span><span class=\"err\">\u2193</span><span class=\"w\">                           </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u2502</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"nx\">\u6307\u4ee4\u8fc7\u6ee4</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">\u53bb\u91cd</span><span class=\"err\">\u3001</span><span class=\"nx\">\u8d28\u91cf\u7b5b\u9009</span><span class=\"p\">)</span><span class=\"w\">    </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u2502</span><span class=\"w\">    </span><span class=\"err\">\u2193</span><span class=\"w\">                           </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u2502</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"nx\">\u5b9e\u4f8b\u751f\u6210</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">\u8f93\u5165\u8f93\u51fa\u5bf9</span><span class=\"p\">)</span><span class=\"w\">        </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u2502</span><span class=\"w\">    </span><span class=\"err\">\u2193</span><span class=\"w\">                           </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u2502</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"nx\">\u8d28\u91cf\u9a8c\u8bc1</span><span class=\"w\">                    </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u2502</span><span class=\"w\">    </span><span class=\"err\">\u2193</span><span class=\"w\">                           </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u2502</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"nx\">\u52a0\u5165\u79cd\u5b50\u6c60</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">\u8fed\u4ee3</span><span class=\"p\">)</span><span class=\"w\">           </span><span class=\"err\">\u2502</span>\n<span class=\"err\">\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518</span>\n</code></pre></div>\n\n<h3 id=\"343\">3.4.3 \u77e5\u8bc6\u84b8\u998f\u4e0e\u6570\u636e\u589e\u5f3a</h3>\n<p><strong>\u77e5\u8bc6\u84b8\u998f\u6d41\u7a0b</strong>\uff1a\n$$\\mathcal{L}_{distill} = \\alpha \\cdot \\mathcal{L}_{CE}(y, \\hat{y}) + (1-\\alpha) \\cdot \\mathcal{L}_{KL}(p_{teacher}, p_{student})$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\mathcal{L}_{CE}$\uff1a\u4ea4\u53c9\u71b5\u635f\u5931\uff08hard label\uff09</li>\n<li>$\\mathcal{L}_{KL}$\uff1aKL\u6563\u5ea6\uff08soft label\uff09</li>\n<li>$\\alpha$\uff1a\u786c\u6807\u7b7e\u6743\u91cd</li>\n</ul>\n<p><strong>\u6570\u636e\u589e\u5f3a\u6280\u672f</strong>\uff1a</p>\n<ol>\n<li><strong>\u56de\u8bd1\u589e\u5f3a</strong>\uff08Back-translation\uff09</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u539f\u6587 \u2192 \u7ffb\u8bd1\u5230\u8bed\u8a00B \u2192 \u7ffb\u8bd1\u56de\u8bed\u8a00A \u2192 \u589e\u5f3a\u6837\u672c\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u94fe\u5f0f\u601d\u7ef4\u589e\u5f3a</strong>\uff08CoT Augmentation\uff09</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u95ee\u9898 \u2192 \u751f\u6210\u63a8\u7406\u6b65\u9aa4 \u2192 \u9a8c\u8bc1\u7b54\u6848 \u2192 \u7b5b\u9009\u9ad8\u8d28\u91cfCoT\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u5bf9\u6bd4\u5b66\u4e60\u589e\u5f3a</strong>\n   \u751f\u6210\u6b63\u4f8b\u548c\u8d1f\u4f8b\u5bf9\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u539f\u59cb\u6837\u672c \u2192 \u6b63\u4f8b\uff08\u76f8\u4f3c\u4f46\u4e0d\u540c\uff09\n        \u2192 \u8d1f\u4f8b\uff08\u8868\u9762\u76f8\u4f3c\u4f46\u8bed\u4e49\u4e0d\u540c\uff09\n</code></pre></div>\n\n<h3 id=\"344\">3.4.4 \u5408\u6210\u6570\u636e\u8d28\u91cf\u8bc4\u4f30</h3>\n<p><strong>\u81ea\u52a8\u8bc4\u4f30\u6307\u6807</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u56f0\u60d1\u5ea6\u8fc7\u6ee4</strong>\uff1a\n$$PPL_{threshold} = \\mu_{PPL} + k \\cdot \\sigma_{PPL}$$</p>\n</li>\n<li>\n<p><strong>\u591a\u6837\u6027\u5ea6\u91cf</strong>\uff1a\n   - N-gram\u591a\u6837\u6027\n   - \u8bed\u4e49\u5d4c\u5165\u591a\u6837\u6027\n   - \u53e5\u6cd5\u7ed3\u6784\u591a\u6837\u6027</p>\n</li>\n<li>\n<p><strong>\u4e00\u81f4\u6027\u68c0\u9a8c</strong>\uff1a\n   - \u81ea\u6d3d\u6027\uff1a\u591a\u6b21\u751f\u6210\u7684\u4e00\u81f4\u6027\n   - \u4e8b\u5b9e\u4e00\u81f4\u6027\uff1a\u4e0e\u77e5\u8bc6\u5e93\u5bf9\u6bd4\n   - \u903b\u8f91\u4e00\u81f4\u6027\uff1a\u63a8\u7406\u94fe\u9a8c\u8bc1</p>\n</li>\n</ol>\n<p><strong>\u4eba\u5de5\u8bc4\u4f30\u91c7\u6837</strong>\uff1a</p>\n<p>\u91c7\u7528\u5206\u5c42\u91c7\u6837\u786e\u4fdd\u8986\u76d6\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u603b\u4f53 \u2192 \u6309\u96be\u5ea6\u5206\u5c42 \u2192 \u6309\u7c7b\u578b\u5206\u5c42 \u2192 \u968f\u673a\u91c7\u6837 \u2192 \u4eba\u5de5\u8bc4\u4f30\n</code></pre></div>\n\n<p>\u26a0\ufe0f <strong>\u5e38\u89c1\u9677\u9631</strong>\uff1a</p>\n<ul>\n<li>\u8fc7\u5ea6\u4f9d\u8d56\u5355\u4e00\u751f\u6210\u6a21\u578b</li>\n<li>\u5ffd\u89c6\u751f\u6210\u6570\u636e\u7684\u5206\u5e03\u504f\u79fb</li>\n<li>\u7f3a\u4e4f\u7cfb\u7edf\u6027\u7684\u8d28\u91cf\u63a7\u5236</li>\n<li>\u5408\u6210\u6570\u636e\u6bd4\u4f8b\u8fc7\u9ad8\u5bfc\u81f4\u6027\u80fd\u9000\u5316</li>\n</ul>\n<h2 id=\"35\">3.5 \u6570\u636e\u914d\u6bd4\u4e0e\u8bfe\u7a0b\u5b66\u4e60</h2>\n<h3 id=\"351\">3.5.1 \u6570\u636e\u914d\u6bd4\u7684\u7406\u8bba\u57fa\u7840</h3>\n<p><strong>\u6700\u4f18\u914d\u6bd4\u95ee\u9898</strong>\uff1a</p>\n<p>\u7ed9\u5b9a $K$ \u7c7b\u4efb\u52a1\u6570\u636e $\\{D_1, D_2, ..., D_K\\}$\uff0c\u5bfb\u627e\u6700\u4f18\u6df7\u5408\u6bd4\u4f8b $\\{\\alpha_1, \\alpha_2, ..., \\alpha_K\\}$\uff1a\n$$\\min_{\\alpha} \\sum_{i=1}^{K} w_i \\cdot \\mathcal{L}_i(\\theta; \\alpha_i \\cdot D_i)$$\n\u7ea6\u675f\u6761\u4ef6\uff1a$\\sum_{i=1}^{K} \\alpha_i = 1, \\alpha_i \\geq 0$</p>\n<p><strong>\u914d\u6bd4\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u5747\u5300\u914d\u6bd4</strong>\uff1a$\\alpha_i = 1/K$</li>\n<li><strong>\u6309\u91cf\u914d\u6bd4</strong>\uff1a$\\alpha_i \\propto |D_i|$</li>\n<li><strong>\u6309\u6027\u80fd\u914d\u6bd4</strong>\uff1a$\\alpha_i \\propto 1/\\mathcal{L}_i$</li>\n<li><strong>\u52a8\u6001\u914d\u6bd4</strong>\uff1a\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8c03\u6574</li>\n</ol>\n<h3 id=\"352\">3.5.2 \u8bfe\u7a0b\u5b66\u4e60\u8bbe\u8ba1</h3>\n<p><strong>\u96be\u5ea6\u8bc4\u4f30</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u96be\u5ea6\u6307\u6807 = f(\u957f\u5ea6, \u590d\u6742\u5ea6, \u7a00\u6709\u5ea6, \u6b67\u4e49\u5ea6)\n</code></pre></div>\n\n<p><strong>\u8bfe\u7a0b\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u5355\u8c03\u9012\u589e\u8bfe\u7a0b</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u7b80\u5355\u6837\u672c \u2192 \u4e2d\u7b49\u6837\u672c \u2192 \u56f0\u96be\u6837\u672c\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u5faa\u73af\u8bfe\u7a0b</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">\u7b2c</span><span class=\"mi\">1</span><span class=\"err\">\u8f6e</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u7b80\u5355</span><span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"o\">%)</span>\n<span class=\"err\">\u7b2c</span><span class=\"mi\">2</span><span class=\"err\">\u8f6e</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u7b80\u5355</span><span class=\"o\">(</span><span class=\"mi\">50</span><span class=\"o\">%)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"err\">\u4e2d\u7b49</span><span class=\"o\">(</span><span class=\"mi\">50</span><span class=\"o\">%)</span>\n<span class=\"err\">\u7b2c</span><span class=\"mi\">3</span><span class=\"err\">\u8f6e</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u7b80\u5355</span><span class=\"o\">(</span><span class=\"mi\">25</span><span class=\"o\">%)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"err\">\u4e2d\u7b49</span><span class=\"o\">(</span><span class=\"mi\">50</span><span class=\"o\">%)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"err\">\u56f0\u96be</span><span class=\"o\">(</span><span class=\"mi\">25</span><span class=\"o\">%)</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u81ea\u9002\u5e94\u8bfe\u7a0b</strong>\uff1a\n   \u6839\u636e\u6a21\u578b\u5f53\u524d\u6027\u80fd\u52a8\u6001\u8c03\u6574\uff1a\n$$p(x) \\propto \\exp(-\\lambda \\cdot |difficulty(x) - competence(model)|)$$</li>\n</ol>\n<h3 id=\"353\">3.5.3 \u591a\u4efb\u52a1\u6570\u636e\u6df7\u5408</h3>\n<p><strong>\u6df7\u5408\u7c92\u5ea6\u9009\u62e9</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6837\u672c\u7ea7\u6df7\u5408</strong>\uff1a\u6bcf\u4e2abatch\u5305\u542b\u591a\u79cd\u4efb\u52a1\n   - \u4f18\u70b9\uff1a\u68af\u5ea6\u66f4\u65b0\u5e73\u6ed1\n   - \u7f3a\u70b9\uff1a\u53ef\u80fd\u76f8\u4e92\u5e72\u6270</p>\n</li>\n<li>\n<p><strong>\u6279\u6b21\u7ea7\u6df7\u5408</strong>\uff1a\u4e0d\u540cbatch\u6765\u81ea\u4e0d\u540c\u4efb\u52a1\n   - \u4f18\u70b9\uff1a\u4efb\u52a1\u72ec\u7acb\u6027\u597d\n   - \u7f3a\u70b9\uff1a\u53ef\u80fd\u5bfc\u81f4\u9707\u8361</p>\n</li>\n<li>\n<p><strong>\u9636\u6bb5\u7ea7\u6df7\u5408</strong>\uff1a\u5206\u9636\u6bb5\u8bad\u7ec3\u4e0d\u540c\u4efb\u52a1\n   - \u4f18\u70b9\uff1a\u4e13\u6ce8\u5ea6\u9ad8\n   - \u7f3a\u70b9\uff1a\u6613\u9057\u5fd8\u65e9\u671f\u4efb\u52a1</p>\n</li>\n</ol>\n<p><strong>\u91c7\u6837\u7b97\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6e29\u5ea6\u91c7\u6837</span>\n<span class=\"k\">def</span> <span class=\"nf\">temperature_sampling</span><span class=\"p\">(</span><span class=\"n\">task_sizes</span><span class=\"p\">,</span> <span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">):</span>\n    <span class=\"n\">probs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">task_sizes</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"n\">temperature</span><span class=\"p\">)</span>\n    <span class=\"n\">probs</span> <span class=\"o\">=</span> <span class=\"n\">probs</span> <span class=\"o\">/</span> <span class=\"n\">probs</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">probs</span>\n\n<span class=\"c1\"># temperature &gt; 1: \u66f4\u5747\u5300</span>\n<span class=\"c1\"># temperature &lt; 1: \u66f4\u504f\u5411\u5927\u4efb\u52a1</span>\n<span class=\"c1\"># temperature = 1: \u6309\u6bd4\u4f8b\u91c7\u6837</span>\n</code></pre></div>\n\n<h3 id=\"354\">3.5.4 \u6570\u636e\u914d\u6bd4\u7684\u5b9e\u9a8c\u9a8c\u8bc1</h3>\n<p><strong>\u7f51\u683c\u641c\u7d22\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u914d\u6bd4\u5b9e\u9a8c\u77e9\u9635\uff1a\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Task A \u2502 Task B \u2502 Task C \u2502 Score \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  0.33  \u2502  0.33  \u2502  0.34  \u2502  0.85 \u2502\n\u2502  0.50  \u2502  0.25  \u2502  0.25  \u2502  0.87 \u2502\n\u2502  0.25  \u2502  0.50  \u2502  0.25  \u2502  0.86 \u2502\n\u2502  0.60  \u2502  0.20  \u2502  0.20  \u2502  0.88 \u2502 \u2190 \u6700\u4f18\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<p><strong>\u8d1d\u53f6\u65af\u4f18\u5316</strong>\uff1a</p>\n<p>\u4f7f\u7528\u9ad8\u65af\u8fc7\u7a0b\u5efa\u6a21\u914d\u6bd4\u4e0e\u6027\u80fd\u7684\u5173\u7cfb\uff1a\n$$f(\\alpha) \\sim \\mathcal{GP}(\\mu(\\alpha), k(\\alpha, \\alpha'))$$</p>\n<p>\u901a\u8fc7\u6700\u5927\u5316\u91c7\u96c6\u51fd\u6570\u9009\u62e9\u4e0b\u4e00\u4e2a\u5b9e\u9a8c\u70b9\u3002</p>\n<p>\ud83d\udca1 <strong>\u5b9e\u7528\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li>\u5148\u7528\u5c0f\u89c4\u6a21\u5b9e\u9a8c\u5feb\u901f\u63a2\u7d22\u914d\u6bd4\u7a7a\u95f4</li>\n<li>\u5173\u6ce8\u4efb\u52a1\u95f4\u7684\u534f\u540c\u6548\u5e94\u548c\u8d1f\u8fc1\u79fb</li>\n<li>\u4fdd\u7559\u4e00\u5b9a\u6bd4\u4f8b\u7684\"\u4fdd\u62a4\u6570\u636e\"\u9632\u6b62\u80fd\u529b\u9000\u5316</li>\n<li>\u4f7f\u7528\u65e9\u505c\u907f\u514d\u8fc7\u62df\u5408\u67d0\u7c7b\u4efb\u52a1</li>\n</ul>\n<h2 id=\"_3\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u7cfb\u7edf\u4ecb\u7ecd\u4e86\u540e\u8bad\u7ec3\u6570\u636e\u5de5\u7a0b\u7684\u5b8c\u6574\u6d41\u7a0b\u3002\u6838\u5fc3\u8981\u70b9\u5305\u62ec\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6570\u636e\u8d28\u91cf\u4f18\u4e8e\u6570\u91cf</strong>\uff1a\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u5c0f\u89c4\u6a21\u9ad8\u8d28\u91cf\u6570\u636e\u5f80\u5f80\u4f18\u4e8e\u5927\u89c4\u6a21\u4f4e\u8d28\u91cf\u6570\u636e</p>\n</li>\n<li>\n<p><strong>\u6807\u6ce8\u4f53\u7cfb\u662f\u57fa\u77f3</strong>\uff1a\u5b8c\u5584\u7684\u6807\u6ce8\u89c4\u8303\u3001\u8d28\u91cf\u63a7\u5236\u548c\u6807\u6ce8\u8005\u7ba1\u7406\u51b3\u5b9a\u6570\u636e\u8d28\u91cf\u4e0a\u9650</p>\n</li>\n<li>\n<p><strong>\u6570\u636e\u98de\u8f6e\u9a71\u52a8\u8fed\u4ee3</strong>\uff1a\u901a\u8fc7\u90e8\u7f72-\u6536\u96c6-\u6807\u6ce8-\u8bad\u7ec3\u7684\u5faa\u73af\u5b9e\u73b0\u6301\u7eed\u6539\u8fdb</p>\n</li>\n<li>\n<p><strong>\u5408\u6210\u6570\u636e\u4f5c\u4e3a\u8865\u5145</strong>\uff1a\u5408\u7406\u4f7f\u7528\u5408\u6210\u6570\u636e\u53ef\u4ee5\u63d0\u5347\u6548\u7387\uff0c\u4f46\u9700\u8981\u4e25\u683c\u7684\u8d28\u91cf\u63a7\u5236</p>\n</li>\n<li>\n<p><strong>\u914d\u6bd4\u4e0e\u8bfe\u7a0b\u5f71\u54cd\u6536\u655b</strong>\uff1a\u6570\u636e\u914d\u6bd4\u548c\u8bfe\u7a0b\u8bbe\u8ba1\u76f4\u63a5\u5f71\u54cd\u8bad\u7ec3\u6548\u7387\u548c\u6700\u7ec8\u6027\u80fd</p>\n</li>\n</ol>\n<p><strong>\u5173\u952e\u516c\u5f0f\u56de\u987e</strong>\uff1a</p>\n<ul>\n<li>\u6570\u636e\u8d28\u91cf\u8bc4\u5206\uff1a$Q_{data} = \\sum \\omega_i \\cdot Q_i$</li>\n<li>\u6807\u6ce8\u4e00\u81f4\u6027\uff1a$\\kappa = \\frac{P_o - P_e}{1 - P_e}$</li>\n<li>\u77e5\u8bc6\u84b8\u998f\u635f\u5931\uff1a$\\mathcal{L} = \\alpha \\cdot \\mathcal{L}_{CE} + (1-\\alpha) \\cdot \\mathcal{L}_{KL}$</li>\n<li>\u6700\u4f18\u914d\u6bd4\uff1a$\\min_{\\alpha} \\sum w_i \\cdot \\mathcal{L}_i(\\theta; \\alpha_i \\cdot D_i)$</li>\n</ul>\n<h2 id=\"_4\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_5\">\u57fa\u7840\u9898</h3>\n<p><strong>\u7ec3\u4e60 3.1</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u591a\u8f6e\u5bf9\u8bdd\u4efb\u52a1\u7684\u6807\u6ce8\u89c4\u8303\uff0c\u5305\u62ec\u683c\u5f0f\u8981\u6c42\u3001\u8d28\u91cf\u6807\u51c6\u548c\u8bc4\u5206\u7ec6\u5219\u3002</p>\n<details>\n<summary>\ud83d\udca1 \u63d0\u793a</summary>\n<p>\u8003\u8651\u4ee5\u4e0b\u8981\u7d20\uff1a</p>\n<ul>\n<li>\u5bf9\u8bdd\u7684\u8fde\u8d2f\u6027\u548c\u4e0a\u4e0b\u6587\u4f9d\u8d56</li>\n<li>\u89d2\u8272\u4e00\u81f4\u6027</li>\n<li>\u4fe1\u606f\u7684\u7d2f\u79ef\u6027</li>\n<li>\u9519\u8bef\u4f20\u64ad\u7684\u5904\u7406</li>\n</ul>\n</details>\n<details>\n<summary>\ud83d\udcdd \u53c2\u8003\u7b54\u6848</summary>\n<p>\u6807\u6ce8\u89c4\u8303\u5e94\u5305\u62ec\uff1a</p>\n<ol>\n<li>\n<p><strong>\u683c\u5f0f\u89c4\u8303</strong>\uff1a\n   - \u660e\u786e\u7684\u8f6e\u6b21\u6807\u8bb0\n   - \u89d2\u8272\u6807\u8bc6\uff08\u7528\u6237/\u52a9\u624b\uff09\n   - \u4e0a\u4e0b\u6587\u7a97\u53e3\u5b9a\u4e49</p>\n</li>\n<li>\n<p><strong>\u8d28\u91cf\u7ef4\u5ea6</strong>\uff1a\n   - \u76f8\u5173\u6027\uff1a\u56de\u590d\u662f\u5426\u9488\u5bf9\u5f53\u524d\u95ee\u9898\n   - \u8fde\u8d2f\u6027\uff1a\u662f\u5426\u4e0e\u5386\u53f2\u5bf9\u8bdd\u4e00\u81f4\n   - \u4fe1\u606f\u6027\uff1a\u662f\u5426\u63d0\u4f9b\u6709\u4ef7\u503c\u4fe1\u606f\n   - \u81ea\u7136\u5ea6\uff1a\u8bed\u8a00\u662f\u5426\u6d41\u7545\u81ea\u7136</p>\n</li>\n<li>\n<p><strong>\u8bc4\u5206\u6807\u51c6</strong>\uff1a\n   - 5\u5206\u5236\uff0c\u6bcf\u4e2a\u7ef4\u5ea6\u72ec\u7acb\u8bc4\u5206\n   - \u603b\u5206\u52a0\u6743\u5e73\u5747\n   - \u4f4e\u4e8e3\u5206\u9700\u8981\u91cd\u65b0\u6807\u6ce8</p>\n</li>\n<li>\n<p><strong>\u7279\u6b8a\u60c5\u51b5\u5904\u7406</strong>\uff1a\n   - \u8bdd\u9898\u8f6c\u6362\u7684\u5408\u7406\u6027\u5224\u65ad\n   - \u6307\u4ee3\u6d88\u89e3\u7684\u51c6\u786e\u6027\n   - \u591a\u8f6e\u4f9d\u8d56\u7684\u5b8c\u6574\u6027\u68c0\u67e5</p>\n</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 3.2</strong>\uff1a\u8ba1\u7b97\u4e24\u4e2a\u6807\u6ce8\u8005\u7684 Cohen's Kappa \u7cfb\u6570\u3002\u6807\u6ce8\u8005A\u548cB\u5bf9100\u4e2a\u6837\u672c\u8fdb\u884c\u4e8c\u5206\u7c7b\u6807\u6ce8\uff0c\u5176\u4e2d\uff1a</p>\n<ul>\n<li>\u4e24\u8005\u90fd\u6807\u6ce8\u4e3a\u6b63\u4f8b\uff1a40\u4e2a</li>\n<li>\u4e24\u8005\u90fd\u6807\u6ce8\u4e3a\u8d1f\u4f8b\uff1a35\u4e2a  </li>\n<li>A\u6b63B\u8d1f\uff1a15\u4e2a</li>\n<li>A\u8d1fB\u6b63\uff1a10\u4e2a</li>\n</ul>\n<details>\n<summary>\ud83d\udca1 \u63d0\u793a</summary>\n<p>Kappa \u516c\u5f0f\uff1a$\\kappa = \\frac{P_o - P_e}{1 - P_e}$</p>\n<p>\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$P_o$ = \u89c2\u5bdf\u4e00\u81f4\u6027</li>\n<li>$P_e$ = \u671f\u671b\u4e00\u81f4\u6027</li>\n</ul>\n</details>\n<details>\n<summary>\ud83d\udcdd \u53c2\u8003\u7b54\u6848</summary>\n<p>\u8ba1\u7b97\u6b65\u9aa4\uff1a</p>\n<ol>\n<li>\n<p><strong>\u89c2\u5bdf\u4e00\u81f4\u6027</strong>\uff1a\n   $P_o = \\frac{40 + 35}{100} = 0.75$</p>\n</li>\n<li>\n<p><strong>\u8fb9\u9645\u6982\u7387</strong>\uff1a\n   - A\u6807\u6b63\u4f8b\uff1a$\\frac{40 + 15}{100} = 0.55$\n   - B\u6807\u6b63\u4f8b\uff1a$\\frac{40 + 10}{100} = 0.50$\n   - A\u6807\u8d1f\u4f8b\uff1a$\\frac{35 + 10}{100} = 0.45$\n   - B\u6807\u8d1f\u4f8b\uff1a$\\frac{35 + 15}{100} = 0.50$</p>\n</li>\n<li>\n<p><strong>\u671f\u671b\u4e00\u81f4\u6027</strong>\uff1a\n   $P_e = 0.55 \\times 0.50 + 0.45 \\times 0.50 = 0.275 + 0.225 = 0.50$</p>\n</li>\n<li>\n<p><strong>Kappa\u7cfb\u6570</strong>\uff1a\n   $\\kappa = \\frac{0.75 - 0.50}{1 - 0.50} = \\frac{0.25}{0.50} = 0.50$</p>\n</li>\n</ol>\n<p>\u7ed3\u679c\uff1a\u03ba = 0.50\uff0c\u8868\u793a\u4e2d\u7b49\u7a0b\u5ea6\u7684\u4e00\u81f4\u6027\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e60 3.3</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u98de\u8f6e\u7684\u6700\u5c0f\u53ef\u884c\u7248\u672c\uff08MVP\uff09\uff0c\u5305\u62ec\u6570\u636e\u6536\u96c6\u3001\u7b5b\u9009\u3001\u6807\u6ce8\u548c\u8bad\u7ec3\u7684\u5b8c\u6574\u6d41\u7a0b\u3002</p>\n<details>\n<summary>\ud83d\udca1 \u63d0\u793a</summary>\n<p>\u8003\u8651\uff1a</p>\n<ul>\n<li>\u6700\u7b80\u5355\u7684\u53cd\u9988\u673a\u5236</li>\n<li>\u81ea\u52a8\u5316vs\u4eba\u5de5\u7684\u5e73\u8861</li>\n<li>\u8fed\u4ee3\u5468\u671f\u7684\u8bbe\u5b9a</li>\n<li>\u8bc4\u4f30\u6307\u6807\u7684\u9009\u62e9</li>\n</ul>\n</details>\n<details>\n<summary>\ud83d\udcdd \u53c2\u8003\u7b54\u6848</summary>\n<p>MVP \u6570\u636e\u98de\u8f6e\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6570\u636e\u6536\u96c6\uff08\u6bcf\u65e5\uff09</strong>\uff1a\n   - \u7528\u6237\u67e5\u8be2\u65e5\u5fd7\n   - \u7b80\u5355\u7684\ud83d\udc4d/\ud83d\udc4e\u53cd\u9988\n   - \u54cd\u5e94\u65f6\u95f4\u548c\u91cd\u8bd5\u6b21\u6570</p>\n</li>\n<li>\n<p><strong>\u6570\u636e\u7b5b\u9009\uff08\u6bcf\u5468\uff09</strong>\uff1a\n   - \u7b5b\u9009\u6807\u51c6\uff1a</p>\n<ul>\n<li>\u6240\u6709\ud83d\udc4e\u7684\u6837\u672c</li>\n<li>\u54cd\u5e94\u65f6\u95f4&gt;5\u79d2\u7684\u6837\u672c</li>\n<li>\u91cd\u8bd5&gt;2\u6b21\u7684\u6837\u672c</li>\n<li>\u6bcf\u5468\u9009\u62e9Top 100\u6837\u672c</li>\n</ul>\n</li>\n<li>\n<p><strong>\u6807\u6ce8\u6d41\u7a0b\uff08\u6bcf\u5468\uff09</strong>\uff1a\n   - 2\u540d\u6807\u6ce8\u8005\u72ec\u7acb\u6807\u6ce8\n   - \u4e0d\u4e00\u81f4\u7684\u7531\u7b2c3\u4eba\u4ef2\u88c1\n   - \u751f\u6210\u6539\u8fdb\u7684\u56de\u590d</p>\n</li>\n<li>\n<p><strong>\u6a21\u578b\u66f4\u65b0\uff08\u6bcf\u4e24\u5468\uff09</strong>\uff1a\n   - \u7d2f\u79ef200\u4e2a\u65b0\u6837\u672c\n   - \u6df7\u540810%\u5386\u53f2\u6570\u636e\n   - \u589e\u91cf\u8bad\u7ec32\u4e2aepoch</p>\n</li>\n<li>\n<p><strong>\u8bc4\u4f30\u9a8c\u8bc1</strong>\uff1a\n   - \u4fdd\u6301\u56fa\u5b9a\u6d4b\u8bd5\u96c6\n   - A/B\u6d4b\u8bd5\uff085%\u6d41\u91cf\uff09\n   - \u5173\u952e\u6307\u6807\uff1a\u6ee1\u610f\u5ea6\u63d0\u5347&gt;2%\u5219\u5168\u91cf</p>\n</li>\n</ol>\n</details>\n<h3 id=\"_6\">\u6311\u6218\u9898</h3>\n<p><strong>\u7ec3\u4e60 3.4</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u81ea\u9002\u5e94\u7684\u6570\u636e\u914d\u6bd4\u7b97\u6cd5\uff0c\u80fd\u591f\u6839\u636e\u6a21\u578b\u5728\u4e0d\u540c\u4efb\u52a1\u4e0a\u7684\u8868\u73b0\u52a8\u6001\u8c03\u6574\u8bad\u7ec3\u6570\u636e\u7684\u91c7\u6837\u6bd4\u4f8b\u3002</p>\n<details>\n<summary>\ud83d\udca1 \u63d0\u793a</summary>\n<p>\u8003\u8651\uff1a</p>\n<ul>\n<li>\u5982\u4f55\u5ea6\u91cf\u5404\u4efb\u52a1\u7684\u5b66\u4e60\u8fdb\u5ea6</li>\n<li>\u5982\u4f55\u5e73\u8861\u63a2\u7d22\u4e0e\u5229\u7528</li>\n<li>\u5982\u4f55\u907f\u514d\u67d0\u4e9b\u4efb\u52a1\u88ab\"\u997f\u6b7b\"</li>\n<li>\u5982\u4f55\u5904\u7406\u4efb\u52a1\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb</li>\n</ul>\n</details>\n<details>\n<summary>\ud83d\udcdd \u53c2\u8003\u7b54\u6848</summary>\n<p>\u81ea\u9002\u5e94\u914d\u6bd4\u7b97\u6cd5\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li><strong>\u6027\u80fd\u8ffd\u8e2a</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">performance</span><span class=\"p\">[</span><span class=\"n\">task</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">exponential_moving_average</span><span class=\"p\">(</span>\n    <span class=\"n\">current_loss</span><span class=\"p\">,</span> \n    <span class=\"n\">historical_performance</span><span class=\"p\">,</span>\n    <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u5b66\u4e60\u8fdb\u5ea6\u8bc4\u4f30</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">progress</span><span class=\"p\">[</span><span class=\"n\">task</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">current_loss</span> <span class=\"o\">/</span> <span class=\"n\">initial_loss</span><span class=\"p\">)</span>\n<span class=\"n\">learning_rate</span><span class=\"p\">[</span><span class=\"n\">task</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">d</span><span class=\"p\">(</span><span class=\"n\">progress</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">d</span><span class=\"p\">(</span><span class=\"n\">steps</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u914d\u6bd4\u66f4\u65b0\u89c4\u5219</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u57fa\u7840\u914d\u6bd4</span>\n<span class=\"n\">base_ratio</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"n\">num_tasks</span>\n\n<span class=\"c1\"># \u6027\u80fd\u8c03\u6574\u9879</span>\n<span class=\"n\">perf_adjust</span> <span class=\"o\">=</span> <span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">performance</span> <span class=\"o\">/</span> <span class=\"n\">temperature</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># \u8fdb\u5ea6\u8c03\u6574\u9879</span>\n<span class=\"n\">progress_adjust</span> <span class=\"o\">=</span> <span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">learning_rate</span> <span class=\"o\">/</span> <span class=\"n\">temperature</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># \u6700\u7ec8\u914d\u6bd4</span>\n<span class=\"n\">ratio</span><span class=\"p\">[</span><span class=\"n\">task</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">base_ratio</span> <span class=\"o\">+</span> \n              <span class=\"n\">\u03b1</span> <span class=\"o\">*</span> <span class=\"n\">perf_adjust</span> <span class=\"o\">+</span> \n              <span class=\"n\">\u03b2</span> <span class=\"o\">*</span> <span class=\"n\">progress_adjust</span>\n\n<span class=\"c1\"># \u5f52\u4e00\u5316</span>\n<span class=\"n\">ratio</span> <span class=\"o\">=</span> <span class=\"n\">ratio</span> <span class=\"o\">/</span> <span class=\"n\">ratio</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># \u4fdd\u5e95\u673a\u5236</span>\n<span class=\"n\">ratio</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">ratio</span><span class=\"p\">,</span> <span class=\"n\">min_ratio</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"4\">\n<li>\n<p><strong>\u63a2\u7d22\u673a\u5236</strong>\uff1a\n   - \u6bcfN\u4e2aepoch\u968f\u673a\u63d0\u5347\u67d0\u4e2a\u4efb\u52a1\u6bd4\u4f8b\n   - \u4f7f\u7528\u03b5-greedy\u7b56\u7565\n   - \u8bb0\u5f55\u63a2\u7d22\u7ed3\u679c\u7528\u4e8e\u672a\u6765\u51b3\u7b56</p>\n</li>\n<li>\n<p><strong>\u7ea6\u675f\u6761\u4ef6</strong>\uff1a\n   - \u6700\u5c0f\u6bd4\u4f8b\uff1amin_ratio = 0.05\n   - \u6700\u5927\u6bd4\u4f8b\uff1amax_ratio = 0.5\n   - \u5e73\u6ed1\u66f4\u65b0\uff1a\u9650\u5236\u76f8\u90bbepoch\u7684\u53d8\u5316\u7387</p>\n</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 3.5</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u5408\u6210\u6570\u636e\u8d28\u91cf\u8bc4\u4f30\u7cfb\u7edf\uff0c\u80fd\u591f\u81ea\u52a8\u8bc6\u522b\u548c\u8fc7\u6ee4\u4f4e\u8d28\u91cf\u7684\u751f\u6210\u6570\u636e\u3002</p>\n<details>\n<summary>\ud83d\udca1 \u63d0\u793a</summary>\n<p>\u4ece\u591a\u4e2a\u7ef4\u5ea6\u8bc4\u4f30\uff1a</p>\n<ul>\n<li>\u8bed\u8a00\u8d28\u91cf</li>\n<li>\u4e8b\u5b9e\u51c6\u786e\u6027</li>\n<li>\u4efb\u52a1\u76f8\u5173\u6027</li>\n<li>\u4e0e\u771f\u5b9e\u6570\u636e\u7684\u5206\u5e03\u5dee\u5f02</li>\n</ul>\n</details>\n<details>\n<summary>\ud83d\udcdd \u53c2\u8003\u7b54\u6848</summary>\n<p>\u8d28\u91cf\u8bc4\u4f30\u7cfb\u7edf\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li><strong>\u591a\u7ef4\u5ea6\u8bc4\u5206\u5668</strong>\uff1a</li>\n</ol>\n<p>a) <strong>\u6d41\u7545\u5ea6\u8bc4\u5206</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">fluency</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"n\">perplexity</span> <span class=\"o\">/</span> <span class=\"n\">baseline_ppl</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>b) <strong>\u591a\u6837\u6027\u8bc4\u5206</strong>\uff1a\n   <code>python\n   diversity = (unique_ngrams / total_ngrams) * \n              (1 - self_bleu_score)</code></p>\n<p>c) <strong>\u4e00\u81f4\u6027\u8bc4\u5206</strong>\uff1a\n   <code>python\n   # \u591a\u6b21\u751f\u6210\u7684\u4e00\u81f4\u6027\n   consistency = mean_pairwise_similarity(\n       multiple_generations\n   )</code></p>\n<p>d) <strong>\u76f8\u5173\u6027\u8bc4\u5206</strong>\uff1a\n   <code>python\n   relevance = cosine_similarity(\n       task_embedding, \n       response_embedding\n   )</code></p>\n<ol start=\"2\">\n<li><strong>\u5f02\u5e38\u68c0\u6d4b</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u4f7f\u7528\u5b64\u7acb\u68ee\u6797\u68c0\u6d4b\u5f02\u5e38</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.ensemble</span> <span class=\"kn\">import</span> <span class=\"n\">IsolationForest</span>\n\n<span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"n\">extract_features</span><span class=\"p\">(</span><span class=\"n\">synthetic_data</span><span class=\"p\">)</span>\n<span class=\"n\">detector</span> <span class=\"o\">=</span> <span class=\"n\">IsolationForest</span><span class=\"p\">(</span><span class=\"n\">contamination</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">outliers</span> <span class=\"o\">=</span> <span class=\"n\">detector</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u5206\u5e03\u5339\u914d</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># KL\u6563\u5ea6\u68c0\u6d4b\u5206\u5e03\u504f\u79fb</span>\n<span class=\"n\">kl_div</span> <span class=\"o\">=</span> <span class=\"n\">kl_divergence</span><span class=\"p\">(</span>\n    <span class=\"n\">real_data_distribution</span><span class=\"p\">,</span>\n    <span class=\"n\">synthetic_data_distribution</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">kl_div</span> <span class=\"o\">&gt;</span> <span class=\"n\">threshold</span><span class=\"p\">:</span>\n    <span class=\"n\">flag_as_distribution_shift</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<ol start=\"4\">\n<li><strong>\u96c6\u6210\u51b3\u7b56</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">quality_score</span> <span class=\"o\">=</span> <span class=\"n\">weighted_sum</span><span class=\"p\">([</span>\n    <span class=\"n\">fluency</span> <span class=\"o\">*</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span>\n    <span class=\"n\">diversity</span> <span class=\"o\">*</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span>\n    <span class=\"n\">consistency</span> <span class=\"o\">*</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span>\n    <span class=\"n\">relevance</span> <span class=\"o\">*</span> <span class=\"mf\">0.3</span>\n<span class=\"p\">])</span>\n\n<span class=\"k\">if</span> <span class=\"n\">quality_score</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.6</span> <span class=\"ow\">or</span> <span class=\"n\">is_outlier</span><span class=\"p\">:</span>\n    <span class=\"n\">filter_out</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<ol start=\"5\">\n<li><strong>\u4eba\u5de5\u9a8c\u8bc1\u91c7\u6837</strong>\uff1a\n   - \u9ad8\u7f6e\u4fe1\u5ea6\u901a\u8fc7\uff1a\u76f4\u63a5\u4f7f\u7528\n   - \u4e2d\u7f6e\u4fe1\u5ea6\uff1a\u6309\u6bd4\u4f8b\u91c7\u6837\u9a8c\u8bc1\n   - \u4f4e\u7f6e\u4fe1\u5ea6\uff1a\u5168\u90e8\u4eba\u5de5\u5ba1\u6838</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 3.6</strong>\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b10\u4e2a\u4e0d\u540c\u96be\u5ea6\u7b49\u7ea7\u4efb\u52a1\u7684\u6570\u636e\u96c6\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u8bfe\u7a0b\u5b66\u4e60\u7b56\u7565\uff0c\u4f7f\u6a21\u578b\u8bad\u7ec3\u6548\u7387\u6700\u5927\u5316\u3002</p>\n<details>\n<summary>\ud83d\udca1 \u63d0\u793a</summary>\n<p>\u8003\u8651\uff1a</p>\n<ul>\n<li>\u96be\u5ea6\u8bc4\u4f30\u7684\u5ba2\u89c2\u6307\u6807</li>\n<li>\u8bfe\u7a0b\u7684\u5e73\u6ed1\u8fc7\u6e21</li>\n<li>\u9632\u6b62\u707e\u96be\u6027\u9057\u5fd8</li>\n<li>\u6536\u655b\u901f\u5ea6vs\u6700\u7ec8\u6027\u80fd\u7684\u6743\u8861</li>\n</ul>\n</details>\n<details>\n<summary>\ud83d\udcdd \u53c2\u8003\u7b54\u6848</summary>\n<p>\u8bfe\u7a0b\u5b66\u4e60\u7b56\u7565\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li><strong>\u96be\u5ea6\u91cf\u5316</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">difficulty</span> <span class=\"o\">=</span> <span class=\"mf\">0.3</span> <span class=\"o\">*</span> <span class=\"n\">length_score</span> <span class=\"o\">+</span> \n             <span class=\"mf\">0.2</span> <span class=\"o\">*</span> <span class=\"n\">vocabulary_score</span> <span class=\"o\">+</span>\n             <span class=\"mf\">0.3</span> <span class=\"o\">*</span> <span class=\"n\">reasoning_steps</span> <span class=\"o\">+</span>\n             <span class=\"mf\">0.2</span> <span class=\"o\">*</span> <span class=\"n\">ambiguity_score</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li>\n<p><strong>\u5206\u6876\u7b56\u7565</strong>\uff1a\n   - Level 1-3: \u57fa\u7840\u4efb\u52a1\uff0830%\uff09\n   - Level 4-6: \u4e2d\u7ea7\u4efb\u52a1\uff0840%\uff09\n   - Level 7-10: \u9ad8\u7ea7\u4efb\u52a1\uff0830%\uff09</p>\n</li>\n<li>\n<p><strong>\u6e10\u8fdb\u5f0f\u8bfe\u7a0b</strong>\uff1a</p>\n</li>\n</ol>\n<p><strong>\u9636\u6bb51\uff08Epoch 1-5\uff09</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>Level 1-3: 70%\nLevel 4-6: 25%\nLevel 7-10: 5%\n</code></pre></div>\n\n<p><strong>\u9636\u6bb52\uff08Epoch 6-10\uff09</strong>\uff1a\n   <code>Level 1-3: 40%\n   Level 4-6: 40%\n   Level 7-10: 20%</code></p>\n<p><strong>\u9636\u6bb53\uff08Epoch 11-15\uff09</strong>\uff1a\n   <code>Level 1-3: 20%\n   Level 4-6: 40%\n   Level 7-10: 40%</code></p>\n<p><strong>\u9636\u6bb54\uff08Epoch 16+\uff09</strong>\uff1a\n   <code>\u5747\u5300\u5206\u5e03\u6216\u57fa\u4e8e\u6027\u80fd\u7684\u81ea\u9002\u5e94\u91c7\u6837</code></p>\n<ol start=\"4\">\n<li>\n<p><strong>\u53cd\u9057\u5fd8\u673a\u5236</strong>\uff1a\n   - \u6bcf\u4e2a\u9636\u6bb5\u4fdd\u755920%\u7684\u524d\u671f\u6570\u636e\n   - \u4f7f\u7528\u7ecf\u9a8c\u56de\u653e\u7f13\u51b2\u533a\n   - \u5b9a\u671f\u5728\u65e9\u671f\u4efb\u52a1\u4e0a\u8bc4\u4f30</p>\n</li>\n<li>\n<p><strong>\u65e9\u505c\u6761\u4ef6</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">val_loss_increase_count</span> <span class=\"o\">&gt;</span> <span class=\"n\">patience</span> <span class=\"ow\">and</span>\n    <span class=\"n\">all_levels_coverage</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.8</span><span class=\"p\">):</span>\n    <span class=\"n\">stop_training</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<ol start=\"6\">\n<li><strong>\u52a8\u6001\u8c03\u6574</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u57fa\u4e8e\u5b66\u4e60\u66f2\u7ebf\u8c03\u6574\u8fdb\u5ea6</span>\n<span class=\"k\">if</span> <span class=\"n\">learning_plateaued</span><span class=\"p\">(</span><span class=\"n\">level_k</span><span class=\"p\">):</span>\n    <span class=\"n\">increase_difficulty_ratio</span><span class=\"p\">(</span><span class=\"n\">level_k</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre></div>\n\n</details>\n<p><strong>\u7ec3\u4e60 3.7</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u8840\u7f18\u8ffd\u8e2a\u7cfb\u7edf\uff0c\u80fd\u591f\u8ffd\u8e2a\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u4ece\u539f\u59cb\u6570\u636e\u5230\u6700\u7ec8\u4f7f\u7528\u7684\u5b8c\u6574\u5386\u53f2\u3002</p>\n<details>\n<summary>\ud83d\udca1 \u63d0\u793a</summary>\n<p>\u8003\u8651\uff1a</p>\n<ul>\n<li>\u6570\u636e\u7684\u7248\u672c\u63a7\u5236</li>\n<li>\u53d8\u6362\u64cd\u4f5c\u7684\u8bb0\u5f55</li>\n<li>\u6027\u80fd\u5f52\u56e0\u5206\u6790</li>\n<li>\u5b58\u50a8\u548c\u67e5\u8be2\u6548\u7387</li>\n</ul>\n</details>\n<details>\n<summary>\ud83d\udcdd \u53c2\u8003\u7b54\u6848</summary>\n<p>\u6570\u636e\u8840\u7f18\u7cfb\u7edf\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li><strong>\u6570\u636e\u6a21\u578b</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">DataLineage</span><span class=\"p\">:</span>\n    <span class=\"n\">sample_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>  <span class=\"c1\"># \u552f\u4e00\u6807\u8bc6</span>\n    <span class=\"n\">source_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>  <span class=\"c1\"># \u539f\u59cb\u6570\u636eID</span>\n    <span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">str</span>    <span class=\"c1\"># \u6570\u636e\u7248\u672c</span>\n\n    <span class=\"n\">transformations</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[{</span>\n        <span class=\"s1\">&#39;operation&#39;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;timestamp&#39;</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;parameters&#39;</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;operator&#39;</span><span class=\"p\">:</span> <span class=\"nb\">str</span>  <span class=\"c1\"># \u4eba/\u6a21\u578b</span>\n    <span class=\"p\">}]</span>\n\n    <span class=\"n\">quality_scores</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[{</span>\n        <span class=\"s1\">&#39;metric&#39;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;score&#39;</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;timestamp&#39;</span><span class=\"p\">:</span> <span class=\"n\">datetime</span>\n    <span class=\"p\">}]</span>\n\n    <span class=\"n\">usage_history</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[{</span>\n        <span class=\"s1\">&#39;model_version&#39;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;training_run&#39;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;epoch&#39;</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;loss_contribution&#39;</span><span class=\"p\">:</span> <span class=\"nb\">float</span>\n    <span class=\"p\">}]</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u64cd\u4f5c\u8ffd\u8e2a</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@track_lineage</span>\n<span class=\"k\">def</span> <span class=\"nf\">transform_data</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">operation</span><span class=\"p\">):</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">operation</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n    <span class=\"n\">lineage</span><span class=\"o\">.</span><span class=\"n\">add_transformation</span><span class=\"p\">({</span>\n        <span class=\"s1\">&#39;input_hash&#39;</span><span class=\"p\">:</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;output_hash&#39;</span><span class=\"p\">:</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;operation&#39;</span><span class=\"p\">:</span> <span class=\"n\">operation</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;timestamp&#39;</span><span class=\"p\">:</span> <span class=\"n\">now</span><span class=\"p\">()</span>\n    <span class=\"p\">})</span>\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u7248\u672c\u7ba1\u7406</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Git-like \u7248\u672c\u63a7\u5236</span>\n<span class=\"n\">data_version</span> <span class=\"o\">=</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">sha256</span><span class=\"p\">(</span>\n    <span class=\"n\">data_content</span> <span class=\"o\">+</span> <span class=\"n\">parent_version</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span><span class=\"p\">()[:</span><span class=\"mi\">8</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<ol start=\"4\">\n<li><strong>\u67e5\u8be2\u63a5\u53e3</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6b63\u5411\u8ffd\u8e2a</span>\n<span class=\"k\">def</span> <span class=\"nf\">trace_forward</span><span class=\"p\">(</span><span class=\"n\">sample_id</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">lineage_db</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span>\n        <span class=\"n\">source_id</span><span class=\"o\">=</span><span class=\"n\">sample_id</span>\n    <span class=\"p\">)</span>\n\n<span class=\"c1\"># \u53cd\u5411\u8ffd\u8e2a</span>\n<span class=\"k\">def</span> <span class=\"nf\">trace_backward</span><span class=\"p\">(</span><span class=\"n\">model_issue</span><span class=\"p\">):</span>\n    <span class=\"n\">problematic_samples</span> <span class=\"o\">=</span> <span class=\"n\">identify_issues</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span>\n        <span class=\"n\">get_lineage</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">problematic_samples</span>\n    <span class=\"p\">]</span>\n</code></pre></div>\n\n<ol start=\"5\">\n<li><strong>\u6027\u80fd\u5f52\u56e0</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">attribute_performance</span><span class=\"p\">(</span><span class=\"n\">model_degradation</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u627e\u51fa\u6027\u80fd\u4e0b\u964d\u76f8\u5173\u7684\u6570\u636e\u53d8\u5316</span>\n    <span class=\"n\">recent_changes</span> <span class=\"o\">=</span> <span class=\"n\">get_recent_data_changes</span><span class=\"p\">()</span>\n    <span class=\"n\">correlation</span> <span class=\"o\">=</span> <span class=\"n\">calculate_correlation</span><span class=\"p\">(</span>\n        <span class=\"n\">recent_changes</span><span class=\"p\">,</span>\n        <span class=\"n\">model_degradation</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">rank_by_impact</span><span class=\"p\">(</span><span class=\"n\">correlation</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"6\">\n<li><strong>\u5b58\u50a8\u4f18\u5316</strong>\uff1a\n   - \u4f7f\u7528\u56fe\u6570\u636e\u5e93\u5b58\u50a8\u8840\u7f18\u5173\u7cfb\n   - \u5b9a\u671f\u538b\u7f29\u5386\u53f2\u8bb0\u5f55\n   - \u53ea\u4fdd\u7559\u5173\u952e\u8282\u70b9\u7684\u5b8c\u6574\u6570\u636e</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 3.8</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u4e3b\u52a8\u5b66\u4e60\uff08Active Learning\uff09\u7b56\u7565\uff0c\u5728\u6807\u6ce8\u9884\u7b97\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u9009\u62e9\u6700\u6709\u4ef7\u503c\u7684\u6837\u672c\u8fdb\u884c\u6807\u6ce8\u3002</p>\n<details>\n<summary>\ud83d\udca1 \u63d0\u793a</summary>\n<p>\u7ed3\u5408\u591a\u79cd\u9009\u62e9\u7b56\u7565\uff1a</p>\n<ul>\n<li>\u4e0d\u786e\u5b9a\u6027</li>\n<li>\u591a\u6837\u6027  </li>\n<li>\u4ee3\u8868\u6027</li>\n<li>\u9884\u671f\u6a21\u578b\u6539\u8fdb</li>\n</ul>\n</details>\n<details>\n<summary>\ud83d\udcdd \u53c2\u8003\u7b54\u6848</summary>\n<p>\u4e3b\u52a8\u5b66\u4e60\u7b56\u7565\u8bbe\u8ba1\uff1a</p>\n<ol>\n<li><strong>\u4e0d\u786e\u5b9a\u6027\u91c7\u6837</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">uncertainty_sampling</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">unlabeled_data</span><span class=\"p\">):</span>\n    <span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict_proba</span><span class=\"p\">(</span><span class=\"n\">unlabeled_data</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u71b5\u503c\u8ba1\u7b97</span>\n    <span class=\"n\">entropy</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">*</span> <span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">predictions</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u6700\u5c0f\u7f6e\u4fe1\u5ea6</span>\n    <span class=\"n\">least_confidence</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">predictions</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u8fb9\u754c\u91c7\u6837</span>\n    <span class=\"n\">margin</span> <span class=\"o\">=</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">top1_prob</span> <span class=\"o\">-</span> <span class=\"n\">top2_prob</span><span class=\"p\">)</span>\n\n    <span class=\"n\">uncertainty</span> <span class=\"o\">=</span> <span class=\"n\">\u03b1</span><span class=\"o\">*</span><span class=\"n\">entropy</span> <span class=\"o\">+</span> <span class=\"n\">\u03b2</span><span class=\"o\">*</span><span class=\"n\">least_confidence</span> <span class=\"o\">+</span> <span class=\"n\">\u03b3</span><span class=\"o\">/</span><span class=\"n\">margin</span>\n    <span class=\"k\">return</span> <span class=\"n\">uncertainty</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u591a\u6837\u6027\u91c7\u6837</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">diversity_sampling</span><span class=\"p\">(</span><span class=\"n\">selected_samples</span><span class=\"p\">,</span> <span class=\"n\">candidate</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u57fa\u4e8e\u5d4c\u5165\u7684\u591a\u6837\u6027</span>\n    <span class=\"n\">min_distance</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">([</span>\n        <span class=\"n\">cosine_distance</span><span class=\"p\">(</span><span class=\"n\">candidate_emb</span><span class=\"p\">,</span> <span class=\"n\">selected_emb</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">selected_emb</span> <span class=\"ow\">in</span> <span class=\"n\">selected_samples</span>\n    <span class=\"p\">])</span>\n\n    <span class=\"c1\"># \u57fa\u4e8e\u805a\u7c7b\u7684\u591a\u6837\u6027</span>\n    <span class=\"n\">cluster_coverage</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">unique_clusters</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">total_clusters</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">min_distance</span> <span class=\"o\">*</span> <span class=\"n\">cluster_coverage</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u4ee3\u8868\u6027\u91c7\u6837</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">representativeness</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">,</span> <span class=\"n\">unlabeled_pool</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u5bc6\u5ea6\u4f30\u8ba1</span>\n    <span class=\"n\">density</span> <span class=\"o\">=</span> <span class=\"n\">mean</span><span class=\"p\">([</span>\n        <span class=\"n\">similarity</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">other</span> <span class=\"ow\">in</span> <span class=\"n\">unlabeled_pool</span>\n    <span class=\"p\">])</span>\n\n    <span class=\"c1\"># \u4e2d\u5fc3\u6027</span>\n    <span class=\"n\">centrality</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"n\">mean_distance_to_others</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">density</span> <span class=\"o\">*</span> <span class=\"n\">centrality</span>\n</code></pre></div>\n\n<ol start=\"4\">\n<li><strong>\u9884\u671f\u6a21\u578b\u6539\u8fdb</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">expected_model_change</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">sample</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u9884\u671f\u68af\u5ea6\u957f\u5ea6</span>\n    <span class=\"n\">gradient</span> <span class=\"o\">=</span> <span class=\"n\">compute_gradient</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">sample</span><span class=\"p\">)</span>\n    <span class=\"n\">egl</span> <span class=\"o\">=</span> <span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">gradient</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u9884\u671f\u8bef\u5dee\u51cf\u5c11</span>\n    <span class=\"n\">eer</span> <span class=\"o\">=</span> <span class=\"n\">estimate_error_reduction</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">sample</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">egl</span> <span class=\"o\">+</span> <span class=\"n\">eer</span>\n</code></pre></div>\n\n<ol start=\"5\">\n<li><strong>\u6df7\u5408\u7b56\u7565</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">hybrid_active_learning</span><span class=\"p\">(</span>\n    <span class=\"n\">model</span><span class=\"p\">,</span> \n    <span class=\"n\">unlabeled_data</span><span class=\"p\">,</span> \n    <span class=\"n\">budget</span><span class=\"p\">,</span>\n    <span class=\"n\">selected</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n<span class=\"p\">):</span>\n    <span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">sample</span> <span class=\"ow\">in</span> <span class=\"n\">unlabeled_data</span><span class=\"p\">:</span>\n        <span class=\"n\">u_score</span> <span class=\"o\">=</span> <span class=\"n\">uncertainty_sampling</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">sample</span><span class=\"p\">)</span>\n        <span class=\"n\">d_score</span> <span class=\"o\">=</span> <span class=\"n\">diversity_sampling</span><span class=\"p\">(</span><span class=\"n\">selected</span><span class=\"p\">,</span> <span class=\"n\">sample</span><span class=\"p\">)</span>\n        <span class=\"n\">r_score</span> <span class=\"o\">=</span> <span class=\"n\">representativeness</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">,</span> <span class=\"n\">unlabeled_data</span><span class=\"p\">)</span>\n        <span class=\"n\">e_score</span> <span class=\"o\">=</span> <span class=\"n\">expected_model_change</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">sample</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u52a8\u6001\u6743\u91cd</span>\n        <span class=\"n\">w1</span> <span class=\"o\">=</span> <span class=\"mf\">0.4</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">selected</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">budget</span><span class=\"o\">*</span><span class=\"mf\">0.3</span> <span class=\"k\">else</span> <span class=\"mf\">0.2</span>\n        <span class=\"n\">w2</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">selected</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">budget</span><span class=\"o\">*</span><span class=\"mf\">0.3</span> <span class=\"k\">else</span> <span class=\"mf\">0.4</span>\n        <span class=\"n\">w3</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>\n        <span class=\"n\">w4</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>\n\n        <span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"n\">w1</span><span class=\"o\">*</span><span class=\"n\">u_score</span> <span class=\"o\">+</span> <span class=\"n\">w2</span><span class=\"o\">*</span><span class=\"n\">d_score</span> <span class=\"o\">+</span> <span class=\"n\">w3</span><span class=\"o\">*</span><span class=\"n\">r_score</span> <span class=\"o\">+</span> <span class=\"n\">w4</span><span class=\"o\">*</span><span class=\"n\">e_score</span>\n        <span class=\"n\">scores</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u9009\u62e9top-k</span>\n    <span class=\"n\">top_indices</span> <span class=\"o\">=</span> <span class=\"n\">argsort</span><span class=\"p\">(</span><span class=\"n\">scores</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"n\">budget</span><span class=\"p\">:]</span>\n    <span class=\"k\">return</span> <span class=\"n\">unlabeled_data</span><span class=\"p\">[</span><span class=\"n\">top_indices</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<ol start=\"6\">\n<li><strong>\u6279\u91cf\u9009\u62e9\u4f18\u5316</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u907f\u514d\u6279\u6b21\u5185\u5197\u4f59</span>\n<span class=\"k\">def</span> <span class=\"nf\">batch_selection</span><span class=\"p\">(</span><span class=\"n\">candidates</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"p\">):</span>\n    <span class=\"n\">selected</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">batch_size</span><span class=\"p\">):</span>\n        <span class=\"n\">best</span> <span class=\"o\">=</span> <span class=\"n\">argmax</span><span class=\"p\">([</span>\n            <span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">\u03bb</span><span class=\"o\">*</span><span class=\"n\">max_similarity</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">selected</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">candidates</span>\n        <span class=\"p\">])</span>\n        <span class=\"n\">selected</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">candidates</span><span class=\"p\">[</span><span class=\"n\">best</span><span class=\"p\">])</span>\n        <span class=\"n\">candidates</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">best</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">selected</span>\n</code></pre></div>\n\n</details>\n<h2 id=\"gotchas\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef (Gotchas)</h2>\n<h3 id=\"_7\">\u6570\u636e\u76f8\u5173\u9677\u9631</h3>\n<ol>\n<li>\n<p><strong>\u6807\u6ce8\u89c4\u8303\u6f02\u79fb</strong>\n   - \u95ee\u9898\uff1a\u968f\u65f6\u95f4\u63a8\u79fb\uff0c\u6807\u6ce8\u6807\u51c6\u9010\u6e10\u504f\u79bb\n   - \u89e3\u51b3\uff1a\u5b9a\u671f\u6821\u51c6\u4f1a\u8bae\uff0c\u7ef4\u62a4\u6807\u6ce8\u793a\u4f8b\u5e93</p>\n</li>\n<li>\n<p><strong>\u6570\u636e\u6cc4\u9732</strong>\n   - \u95ee\u9898\uff1a\u6d4b\u8bd5\u96c6\u4fe1\u606f\u6cc4\u9732\u5230\u8bad\u7ec3\u96c6\n   - \u89e3\u51b3\uff1a\u4e25\u683c\u7684\u6570\u636e\u9694\u79bb\uff0c\u4f7f\u7528\u65f6\u95f4\u6233\u5206\u5272</p>\n</li>\n<li>\n<p><strong>\u6807\u6ce8\u8005\u504f\u89c1\u7d2f\u79ef</strong>\n   - \u95ee\u9898\uff1a\u7279\u5b9a\u6807\u6ce8\u8005\u7684\u504f\u597d\u88ab\u653e\u5927\n   - \u89e3\u51b3\uff1a\u6807\u6ce8\u8005\u8f6e\u6362\uff0c\u4ea4\u53c9\u9a8c\u8bc1</p>\n</li>\n</ol>\n<h3 id=\"_8\">\u5408\u6210\u6570\u636e\u9677\u9631</h3>\n<ol start=\"4\">\n<li>\n<p><strong>\u6a21\u578b\u574d\u7f29</strong>\n   - \u95ee\u9898\uff1a\u7528\u6a21\u578b\u751f\u6210\u7684\u6570\u636e\u8bad\u7ec3\u5bfc\u81f4\u591a\u6837\u6027\u964d\u4f4e\n   - \u89e3\u51b3\uff1a\u4fdd\u6301\u771f\u5b9e\u6570\u636e\u6bd4\u4f8b\uff0c\u5b9a\u671f\u6ce8\u5165\u65b0\u6570\u636e</p>\n</li>\n<li>\n<p><strong>\u9519\u8bef\u653e\u5927</strong>\n   - \u95ee\u9898\uff1a\u751f\u6210\u6570\u636e\u4e2d\u7684\u9519\u8bef\u88ab\u5b66\u4e60\u548c\u653e\u5927\n   - \u89e3\u51b3\uff1a\u4e25\u683c\u7684\u8d28\u91cf\u8fc7\u6ee4\uff0c\u4eba\u5de5\u9a8c\u8bc1\u5173\u952e\u6837\u672c</p>\n</li>\n<li>\n<p><strong>\u5206\u5e03\u504f\u79fb\u672a\u5bdf\u89c9</strong>\n   - \u95ee\u9898\uff1a\u5408\u6210\u6570\u636e\u5206\u5e03\u9010\u6e10\u504f\u79bb\u771f\u5b9e\u5206\u5e03\n   - \u89e3\u51b3\uff1a\u6301\u7eed\u76d1\u63a7\u5206\u5e03\u6307\u6807\uff0c\u5b9a\u671f\u6821\u51c6</p>\n</li>\n</ol>\n<h3 id=\"_9\">\u5de5\u7a0b\u5b9e\u8df5\u9677\u9631</h3>\n<ol start=\"7\">\n<li>\n<p><strong>\u6570\u636e\u7248\u672c\u6df7\u4e71</strong>\n   - \u95ee\u9898\uff1a\u4e0d\u540c\u5b9e\u9a8c\u4f7f\u7528\u4e86\u4e0d\u540c\u7248\u672c\u7684\u6570\u636e\n   - \u89e3\u51b3\uff1a\u4e25\u683c\u7684\u7248\u672c\u7ba1\u7406\uff0c\u5b9e\u9a8c\u914d\u7f6e\u8bb0\u5f55</p>\n</li>\n<li>\n<p><strong>\u589e\u91cf\u8bad\u7ec3\u7684\u9057\u5fd8</strong>\n   - \u95ee\u9898\uff1a\u65b0\u6570\u636e\u8bad\u7ec3\u540e\u65e7\u80fd\u529b\u9000\u5316\n   - \u89e3\u51b3\uff1a\u7ecf\u9a8c\u56de\u653e\uff0c\u5f39\u6027\u6743\u91cd\u5de9\u56fa</p>\n</li>\n<li>\n<p><strong>\u6807\u6ce8\u74f6\u9888</strong>\n   - \u95ee\u9898\uff1a\u6807\u6ce8\u901f\u5ea6\u8ddf\u4e0d\u4e0a\u6570\u636e\u4ea7\u751f\u901f\u5ea6\n   - \u89e3\u51b3\uff1a\u5206\u4f18\u5148\u7ea7\u6807\u6ce8\uff0c\u81ea\u52a8\u6807\u6ce8\u8f85\u52a9</p>\n</li>\n<li>\n<p><strong>\u8bc4\u4f30\u96c6\u6c61\u67d3</strong></p>\n<ul>\n<li>\u95ee\u9898\uff1a\u8bc4\u4f30\u96c6\u88ab\u7528\u4e8e\u8bad\u7ec3\u51b3\u7b56</li>\n<li>\u89e3\u51b3\uff1a\u8bbe\u7f6e\u53ea\u6709\u5c11\u6570\u4eba\u77e5\u9053\u7684\u4fdd\u7559\u6d4b\u8bd5\u96c6</li>\n</ul>\n</li>\n</ol>"
  },
  "chapter7.md": {
    "hash": "f577e1f5fb981074d0f1fbe5d7ff0ef0",
    "content": "<h1 id=\"_1\">\u7b2c\u4e03\u7ae0\uff1a\u8bad\u7ec3\u5faa\u73af\u4e0e\u8fed\u4ee3\u4f18\u5316</h1>\n<p>\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8 LLM \u540e\u8bad\u7ec3\u7684\u7aef\u5230\u7aef\u8bad\u7ec3\u6d41\u7a0b\u8bbe\u8ba1\uff0c\u91cd\u70b9\u5173\u6ce8\u5982\u4f55\u6784\u5efa\u9ad8\u6548\u7684\u8fed\u4ee3\u4f18\u5316\u7cfb\u7edf\u3002\u6211\u4eec\u5c06\u4ece\u6570\u636e-\u6807\u6ce8-\u8bad\u7ec3-\u8bc4\u4f30\u7684\u5b8c\u6574\u5faa\u73af\u5f00\u59cb\uff0c\u9010\u6b65\u6df1\u5165\u5230\u4e3b\u52a8\u5b66\u4e60\u3001\u6a21\u578b\u5408\u5e76\u3001\u8d85\u53c2\u6570\u4f18\u5316\u4ee5\u53ca\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684\u5de5\u7a0b\u5b9e\u8df5\u3002\u901a\u8fc7\u672c\u7ae0\u5b66\u4e60\uff0c\u60a8\u5c06\u638c\u63e1\u6784\u5efa\u53ef\u6269\u5c55\u3001\u9ad8\u6548\u7387\u8bad\u7ec3\u7cfb\u7edf\u7684\u6838\u5fc3\u65b9\u6cd5\u8bba\u3002</p>\n<h2 id=\"71-\">7.1 \u6570\u636e-\u6807\u6ce8-\u8bad\u7ec3-\u8bc4\u4f30\u5faa\u73af\u8bbe\u8ba1</h2>\n<p>\u540e\u8bad\u7ec3\u7684\u6210\u529f\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u80fd\u5426\u5efa\u7acb\u9ad8\u6548\u7684\u8fed\u4ee3\u5faa\u73af\u3002\u4e0e\u9884\u8bad\u7ec3\u7684\u5355\u6b21\u5927\u89c4\u6a21\u8bad\u7ec3\u4e0d\u540c\uff0c\u540e\u8bad\u7ec3\u9700\u8981\u6301\u7eed\u7684\u6570\u636e\u6536\u96c6\u3001\u6807\u6ce8\u3001\u8bad\u7ec3\u548c\u8bc4\u4f30\uff0c\u5f62\u6210\u4e00\u4e2a\u4e0d\u65ad\u6539\u8fdb\u7684\u95ed\u73af\u7cfb\u7edf\u3002</p>\n<h3 id=\"711\">7.1.1 \u5faa\u73af\u67b6\u6784\u7684\u57fa\u672c\u539f\u7406</h3>\n<p>\u6570\u636e-\u6807\u6ce8-\u8bad\u7ec3-\u8bc4\u4f30\uff08DLTE\uff09\u5faa\u73af\u662f\u540e\u8bad\u7ec3\u7684\u6838\u5fc3\u67b6\u6784\u6a21\u5f0f\u3002\u5176\u57fa\u672c\u6d41\u7a0b\u5982\u4e0b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502   \u6570\u636e\u6536\u96c6   \u2502 \u2190 \u7528\u6237\u53cd\u9988/\u5408\u6210\u751f\u6210\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502   \u6570\u636e\u6807\u6ce8   \u2502 \u2190 \u4eba\u5de5/\u6a21\u578b\u8f85\u52a9\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502   \u6a21\u578b\u8bad\u7ec3   \u2502 \u2190 SFT/RLHF/DPO\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502   \u6a21\u578b\u8bc4\u4f30   \u2502 \u2192 \u6307\u6807\u76d1\u63a7\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502  \u90e8\u7f72/\u8fed\u4ee3   \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u8bbe\u8ba1\u539f\u5219</strong>\uff1a</p>\n<ol>\n<li><strong>\u589e\u91cf\u5f0f\u66f4\u65b0</strong>\uff1a\u6bcf\u6b21\u5faa\u73af\u4e0d\u5fc5\u5904\u7406\u5168\u91cf\u6570\u636e\uff0c\u800c\u662f\u5173\u6ce8\u65b0\u589e\u548c\u9ad8\u4ef7\u503c\u6570\u636e</li>\n<li><strong>\u5feb\u901f\u8fed\u4ee3</strong>\uff1a\u7f29\u77ed\u5faa\u73af\u5468\u671f\uff0c\u52a0\u5feb\u53cd\u9988\u901f\u5ea6\uff08\u76ee\u6807\uff1a\u65e5\u7ea7\u522b\u8fed\u4ee3\uff09</li>\n<li><strong>\u8d28\u91cf\u95e8\u63a7</strong>\uff1a\u6bcf\u4e2a\u73af\u8282\u8bbe\u7f6e\u8d28\u91cf\u68c0\u67e5\u70b9\uff0c\u9632\u6b62\u4f4e\u8d28\u91cf\u6570\u636e\u6c61\u67d3</li>\n<li><strong>\u53ef\u8ffd\u6eaf\u6027</strong>\uff1a\u6570\u636e\u6765\u6e90\u3001\u6807\u6ce8\u5386\u53f2\u3001\u8bad\u7ec3\u914d\u7f6e\u5b8c\u5168\u53ef\u8ffd\u6eaf</li>\n</ol>\n<h3 id=\"712\">7.1.2 \u6570\u636e\u6d41\u7ba1\u9053\u8bbe\u8ba1</h3>\n<p>\u9ad8\u6548\u7684\u6570\u636e\u6d41\u7ba1\u9053\u9700\u8981\u89e3\u51b3\u6570\u636e\u6536\u96c6\u3001\u9884\u5904\u7406\u3001\u5b58\u50a8\u548c\u7248\u672c\u7ba1\u7406\u7b49\u6311\u6218\uff1a</p>\n<p><strong>\u6570\u636e\u6536\u96c6\u7b56\u7565</strong>\uff1a</p>\n<ul>\n<li><strong>\u7528\u6237\u4ea4\u4e92\u6570\u636e</strong>\uff1a\u6536\u96c6\u771f\u5b9e\u7528\u6237\u67e5\u8be2\u548c\u53cd\u9988</li>\n<li><strong>\u5408\u6210\u6570\u636e\u751f\u6210</strong>\uff1a\u4f7f\u7528\u66f4\u5f3a\u6a21\u578b\u751f\u6210\u8bad\u7ec3\u6570\u636e</li>\n<li><strong>\u56f0\u96be\u6848\u4f8b\u6316\u6398</strong>\uff1a\u4e3b\u52a8\u6536\u96c6\u6a21\u578b\u8868\u73b0\u4e0d\u4f73\u7684\u6848\u4f8b</li>\n<li><strong>\u9886\u57df\u6570\u636e\u722c\u53d6</strong>\uff1a\u9488\u5bf9\u7279\u5b9a\u9886\u57df\u7684\u6570\u636e\u6536\u96c6</li>\n</ul>\n<p><strong>\u7ba1\u9053\u67b6\u6784\u8bbe\u8ba1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u8f93\u5165\u6e90 \u2192 \u6570\u636e\u9a8c\u8bc1 \u2192 \u53bb\u91cd\u6e05\u6d17 \u2192 \u683c\u5f0f\u6807\u51c6\u5316 \u2192 \u6570\u636e\u6c60\n  \u2193         \u2193          \u2193           \u2193          \u2193\n\u76d1\u63a7      \u8d28\u91cf\u62a5\u544a   \u6e05\u6d17\u65e5\u5fd7    schema\u68c0\u67e5  \u7248\u672c\u63a7\u5236\n</code></pre></div>\n\n<p><strong>\u6570\u636e\u7248\u672c\u7ba1\u7406</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6570\u636e\u7248\u672c\u914d\u7f6e\u793a\u4f8b</span>\n<span class=\"n\">data_version</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;v2.3.1&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;base_dataset&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;v2.3.0&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;incremental&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;user_feedback&quot;</span><span class=\"p\">:</span> <span class=\"mi\">50000</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;synthetic&quot;</span><span class=\"p\">:</span> <span class=\"mi\">100000</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;hard_negatives&quot;</span><span class=\"p\">:</span> <span class=\"mi\">20000</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;filters_applied&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">&quot;deduplication&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;quality_threshold_0.8&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;safety_filter&quot;</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">&quot;split_ratio&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;train&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;val&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;test&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.05</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h3 id=\"713\">7.1.3 \u6807\u6ce8\u7cfb\u7edf\u96c6\u6210</h3>\n<p>\u6807\u6ce8\u662f\u540e\u8bad\u7ec3\u6570\u636e\u8d28\u91cf\u7684\u5173\u952e\u73af\u8282\u3002\u73b0\u4ee3\u6807\u6ce8\u7cfb\u7edf\u9700\u8981\u5e73\u8861\u6548\u7387\u3001\u8d28\u91cf\u548c\u6210\u672c\uff1a</p>\n<p><strong>\u6807\u6ce8\u6a21\u5f0f\u9009\u62e9</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u7eaf\u4eba\u5de5\u6807\u6ce8</strong>\uff1a\n   - \u4f18\u70b9\uff1a\u8d28\u91cf\u9ad8\uff0c\u53ef\u5904\u7406\u590d\u6742\u4efb\u52a1\n   - \u7f3a\u70b9\uff1a\u6210\u672c\u9ad8\uff0c\u901f\u5ea6\u6162\uff0c\u4e00\u81f4\u6027\u96be\u4fdd\u8bc1\n   - \u9002\u7528\uff1a\u5b89\u5168\u76f8\u5173\u3001\u9ad8\u4ef7\u503c\u4efb\u52a1</p>\n</li>\n<li>\n<p><strong>\u6a21\u578b\u8f85\u52a9\u6807\u6ce8</strong>\uff1a\n   - \u4f18\u70b9\uff1a\u6548\u7387\u9ad8\uff0c\u6210\u672c\u4f4e\n   - \u7f3a\u70b9\uff1a\u53ef\u80fd\u4f20\u64ad\u6a21\u578b\u504f\u89c1\n   - \u9002\u7528\uff1a\u5927\u89c4\u6a21\u521d\u7b5b\u3001\u7b80\u5355\u5206\u7c7b\u4efb\u52a1</p>\n</li>\n<li>\n<p><strong>\u6df7\u5408\u6807\u6ce8\u7b56\u7565</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u539f\u59cb\u6570\u636e \u2192 \u6a21\u578b\u9884\u6807\u6ce8 \u2192 \u4eba\u5de5\u5ba1\u6838/\u4fee\u6b63 \u2192 \u8d28\u91cf\u91c7\u6837\u68c0\u67e5 \u2192 \u6700\u7ec8\u6807\u6ce8\n             \u2193              \u2193                \u2193\n         \u7f6e\u4fe1\u5ea6\u8bc4\u5206    \u6807\u6ce8\u8005\u4e00\u81f4\u6027    \u968f\u673a\u8d28\u68c0(5-10%)\n</code></pre></div>\n\n<p><strong>\u6807\u6ce8\u89c4\u8303\u8bbe\u8ba1\u8981\u70b9</strong>\uff1a</p>\n<ul>\n<li><strong>\u6e05\u6670\u7684\u4efb\u52a1\u5b9a\u4e49</strong>\uff1a\u907f\u514d\u6b67\u4e49\uff0c\u63d0\u4f9b\u5145\u5206\u793a\u4f8b</li>\n<li><strong>\u5c42\u6b21\u5316\u6807\u6ce8</strong>\uff1a\u5c06\u590d\u6742\u4efb\u52a1\u5206\u89e3\u4e3a\u7b80\u5355\u5b50\u4efb\u52a1</li>\n<li><strong>\u52a8\u6001\u89c4\u8303\u66f4\u65b0</strong>\uff1a\u6839\u636e\u6807\u6ce8\u8fc7\u7a0b\u4e2d\u7684\u95ee\u9898\u6301\u7eed\u4f18\u5316\u89c4\u8303</li>\n<li><strong>\u6807\u6ce8\u8005\u57f9\u8bad</strong>\uff1a\u7cfb\u7edf\u5316\u57f9\u8bad\u548c\u8ba4\u8bc1\u673a\u5236</li>\n</ul>\n<h3 id=\"714\">7.1.4 \u8bad\u7ec3\u89e6\u53d1\u673a\u5236</h3>\n<p>\u786e\u5b9a\u4f55\u65f6\u89e6\u53d1\u65b0\u4e00\u8f6e\u8bad\u7ec3\u662f\u5faa\u73af\u8bbe\u8ba1\u7684\u5173\u952e\u51b3\u7b56\u70b9\uff1a</p>\n<p><strong>\u89e6\u53d1\u7b56\u7565\u7c7b\u578b</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u5b9a\u65f6\u89e6\u53d1</strong>\uff1a\n   - \u56fa\u5b9a\u5468\u671f\uff08\u5982\u6bcf\u65e5\u3001\u6bcf\u5468\uff09\n   - \u4f18\u70b9\uff1a\u53ef\u9884\u6d4b\uff0c\u4fbf\u4e8e\u8d44\u6e90\u89c4\u5212\n   - \u7f3a\u70b9\uff1a\u53ef\u80fd\u6d6a\u8d39\u8ba1\u7b97\u8d44\u6e90</p>\n</li>\n<li>\n<p><strong>\u6570\u636e\u91cf\u89e6\u53d1</strong>\uff1a\n   - \u7d2f\u79ef\u8db3\u591f\u65b0\u6570\u636e\u540e\u89e6\u53d1\uff08\u598210\u4e07\u6761\uff09\n   - \u4f18\u70b9\uff1a\u786e\u4fdd\u6bcf\u6b21\u8bad\u7ec3\u6709\u8db3\u591f\u589e\u91cf\n   - \u7f3a\u70b9\uff1a\u65f6\u95f4\u4e0d\u53ef\u63a7</p>\n</li>\n<li>\n<p><strong>\u6027\u80fd\u89e6\u53d1</strong>\uff1a\n   - \u76d1\u63a7\u6307\u6807\u4e0b\u964d\u5230\u9608\u503c\u65f6\u89e6\u53d1\n   - \u4f18\u70b9\uff1a\u6309\u9700\u8bad\u7ec3\uff0c\u9488\u5bf9\u6027\u5f3a\n   - \u7f3a\u70b9\uff1a\u9700\u8981\u53ef\u9760\u7684\u5728\u7ebf\u76d1\u63a7</p>\n</li>\n<li>\n<p><strong>\u6df7\u5408\u89e6\u53d1\u7b56\u7565</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">should_trigger_training</span><span class=\"p\">():</span>\n    <span class=\"n\">conditions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">data_accumulated</span> <span class=\"o\">&gt;</span> <span class=\"n\">min_data_threshold</span><span class=\"p\">,</span>\n        <span class=\"n\">days_since_last_training</span> <span class=\"o\">&gt;</span> <span class=\"n\">max_wait_days</span><span class=\"p\">,</span>\n        <span class=\"n\">performance_degradation</span> <span class=\"o\">&gt;</span> <span class=\"n\">alert_threshold</span><span class=\"p\">,</span>\n        <span class=\"n\">critical_bug_fixes_pending</span>\n    <span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">conditions</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"n\">conditions</span><span class=\"p\">[:</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<h3 id=\"715\">7.1.5 \u8bc4\u4f30\u53cd\u9988\u8def\u5f84</h3>\n<p>\u8bc4\u4f30\u7ed3\u679c\u9700\u8981\u6709\u6548\u53cd\u9988\u5230\u5faa\u73af\u7684\u5404\u4e2a\u73af\u8282\uff1a</p>\n<p><strong>\u53cd\u9988\u673a\u5236\u8bbe\u8ba1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u8bc4\u4f30\u7ed3\u679c \u2500\u2500\u252c\u2500\u2500 \u6570\u636e\u6536\u96c6\uff1a\u6307\u5bfc\u56f0\u96be\u6837\u672c\u6536\u96c6\n          \u251c\u2500\u2500 \u6807\u6ce8\u4f18\u5316\uff1a\u8c03\u6574\u6807\u6ce8\u89c4\u8303\n          \u251c\u2500\u2500 \u8bad\u7ec3\u7b56\u7565\uff1a\u8c03\u6574\u635f\u5931\u6743\u91cd\n          \u2514\u2500\u2500 \u6a21\u578b\u9009\u62e9\uff1a\u51b3\u5b9a\u90e8\u7f72\u7248\u672c\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u6307\u6807\u76d1\u63a7</strong>\uff1a</p>\n<ol>\n<li><strong>\u4efb\u52a1\u6307\u6807</strong>\uff1a\u51c6\u786e\u7387\u3001BLEU\u3001ROUGE\u7b49</li>\n<li><strong>\u8d28\u91cf\u6307\u6807</strong>\uff1a\u54cd\u5e94\u76f8\u5173\u6027\u3001\u4e8b\u5b9e\u51c6\u786e\u6027</li>\n<li><strong>\u5b89\u5168\u6307\u6807</strong>\uff1a\u6709\u5bb3\u5185\u5bb9\u7387\u3001\u504f\u89c1\u7a0b\u5ea6</li>\n<li><strong>\u6548\u7387\u6307\u6807</strong>\uff1a\u63a8\u7406\u5ef6\u8fdf\u3001\u541e\u5410\u91cf</li>\n</ol>\n<p><strong>\u81ea\u52a8\u5316\u51b3\u7b56\u89c4\u5219</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">evaluate_and_decide</span><span class=\"p\">(</span><span class=\"n\">model_metrics</span><span class=\"p\">):</span>\n    <span class=\"n\">decisions</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;deploy&quot;</span><span class=\"p\">:</span> <span class=\"nb\">all</span><span class=\"p\">([</span>\n            <span class=\"n\">model_metrics</span><span class=\"p\">[</span><span class=\"s2\">&quot;accuracy&quot;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">baseline</span><span class=\"p\">[</span><span class=\"s2\">&quot;accuracy&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mf\">1.02</span><span class=\"p\">,</span>\n            <span class=\"n\">model_metrics</span><span class=\"p\">[</span><span class=\"s2\">&quot;safety_score&quot;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.95</span><span class=\"p\">,</span>\n            <span class=\"n\">model_metrics</span><span class=\"p\">[</span><span class=\"s2\">&quot;latency_p99&quot;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">baseline</span><span class=\"p\">[</span><span class=\"s2\">&quot;latency_p99&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mf\">1.1</span>\n        <span class=\"p\">]),</span>\n        <span class=\"s2\">&quot;collect_more_data&quot;</span><span class=\"p\">:</span> <span class=\"n\">model_metrics</span><span class=\"p\">[</span><span class=\"s2\">&quot;accuracy&quot;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">target_accuracy</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;adjust_training&quot;</span><span class=\"p\">:</span> <span class=\"n\">model_metrics</span><span class=\"p\">[</span><span class=\"s2\">&quot;loss_variance&quot;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">threshold</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;rollback&quot;</span><span class=\"p\">:</span> <span class=\"n\">model_metrics</span><span class=\"p\">[</span><span class=\"s2\">&quot;safety_score&quot;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.9</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">decisions</span>\n</code></pre></div>\n\n<p><strong>\u6301\u7eed\u6539\u8fdb\u673a\u5236</strong>\uff1a</p>\n<ul>\n<li><strong>A/B\u6d4b\u8bd5</strong>\uff1a\u65b0\u6a21\u578b\u4e0e\u57fa\u7ebf\u6a21\u578b\u5bf9\u6bd4</li>\n<li><strong>\u6e10\u8fdb\u5f0f\u53d1\u5e03</strong>\uff1a\u9010\u6b65\u6269\u5927\u65b0\u6a21\u578b\u7684\u6d41\u91cf\u6bd4\u4f8b</li>\n<li><strong>\u56de\u6eda\u673a\u5236</strong>\uff1a\u6027\u80fd\u4e0b\u964d\u65f6\u5feb\u901f\u6062\u590d</li>\n<li><strong>\u6848\u4f8b\u5206\u6790</strong>\uff1a\u5b9a\u671f\u5206\u6790\u5931\u8d25\u6848\u4f8b\uff0c\u4f18\u5316\u6570\u636e\u6536\u96c6</li>\n</ul>\n<h2 id=\"72\">7.2 \u4e3b\u52a8\u5b66\u4e60\u4e0e\u6570\u636e\u9009\u62e9\u7b56\u7565</h2>\n<p>\u5728\u540e\u8bad\u7ec3\u4e2d\uff0c\u5e76\u975e\u6240\u6709\u6570\u636e\u90fd\u5177\u6709\u540c\u7b49\u4ef7\u503c\u3002\u4e3b\u52a8\u5b66\u4e60\uff08Active Learning\uff09\u5e2e\u52a9\u6211\u4eec\u8bc6\u522b\u548c\u4f18\u5148\u5904\u7406\u6700\u6709\u4ef7\u503c\u7684\u6570\u636e\uff0c\u4ece\u800c\u4ee5\u6700\u5c0f\u7684\u6807\u6ce8\u6210\u672c\u83b7\u5f97\u6700\u5927\u7684\u6a21\u578b\u6539\u8fdb\u3002</p>\n<h3 id=\"721\">7.2.1 \u4e0d\u786e\u5b9a\u6027\u91c7\u6837</h3>\n<p>\u4e0d\u786e\u5b9a\u6027\u91c7\u6837\u662f\u4e3b\u52a8\u5b66\u4e60\u7684\u6838\u5fc3\u7b56\u7565\uff0c\u901a\u8fc7\u9009\u62e9\u6a21\u578b\u6700\u4e0d\u786e\u5b9a\u7684\u6837\u672c\u8fdb\u884c\u6807\u6ce8\uff1a</p>\n<p><strong>\u4e0d\u786e\u5b9a\u6027\u5ea6\u91cf\u65b9\u6cd5</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u9884\u6d4b\u71b5\uff08Entropy\uff09</strong>\uff1a\n   $$H(x) = -\\sum_{i=1}^{K} p(y_i|x) \\log p(y_i|x)$$\n\u5176\u4e2d $K$ \u662f\u7c7b\u522b\u6570\uff0c$p(y_i|x)$ \u662f\u6a21\u578b\u5bf9\u7c7b\u522b $i$ \u7684\u9884\u6d4b\u6982\u7387</p>\n</li>\n<li>\n<p><strong>\u6700\u5c0f\u7f6e\u4fe1\u5ea6\uff08Least Confidence\uff09</strong>\uff1a\n$$LC(x) = 1 - \\max_i p(y_i|x)$$</p>\n</li>\n<li>\n<p><strong>\u8fb9\u9645\u91c7\u6837\uff08Margin Sampling\uff09</strong>\uff1a\n$$MS(x) = p(y_1|x) - p(y_2|x)$$\n\u5176\u4e2d $y_1, y_2$ \u662f\u6982\u7387\u6700\u9ad8\u7684\u4e24\u4e2a\u7c7b\u522b</p>\n</li>\n</ol>\n<p><strong>LLM \u7279\u5b9a\u7684\u4e0d\u786e\u5b9a\u6027\u4f30\u8ba1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compute_llm_uncertainty</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">num_samples</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u901a\u8fc7\u591a\u6b21\u91c7\u6837\u4f30\u8ba1 LLM \u7684\u4e0d\u786e\u5b9a\u6027&quot;&quot;&quot;</span>\n    <span class=\"n\">responses</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">log_probs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_samples</span><span class=\"p\">):</span>\n        <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">lp</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span>\n            <span class=\"n\">prompt</span><span class=\"p\">,</span> \n            <span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"mf\">0.7</span><span class=\"p\">,</span>\n            <span class=\"n\">return_log_probs</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">responses</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n        <span class=\"n\">log_probs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">lp</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u8ba1\u7b97\u54cd\u5e94\u591a\u6837\u6027</span>\n    <span class=\"n\">unique_responses</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">responses</span><span class=\"p\">))</span>\n    <span class=\"n\">diversity_score</span> <span class=\"o\">=</span> <span class=\"n\">unique_responses</span> <span class=\"o\">/</span> <span class=\"n\">num_samples</span>\n\n    <span class=\"c1\"># \u8ba1\u7b97\u5e73\u5747\u5bf9\u6570\u6982\u7387\u65b9\u5dee</span>\n    <span class=\"n\">avg_log_prob</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">lp</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">lp</span> <span class=\"ow\">in</span> <span class=\"n\">log_probs</span><span class=\"p\">])</span>\n    <span class=\"n\">log_prob_variance</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">var</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">lp</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">lp</span> <span class=\"ow\">in</span> <span class=\"n\">log_probs</span><span class=\"p\">])</span>\n\n    <span class=\"n\">uncertainty</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;diversity&quot;</span><span class=\"p\">:</span> <span class=\"n\">diversity_score</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;avg_confidence&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">avg_log_prob</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;confidence_variance&quot;</span><span class=\"p\">:</span> <span class=\"n\">log_prob_variance</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">uncertainty</span>\n</code></pre></div>\n\n<p><strong>\u5b9e\u8df5\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li><strong>\u6e29\u5ea6\u8c03\u8282</strong>\uff1a\u4f7f\u7528\u4e0d\u540c\u6e29\u5ea6\u591a\u6b21\u91c7\u6837\uff0c\u9ad8\u4e0d\u786e\u5b9a\u6027\u6837\u672c\u7684\u8f93\u51fa\u5dee\u5f02\u66f4\u5927</li>\n<li><strong>\u6ce8\u610f\u529b\u5206\u6790</strong>\uff1a\u5206\u6790\u6ce8\u610f\u529b\u6743\u91cd\u7684\u5206\u6563\u7a0b\u5ea6\uff0c\u8bc6\u522b\u6a21\u578b\"\u72b9\u8c6b\"\u7684\u4f4d\u7f6e</li>\n<li><strong>\u65e9\u671f\u5c42\u7279\u5f81</strong>\uff1a\u5229\u7528\u4e2d\u95f4\u5c42\u8868\u793a\u7684\u53d8\u5316\u8bc4\u4f30\u4e0d\u786e\u5b9a\u6027</li>\n</ul>\n<h3 id=\"722\">7.2.2 \u591a\u6837\u6027\u9009\u62e9</h3>\n<p>\u4ec5\u9009\u62e9\u4e0d\u786e\u5b9a\u6837\u672c\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u5197\u4f59\u3002\u591a\u6837\u6027\u9009\u62e9\u786e\u4fdd\u8986\u76d6\u4e0d\u540c\u7684\u6570\u636e\u5206\u5e03\uff1a</p>\n<p><strong>\u591a\u6837\u6027\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u805a\u7c7b\u91c7\u6837</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">diversity_sampling</span><span class=\"p\">(</span><span class=\"n\">embeddings</span><span class=\"p\">,</span> <span class=\"n\">n_samples</span><span class=\"p\">,</span> <span class=\"n\">n_clusters</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u5148\u805a\u7c7b</span>\n    <span class=\"n\">kmeans</span> <span class=\"o\">=</span> <span class=\"n\">KMeans</span><span class=\"p\">(</span><span class=\"n\">n_clusters</span><span class=\"o\">=</span><span class=\"n\">n_clusters</span><span class=\"p\">)</span>\n    <span class=\"n\">cluster_labels</span> <span class=\"o\">=</span> <span class=\"n\">kmeans</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">embeddings</span><span class=\"p\">)</span>\n\n    <span class=\"n\">selected_indices</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">samples_per_cluster</span> <span class=\"o\">=</span> <span class=\"n\">n_samples</span> <span class=\"o\">//</span> <span class=\"n\">n_clusters</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">cluster_id</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_clusters</span><span class=\"p\">):</span>\n        <span class=\"n\">cluster_indices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">cluster_labels</span> <span class=\"o\">==</span> <span class=\"n\">cluster_id</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"c1\"># \u4ece\u6bcf\u4e2a\u7c07\u4e2d\u9009\u62e9\u6700\u63a5\u8fd1\u4e2d\u5fc3\u7684\u6837\u672c</span>\n        <span class=\"n\">cluster_center</span> <span class=\"o\">=</span> <span class=\"n\">kmeans</span><span class=\"o\">.</span><span class=\"n\">cluster_centers_</span><span class=\"p\">[</span><span class=\"n\">cluster_id</span><span class=\"p\">]</span>\n        <span class=\"n\">distances</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span>\n            <span class=\"n\">embeddings</span><span class=\"p\">[</span><span class=\"n\">cluster_indices</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">cluster_center</span><span class=\"p\">,</span> \n            <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">selected</span> <span class=\"o\">=</span> <span class=\"n\">cluster_indices</span><span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argsort</span><span class=\"p\">(</span><span class=\"n\">distances</span><span class=\"p\">)[:</span><span class=\"n\">samples_per_cluster</span><span class=\"p\">]]</span>\n        <span class=\"n\">selected_indices</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">selected</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">selected_indices</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li>\n<p><strong>\u6700\u5927\u8fb9\u9645\u76f8\u5173\u6027\uff08MMR\uff09</strong>\uff1a\n$$MMR = \\arg\\max_{d_i \\in R \\setminus S} [\\lambda \\cdot Sim_1(d_i, q) - (1-\\lambda) \\cdot \\max_{d_j \\in S} Sim_2(d_i, d_j)]$$\n\u5e73\u8861\u4e0e\u67e5\u8be2\u7684\u76f8\u5173\u6027\u548c\u4e0e\u5df2\u9009\u6837\u672c\u7684\u5dee\u5f02\u6027</p>\n</li>\n<li>\n<p><strong>\u5b50\u6a21\u51fd\u6570\u4f18\u5316</strong>\uff1a\n   \u5229\u7528\u5b50\u6a21\u51fd\u6570\u7684\u9012\u51cf\u8fb9\u9645\u6548\u7528\u7279\u6027\uff0c\u8d2a\u5fc3\u9009\u62e9\u63d0\u4f9b\u6700\u5927\u4fe1\u606f\u589e\u76ca\u7684\u6837\u672c</p>\n</li>\n</ol>\n<p><strong>\u5b9e\u73b0\u8003\u8651</strong>\uff1a</p>\n<ul>\n<li><strong>\u5d4c\u5165\u7a7a\u95f4\u9009\u62e9</strong>\uff1a\u4f7f\u7528\u4efb\u52a1\u76f8\u5173\u7684\u5d4c\u5165\uff08\u5982\u6700\u540e\u4e00\u5c42 vs \u4e2d\u95f4\u5c42\uff09</li>\n<li><strong>\u589e\u91cf\u66f4\u65b0</strong>\uff1a\u7ef4\u62a4\u5df2\u9009\u6837\u672c\u7684\u6458\u8981\u7edf\u8ba1\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97</li>\n<li><strong>\u6279\u91cf\u9009\u62e9</strong>\uff1a\u4e00\u6b21\u9009\u62e9\u591a\u4e2a\u6837\u672c\uff0c\u8003\u8651\u6837\u672c\u95f4\u7684\u76f8\u4e92\u5f71\u54cd</li>\n</ul>\n<h3 id=\"723\">7.2.3 \u56f0\u96be\u6837\u672c\u6316\u6398</h3>\n<p>\u56f0\u96be\u6837\u672c\uff08Hard Examples\uff09\u662f\u6a21\u578b\u5bb9\u6613\u51fa\u9519\u7684\u6848\u4f8b\uff0c\u5bf9\u6539\u8fdb\u6a21\u578b\u6027\u80fd\u81f3\u5173\u91cd\u8981\uff1a</p>\n<p><strong>\u56f0\u96be\u6837\u672c\u8bc6\u522b\u65b9\u6cd5</strong>\uff1a</p>\n<ol>\n<li><strong>\u635f\u5931\u6392\u5e8f</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">find_hard_examples</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">percentile</span><span class=\"o\">=</span><span class=\"mi\">95</span><span class=\"p\">):</span>\n    <span class=\"n\">losses</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">batch</span> <span class=\"ow\">in</span> <span class=\"n\">dataset</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n            <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compute_loss</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n            <span class=\"n\">losses</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">cpu</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">numpy</span><span class=\"p\">())</span>\n\n    <span class=\"n\">threshold</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">percentile</span><span class=\"p\">(</span><span class=\"n\">losses</span><span class=\"p\">,</span> <span class=\"n\">percentile</span><span class=\"p\">)</span>\n    <span class=\"n\">hard_indices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">losses</span> <span class=\"o\">&gt;</span> <span class=\"n\">threshold</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">hard_indices</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u5bf9\u6297\u6837\u672c\u751f\u6210</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">generate_adversarial_prompts</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">base_prompt</span><span class=\"p\">,</span> <span class=\"n\">epsilon</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u751f\u6210\u5bf9\u6297\u6027\u63d0\u793a&quot;&quot;&quot;</span>\n    <span class=\"n\">embedding</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">base_prompt</span><span class=\"p\">)</span>\n    <span class=\"n\">embedding</span><span class=\"o\">.</span><span class=\"n\">requires_grad</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">embedding</span><span class=\"p\">)</span>\n    <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">compute_target_loss</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">)</span>\n    <span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># \u5bf9\u5d4c\u5165\u6dfb\u52a0\u6270\u52a8</span>\n    <span class=\"n\">perturbation</span> <span class=\"o\">=</span> <span class=\"n\">epsilon</span> <span class=\"o\">*</span> <span class=\"n\">embedding</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">()</span>\n    <span class=\"n\">adversarial_embedding</span> <span class=\"o\">=</span> <span class=\"n\">embedding</span> <span class=\"o\">+</span> <span class=\"n\">perturbation</span>\n\n    <span class=\"c1\"># \u89e3\u7801\u56de\u6587\u672c\uff08\u8fd1\u4f3c\uff09</span>\n    <span class=\"n\">adversarial_prompt</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">adversarial_embedding</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">adversarial_prompt</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u6a21\u578b\u5206\u6b67\u6316\u6398</strong>\uff1a\n   \u6bd4\u8f83\u4e0d\u540c\u6a21\u578b\u6216\u540c\u4e00\u6a21\u578b\u4e0d\u540c\u7248\u672c\u7684\u9884\u6d4b\u5dee\u5f02</li>\n</ol>\n<p><strong>\u56f0\u96be\u6837\u672c\u7684\u7c7b\u578b</strong>\uff1a</p>\n<ul>\n<li><strong>\u8fb9\u754c\u6848\u4f8b</strong>\uff1a\u63a5\u8fd1\u51b3\u7b56\u8fb9\u754c\u7684\u6837\u672c</li>\n<li><strong>\u957f\u5c3e\u6837\u672c</strong>\uff1a\u7f55\u89c1\u4f46\u91cd\u8981\u7684\u6848\u4f8b</li>\n<li><strong>\u7ec4\u5408\u590d\u6742\u6027</strong>\uff1a\u9700\u8981\u591a\u6b65\u63a8\u7406\u7684\u6837\u672c</li>\n<li><strong>\u9886\u57df\u504f\u79fb</strong>\uff1a\u4e0e\u8bad\u7ec3\u5206\u5e03\u5dee\u5f02\u8f83\u5927\u7684\u6837\u672c</li>\n</ul>\n<h3 id=\"724\">7.2.4 \u8bfe\u7a0b\u5b66\u4e60\u8bbe\u8ba1</h3>\n<p>\u8bfe\u7a0b\u5b66\u4e60\uff08Curriculum Learning\uff09\u901a\u8fc7\u63a7\u5236\u6837\u672c\u7684\u5b66\u4e60\u987a\u5e8f\u6765\u63d0\u9ad8\u8bad\u7ec3\u6548\u7387\uff1a</p>\n<p><strong>\u8bfe\u7a0b\u8bbe\u8ba1\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u96be\u5ea6\u9012\u589e\u8bfe\u7a0b</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CurriculumScheduler</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">difficulty_scores</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">difficulty_scores</span> <span class=\"o\">=</span> <span class=\"n\">difficulty_scores</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_difficulty</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">epoch</span><span class=\"p\">,</span> <span class=\"n\">max_epoch</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u7ebf\u6027\u589e\u52a0\u96be\u5ea6\u9608\u503c</span>\n        <span class=\"n\">difficulty_threshold</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">epoch</span> <span class=\"o\">/</span> <span class=\"n\">max_epoch</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">1.0</span>\n\n        <span class=\"c1\"># \u9009\u62e9\u96be\u5ea6\u4f4e\u4e8e\u9608\u503c\u7684\u6837\u672c</span>\n        <span class=\"n\">valid_indices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">difficulty_scores</span> <span class=\"o\">&lt;=</span> <span class=\"n\">difficulty_threshold</span>\n        <span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u52a0\u6743\u91c7\u6837\uff0c\u4f18\u5148\u9009\u62e9\u63a5\u8fd1\u9608\u503c\u7684\u6837\u672c</span>\n        <span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">difficulty_scores</span><span class=\"p\">[</span><span class=\"n\">valid_indices</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">difficulty_threshold</span> <span class=\"o\">*</span> <span class=\"mf\">0.8</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"n\">weights</span> <span class=\"o\">/</span> <span class=\"n\">weights</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n\n        <span class=\"n\">batch_indices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span>\n            <span class=\"n\">valid_indices</span><span class=\"p\">,</span> \n            <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">batch_size</span><span class=\"p\">,</span> \n            <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">weights</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"n\">batch_indices</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u81ea\u9002\u5e94\u8bfe\u7a0b</strong>\uff1a\n   \u6839\u636e\u6a21\u578b\u5f53\u524d\u6027\u80fd\u52a8\u6001\u8c03\u6574\u8bfe\u7a0b\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">adaptive_curriculum</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">):</span>\n    <span class=\"n\">performance_history</span> <span class=\"o\">=</span> <span class=\"n\">deque</span><span class=\"p\">(</span><span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"n\">window_size</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">batch</span> <span class=\"ow\">in</span> <span class=\"n\">dataset</span><span class=\"p\">:</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">train_step</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n        <span class=\"n\">performance_history</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5982\u679c\u6027\u80fd\u505c\u6ede\uff0c\u589e\u52a0\u96be\u5ea6</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">performance_history</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">window_size</span><span class=\"p\">:</span>\n            <span class=\"n\">recent_improvement</span> <span class=\"o\">=</span> <span class=\"nb\">abs</span><span class=\"p\">(</span>\n                <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">performance_history</span><span class=\"p\">)[:</span><span class=\"mi\">500</span><span class=\"p\">])</span> <span class=\"o\">-</span> \n                <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">performance_history</span><span class=\"p\">)[</span><span class=\"mi\">500</span><span class=\"p\">:])</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">recent_improvement</span> <span class=\"o\">&lt;</span> <span class=\"n\">threshold</span><span class=\"p\">:</span>\n                <span class=\"c1\"># \u5f15\u5165\u66f4\u96be\u7684\u6837\u672c</span>\n                <span class=\"n\">increase_difficulty_level</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u53cd\u8bfe\u7a0b\u5b66\u4e60</strong>\uff1a\n   \u67d0\u4e9b\u4efb\u52a1\u4e2d\uff0c\u5148\u5b66\u4e60\u56f0\u96be\u6837\u672c\u53ef\u80fd\u66f4\u6709\u6548</li>\n</ol>\n<p><strong>\u8bfe\u7a0b\u5b66\u4e60\u7684\u5173\u952e\u8003\u8651</strong>\uff1a</p>\n<ul>\n<li><strong>\u96be\u5ea6\u8bc4\u4f30</strong>\uff1a\u51c6\u786e\u8bc4\u4f30\u6837\u672c\u96be\u5ea6\u662f\u5173\u952e</li>\n<li><strong>\u8fc7\u6e21\u5e73\u6ed1</strong>\uff1a\u907f\u514d\u96be\u5ea6\u8df3\u8dc3\u8fc7\u5927</li>\n<li><strong>\u9057\u5fd8\u95ee\u9898</strong>\uff1a\u5b9a\u671f\u56de\u987e\u7b80\u5355\u6837\u672c\uff0c\u9632\u6b62\u707e\u96be\u6027\u9057\u5fd8</li>\n</ul>\n<h3 id=\"725\">7.2.5 \u6570\u636e\u4ef7\u503c\u8bc4\u4f30</h3>\n<p>\u91cf\u5316\u6bcf\u4e2a\u6570\u636e\u70b9\u5bf9\u6a21\u578b\u6539\u8fdb\u7684\u8d21\u732e\uff0c\u4f18\u5316\u6570\u636e\u6295\u8d44\u56de\u62a5\uff1a</p>\n<p><strong>\u6570\u636e\u4ef7\u503c\u5ea6\u91cf\u65b9\u6cd5</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u7559\u4e00\u6cd5\u5f71\u54cd\u51fd\u6570\uff08Leave-One-Out Influence\uff09</strong>\uff1a\n$$\\mathcal{I}(z) = \\nabla_\\theta \\mathcal{L}(z)^T H^{-1} \\nabla_\\theta \\mathcal{L}(z_{test})$$\n\u5176\u4e2d $H$ \u662f Hessian \u77e9\u9635\uff0c$z$ \u662f\u8bad\u7ec3\u6837\u672c\uff0c$z_{test}$ \u662f\u6d4b\u8bd5\u6837\u672c</p>\n</li>\n<li>\n<p><strong>\u6570\u636e Shapley \u503c</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compute_data_shapley</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">test_set</span><span class=\"p\">,</span> <span class=\"n\">n_iterations</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n    <span class=\"n\">n_samples</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">)</span>\n    <span class=\"n\">shapley_values</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_iterations</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u968f\u673a\u6392\u5217</span>\n        <span class=\"n\">perm</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">permutation</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"p\">)</span>\n\n        <span class=\"n\">prev_score</span> <span class=\"o\">=</span> <span class=\"n\">evaluate</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">test_set</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">idx</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">perm</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u589e\u91cf\u8bad\u7ec3</span>\n            <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">])</span>\n            <span class=\"n\">new_score</span> <span class=\"o\">=</span> <span class=\"n\">evaluate</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">test_set</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u8fb9\u9645\u8d21\u732e</span>\n            <span class=\"n\">shapley_values</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"n\">new_score</span> <span class=\"o\">-</span> <span class=\"n\">prev_score</span><span class=\"p\">)</span>\n            <span class=\"n\">prev_score</span> <span class=\"o\">=</span> <span class=\"n\">new_score</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">shapley_values</span> <span class=\"o\">/</span> <span class=\"n\">n_iterations</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u68af\u5ea6\u76f8\u4f3c\u6027</strong>\uff1a\n   \u8861\u91cf\u8bad\u7ec3\u6837\u672c\u68af\u5ea6\u4e0e\u9a8c\u8bc1\u96c6\u68af\u5ea6\u7684\u4e00\u81f4\u6027</li>\n</ol>\n<p><strong>\u6570\u636e\u4ef7\u503c\u7684\u5e94\u7528</strong>\uff1a</p>\n<ul>\n<li><strong>\u6570\u636e\u8d2d\u4e70\u51b3\u7b56</strong>\uff1a\u786e\u5b9a\u54ea\u4e9b\u6570\u636e\u503c\u5f97\u8d2d\u4e70/\u6807\u6ce8</li>\n<li><strong>\u6570\u636e\u6e05\u7406\u4f18\u5148\u7ea7</strong>\uff1a\u4f18\u5148\u6e05\u7406\u9ad8\u4ef7\u503c\u6570\u636e</li>\n<li><strong>\u6837\u672c\u6743\u91cd\u8c03\u6574</strong>\uff1a\u6839\u636e\u4ef7\u503c\u8c03\u6574\u8bad\u7ec3\u6743\u91cd</li>\n<li><strong>\u6570\u636e\u5f52\u56e0</strong>\uff1a\u8ffd\u8e2a\u6a21\u578b\u80fd\u529b\u6765\u6e90</li>\n</ul>\n<p><strong>\u5b9e\u8df5\u5efa\u8bae</strong>\uff1a</p>\n<ol>\n<li><strong>\u7ec4\u5408\u7b56\u7565</strong>\uff1a\u7ed3\u5408\u4e0d\u786e\u5b9a\u6027\u3001\u591a\u6837\u6027\u548c\u56f0\u96be\u5ea6</li>\n<li><strong>\u52a8\u6001\u8c03\u6574</strong>\uff1a\u968f\u8bad\u7ec3\u8fdb\u5c55\u8c03\u6574\u9009\u62e9\u7b56\u7565</li>\n<li><strong>\u6210\u672c\u8003\u8651</strong>\uff1a\u5e73\u8861\u6570\u636e\u4ef7\u503c\u548c\u83b7\u53d6\u6210\u672c</li>\n<li><strong>\u5728\u7ebf\u66f4\u65b0</strong>\uff1a\u5b9e\u65f6\u66f4\u65b0\u6570\u636e\u4ef7\u503c\u4f30\u8ba1</li>\n</ol>\n<h2 id=\"73\">7.3 \u6a21\u578b\u5408\u5e76\u4e0e\u96c6\u6210\u5b66\u4e60</h2>\n<p>\u6a21\u578b\u5408\u5e76\u548c\u96c6\u6210\u5b66\u4e60\u6280\u672f\u5141\u8bb8\u6211\u4eec\u7ec4\u5408\u591a\u4e2a\u6a21\u578b\u7684\u4f18\u52bf\uff0c\u5728\u4e0d\u589e\u52a0\u63a8\u7406\u6210\u672c\u7684\u60c5\u51b5\u4e0b\u63d0\u5347\u6027\u80fd\u3002\u8fd9\u5728\u540e\u8bad\u7ec3\u4e2d\u7279\u522b\u6709\u4ef7\u503c\uff0c\u56e0\u4e3a\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u6574\u5408\u4e0d\u540c\u4efb\u52a1\u6216\u9886\u57df\u7684\u4e13\u95e8\u5316\u6a21\u578b\u3002</p>\n<h3 id=\"731\">7.3.1 \u53c2\u6570\u7a7a\u95f4\u5408\u5e76\u6280\u672f</h3>\n<p>\u76f4\u63a5\u5728\u53c2\u6570\u7a7a\u95f4\u5408\u5e76\u6a21\u578b\u662f\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\uff0c\u4f46\u9700\u8981\u4ed4\u7ec6\u5904\u7406\u4ee5\u4fdd\u6301\u6a21\u578b\u8d28\u91cf\uff1a</p>\n<p><strong>\u57fa\u7840\u5408\u5e76\u65b9\u6cd5</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u7ebf\u6027\u63d2\u503c\uff08LERP\uff09</strong>\uff1a\n$$\\theta_{merged} = \\alpha \\cdot \\theta_A + (1-\\alpha) \\cdot \\theta_B$$\n\u5176\u4e2d $\\alpha \\in [0,1]$ \u662f\u63d2\u503c\u7cfb\u6570</p>\n</li>\n<li>\n<p><strong>\u7403\u9762\u7ebf\u6027\u63d2\u503c\uff08SLERP\uff09</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">slerp</span><span class=\"p\">(</span><span class=\"n\">theta_A</span><span class=\"p\">,</span> <span class=\"n\">theta_B</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u7403\u9762\u7ebf\u6027\u63d2\u503c\uff0c\u4fdd\u6301\u53c2\u6570\u5411\u91cf\u7684\u8303\u6570&quot;&quot;&quot;</span>\n    <span class=\"c1\"># \u5f52\u4e00\u5316\u53c2\u6570\u5411\u91cf</span>\n    <span class=\"n\">theta_A_norm</span> <span class=\"o\">=</span> <span class=\"n\">theta_A</span> <span class=\"o\">/</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">theta_A</span><span class=\"p\">)</span>\n    <span class=\"n\">theta_B_norm</span> <span class=\"o\">=</span> <span class=\"n\">theta_B</span> <span class=\"o\">/</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">theta_B</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u8ba1\u7b97\u5939\u89d2</span>\n    <span class=\"n\">dot_product</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">theta_A_norm</span><span class=\"p\">,</span> <span class=\"n\">theta_B_norm</span><span class=\"p\">)</span>\n    <span class=\"n\">omega</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arccos</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">clip</span><span class=\"p\">(</span><span class=\"n\">dot_product</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># \u7403\u9762\u63d2\u503c</span>\n    <span class=\"k\">if</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">omega</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mf\">1e-10</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">theta_A</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">alpha</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">theta_B</span>\n\n    <span class=\"n\">sin_omega</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">omega</span><span class=\"p\">)</span>\n    <span class=\"n\">theta_merged</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">((</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">alpha</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">omega</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">sin_omega</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">theta_A</span> <span class=\"o\">+</span> \\\n                  <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">omega</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">sin_omega</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">theta_B</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">theta_merged</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li>\n<p><strong>\u52a0\u6743\u5e73\u5747</strong>\uff1a\n$$\\theta_{merged} = \\frac{\\sum_{i=1}^{N} w_i \\cdot \\theta_i}{\\sum_{i=1}^{N} w_i}$$\n<strong>\u9ad8\u7ea7\u5408\u5e76\u6280\u672f</strong>\uff1a</p>\n</li>\n<li>\n<p><strong>Fisher \u52a0\u6743\u5408\u5e76</strong>\uff1a\n   \u4f7f\u7528 Fisher \u4fe1\u606f\u77e9\u9635\u4f5c\u4e3a\u91cd\u8981\u6027\u6743\u91cd\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">fisher_weighted_merge</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u57fa\u4e8e Fisher \u4fe1\u606f\u7684\u53c2\u6570\u5408\u5e76&quot;&quot;&quot;</span>\n    <span class=\"n\">fisher_matrices</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">models</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u8ba1\u7b97 Fisher \u4fe1\u606f\u77e9\u9635\uff08\u5bf9\u89d2\u8fd1\u4f3c\uff09</span>\n        <span class=\"n\">fisher</span> <span class=\"o\">=</span> <span class=\"n\">compute_fisher_diagonal</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">)</span>\n        <span class=\"n\">fisher_matrices</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">fisher</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u5f52\u4e00\u5316 Fisher \u6743\u91cd</span>\n    <span class=\"n\">total_fisher</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">fisher_matrices</span><span class=\"p\">)</span>\n    <span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">f</span> <span class=\"o\">/</span> <span class=\"n\">total_fisher</span> <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">fisher_matrices</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># \u52a0\u6743\u5408\u5e76</span>\n    <span class=\"n\">merged_params</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"k\">for</span> <span class=\"n\">param_name</span> <span class=\"ow\">in</span> <span class=\"n\">models</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">state_dict</span><span class=\"p\">():</span>\n        <span class=\"n\">merged_params</span><span class=\"p\">[</span><span class=\"n\">param_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span>\n            <span class=\"n\">w</span><span class=\"p\">[</span><span class=\"n\">param_name</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">state_dict</span><span class=\"p\">()[</span><span class=\"n\">param_name</span><span class=\"p\">]</span> \n            <span class=\"k\">for</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">weights</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">merged_params</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>RegMean\uff08\u6b63\u5219\u5316\u5747\u503c\uff09</strong>\uff1a\n   \u901a\u8fc7\u6dfb\u52a0\u6b63\u5219\u5316\u9879\u9632\u6b62\u5408\u5e76\u540e\u7684\u53c2\u6570\u504f\u79bb\u8fc7\u8fdc\uff1a\n$$\\theta_{merged} = \\arg\\min_\\theta \\sum_{i=1}^{N} |\\theta - \\theta_i|^2 + \\lambda R(\\theta)$$</li>\n</ol>\n<h3 id=\"732\">7.3.2 \u4efb\u52a1\u5411\u91cf\u4e0e\u6a21\u578b\u7b97\u672f</h3>\n<p>\u4efb\u52a1\u5411\u91cf\uff08Task Vectors\uff09\u5c06\u6a21\u578b\u80fd\u529b\u8868\u793a\u4e3a\u53c2\u6570\u7a7a\u95f4\u4e2d\u7684\u5411\u91cf\uff0c\u5b9e\u73b0\u6a21\u578b\u80fd\u529b\u7684\u7b97\u672f\u8fd0\u7b97\uff1a</p>\n<p><strong>\u4efb\u52a1\u5411\u91cf\u5b9a\u4e49</strong>\uff1a\n$$\\tau = \\theta_{finetuned} - \\theta_{pretrained}$$</p>\n<p><strong>\u6a21\u578b\u7b97\u672f\u8fd0\u7b97</strong>\uff1a</p>\n<ol>\n<li><strong>\u80fd\u529b\u6dfb\u52a0</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">add_capabilities</span><span class=\"p\">(</span><span class=\"n\">base_model</span><span class=\"p\">,</span> <span class=\"n\">task_vectors</span><span class=\"p\">,</span> <span class=\"n\">scaling_factors</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u5411\u57fa\u7840\u6a21\u578b\u6dfb\u52a0\u591a\u4e2a\u4efb\u52a1\u80fd\u529b&quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">scaling_factors</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">scaling_factors</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">task_vectors</span><span class=\"p\">)</span>\n\n    <span class=\"n\">merged_params</span> <span class=\"o\">=</span> <span class=\"n\">base_model</span><span class=\"o\">.</span><span class=\"n\">state_dict</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">param_name</span> <span class=\"ow\">in</span> <span class=\"n\">merged_params</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u7d2f\u52a0\u4efb\u52a1\u5411\u91cf</span>\n        <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span>\n            <span class=\"n\">scale</span> <span class=\"o\">*</span> <span class=\"n\">tv</span><span class=\"p\">[</span><span class=\"n\">param_name</span><span class=\"p\">]</span> \n            <span class=\"k\">for</span> <span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">tv</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">scaling_factors</span><span class=\"p\">,</span> <span class=\"n\">task_vectors</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">merged_params</span><span class=\"p\">[</span><span class=\"n\">param_name</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">delta</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">merged_params</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u80fd\u529b\u5220\u9664</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">remove_capability</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">task_vector</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u4ece\u6a21\u578b\u4e2d\u79fb\u9664\u7279\u5b9a\u80fd\u529b&quot;&quot;&quot;</span>\n    <span class=\"n\">updated_params</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">state_dict</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">param_name</span> <span class=\"ow\">in</span> <span class=\"n\">updated_params</span><span class=\"p\">:</span>\n        <span class=\"n\">updated_params</span><span class=\"p\">[</span><span class=\"n\">param_name</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">scale</span> <span class=\"o\">*</span> <span class=\"n\">task_vector</span><span class=\"p\">[</span><span class=\"n\">param_name</span><span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">updated_params</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u80fd\u529b\u7ec4\u5408\u7684\u51b2\u7a81\u68c0\u6d4b</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">detect_task_conflicts</span><span class=\"p\">(</span><span class=\"n\">task_vectors</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u6d4b\u4efb\u52a1\u5411\u91cf\u4e4b\u95f4\u7684\u51b2\u7a81&quot;&quot;&quot;</span>\n    <span class=\"n\">conflicts</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">tv1</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">task_vectors</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">tv2</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">task_vectors</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">:],</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u8ba1\u7b97\u4f59\u5f26\u76f8\u4f3c\u5ea6</span>\n            <span class=\"n\">similarity</span> <span class=\"o\">=</span> <span class=\"n\">cosine_similarity</span><span class=\"p\">(</span>\n                <span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">tv1</span><span class=\"p\">),</span> <span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">tv2</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u8d1f\u76f8\u5173\u8868\u793a\u6f5c\u5728\u51b2\u7a81</span>\n            <span class=\"k\">if</span> <span class=\"n\">similarity</span> <span class=\"o\">&lt;</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span><span class=\"p\">:</span>\n                <span class=\"n\">conflicts</span><span class=\"p\">[(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"n\">similarity</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">conflicts</span>\n</code></pre></div>\n\n<p><strong>\u5b9e\u8df5\u8003\u8651</strong>\uff1a</p>\n<ul>\n<li><strong>\u7f29\u653e\u56e0\u5b50\u4f18\u5316</strong>\uff1a\u901a\u8fc7\u9a8c\u8bc1\u96c6\u641c\u7d22\u6700\u4f18\u7f29\u653e\u7cfb\u6570</li>\n<li><strong>\u6b63\u4ea4\u5316</strong>\uff1a\u786e\u4fdd\u4efb\u52a1\u5411\u91cf\u76f8\u4e92\u6b63\u4ea4\uff0c\u51cf\u5c11\u5e72\u6270</li>\n<li><strong>\u7a00\u758f\u5316</strong>\uff1a\u53ea\u4fdd\u7559\u91cd\u8981\u7684\u53c2\u6570\u53d8\u5316</li>\n</ul>\n<h3 id=\"733\">7.3.3 \u5c42\u7ea7\u5408\u5e76\u7b56\u7565</h3>\n<p>\u4e0d\u540c\u5c42\u53ef\u80fd\u9700\u8981\u4e0d\u540c\u7684\u5408\u5e76\u7b56\u7565\uff0c\u57fa\u4e8e\u5c42\u7684\u529f\u80fd\u548c\u91cd\u8981\u6027\uff1a</p>\n<p><strong>\u5c42\u7ea7\u91cd\u8981\u6027\u5206\u6790</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compute_layer_importance</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">layer_names</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u8ba1\u7b97\u5404\u5c42\u5bf9\u4efb\u52a1\u7684\u91cd\u8981\u6027&quot;&quot;&quot;</span>\n    <span class=\"n\">importances</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">layer_name</span> <span class=\"ow\">in</span> <span class=\"n\">layer_names</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u4e34\u65f6\u79fb\u9664\u5c42</span>\n        <span class=\"n\">original_layer</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"p\">)</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Identity</span><span class=\"p\">())</span>\n\n        <span class=\"c1\"># \u8bc4\u4f30\u6027\u80fd\u4e0b\u964d</span>\n        <span class=\"n\">degraded_performance</span> <span class=\"o\">=</span> <span class=\"n\">evaluate</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6062\u590d\u5c42</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">original_layer</span><span class=\"p\">)</span>\n        <span class=\"n\">baseline_performance</span> <span class=\"o\">=</span> <span class=\"n\">evaluate</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">)</span>\n\n        <span class=\"n\">importance</span> <span class=\"o\">=</span> <span class=\"n\">baseline_performance</span> <span class=\"o\">-</span> <span class=\"n\">degraded_performance</span>\n        <span class=\"n\">importances</span><span class=\"p\">[</span><span class=\"n\">layer_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">importance</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">importances</span>\n</code></pre></div>\n\n<p><strong>\u5206\u5c42\u5408\u5e76\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u5e95\u5c42\u5171\u4eab\uff0c\u9ad8\u5c42\u7279\u5316</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">hierarchical_merge</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">split_layer</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u4f4e\u5c42\u53c2\u6570\u5e73\u5747\uff0c\u9ad8\u5c42\u4fdd\u6301\u7279\u5316&quot;&quot;&quot;</span>\n    <span class=\"n\">merged_model</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">layer_idx</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">merged_model</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">layer_idx</span> <span class=\"o\">&lt;</span> <span class=\"n\">split_layer</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u4f4e\u5c42\uff1a\u5e73\u5747\u5408\u5e76</span>\n            <span class=\"n\">merged_model</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">layer_idx</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">average_layers</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">layer_idx</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"n\">models</span><span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u9ad8\u5c42\uff1a\u9009\u62e9\u6700\u4f73\u6216\u4fdd\u6301\u72ec\u7acb</span>\n            <span class=\"n\">best_model_idx</span> <span class=\"o\">=</span> <span class=\"n\">select_best_for_layer</span><span class=\"p\">(</span>\n                <span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">layer_idx</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">merged_model</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">layer_idx</span><span class=\"p\">]</span> <span class=\"o\">=</span> \\\n                <span class=\"n\">models</span><span class=\"p\">[</span><span class=\"n\">best_model_idx</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">layer_idx</span><span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">merged_model</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u6ce8\u610f\u529b\u5934\u9009\u62e9\u6027\u5408\u5e76</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">merge_attention_heads</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">importance_threshold</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u6839\u636e\u91cd\u8981\u6027\u9009\u62e9\u6027\u5408\u5e76\u6ce8\u610f\u529b\u5934&quot;&quot;&quot;</span>\n    <span class=\"n\">merged_attention</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"n\">n_heads</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">n_heads</span>\n    <span class=\"k\">for</span> <span class=\"n\">head_idx</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_heads</span><span class=\"p\">):</span>\n        <span class=\"n\">head_candidates</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">attention</span><span class=\"o\">.</span><span class=\"n\">heads</span><span class=\"p\">[</span><span class=\"n\">head_idx</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"n\">models</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u8bc4\u4f30\u6bcf\u4e2a\u5934\u7684\u91cd\u8981\u6027</span>\n        <span class=\"n\">importances</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">evaluate_head_importance</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">h</span> <span class=\"ow\">in</span> <span class=\"n\">head_candidates</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">importances</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">importance_threshold</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u9009\u62e9\u6700\u91cd\u8981\u7684\u5934</span>\n            <span class=\"n\">best_idx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">(</span><span class=\"n\">importances</span><span class=\"p\">)</span>\n            <span class=\"n\">merged_attention</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">head_candidates</span><span class=\"p\">[</span><span class=\"n\">best_idx</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u4f4e\u91cd\u8981\u6027\u5934\u53ef\u4ee5\u5e73\u5747</span>\n            <span class=\"n\">merged_attention</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">average_heads</span><span class=\"p\">(</span><span class=\"n\">head_candidates</span><span class=\"p\">))</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">merged_attention</span>\n</code></pre></div>\n\n<h3 id=\"734\">7.3.4 \u96c6\u6210\u5b66\u4e60\u65b9\u6cd5</h3>\n<p>\u5f53\u65e0\u6cd5\u76f4\u63a5\u5408\u5e76\u53c2\u6570\u65f6\uff0c\u96c6\u6210\u591a\u4e2a\u6a21\u578b\u7684\u9884\u6d4b\uff1a</p>\n<p><strong>\u96c6\u6210\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u52a0\u6743\u6295\u7968</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">WeightedEnsemble</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">weights</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"n\">models</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"n\">weights</span> <span class=\"ow\">or</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">)]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">predict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">input_data</span><span class=\"p\">):</span>\n        <span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">weight</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weights</span><span class=\"p\">):</span>\n            <span class=\"n\">pred</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">input_data</span><span class=\"p\">)</span>\n            <span class=\"n\">predictions</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">weight</span> <span class=\"o\">*</span> <span class=\"n\">pred</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u52a0\u6743\u5e73\u5747</span>\n        <span class=\"n\">ensemble_pred</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">predictions</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5bf9\u4e8e\u5206\u7c7b\u4efb\u52a1\uff0c\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u5f52\u4e00\u5316</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">task_type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;classification&#39;</span><span class=\"p\">:</span>\n            <span class=\"n\">ensemble_pred</span> <span class=\"o\">=</span> <span class=\"n\">softmax</span><span class=\"p\">(</span><span class=\"n\">ensemble_pred</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">ensemble_pred</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u6df7\u5408\u4e13\u5bb6\uff08MoE\uff09\u98ce\u683c</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MixtureOfExperts</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">experts</span><span class=\"p\">,</span> <span class=\"n\">gating_network</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">experts</span> <span class=\"o\">=</span> <span class=\"n\">experts</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gating</span> <span class=\"o\">=</span> <span class=\"n\">gating_network</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8ba1\u7b97\u95e8\u63a7\u6743\u91cd</span>\n        <span class=\"n\">gate_weights</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gating</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>  <span class=\"c1\"># [batch_size, n_experts]</span>\n\n        <span class=\"c1\"># \u83b7\u53d6\u6bcf\u4e2a\u4e13\u5bb6\u7684\u8f93\u51fa</span>\n        <span class=\"n\">expert_outputs</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">([</span>\n            <span class=\"n\">expert</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">expert</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">experts</span>\n        <span class=\"p\">],</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># [batch_size, n_experts, output_dim]</span>\n\n        <span class=\"c1\"># \u52a0\u6743\u7ec4\u5408</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span>\n            <span class=\"n\">gate_weights</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">expert_outputs</span><span class=\"p\">,</span> \n            <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">output</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u7ea7\u8054\u96c6\u6210</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">cascade_ensemble</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">input_data</span><span class=\"p\">,</span> <span class=\"n\">confidence_threshold</span><span class=\"o\">=</span><span class=\"mf\">0.8</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u6309\u7f6e\u4fe1\u5ea6\u7ea7\u8054\u4f7f\u7528\u6a21\u578b&quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">):</span>\n        <span class=\"n\">prediction</span><span class=\"p\">,</span> <span class=\"n\">confidence</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict_with_confidence</span><span class=\"p\">(</span><span class=\"n\">input_data</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">confidence</span> <span class=\"o\">&gt;</span> <span class=\"n\">confidence_threshold</span> <span class=\"ow\">or</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">prediction</span>\n\n    <span class=\"c1\"># \u5982\u679c\u6240\u6709\u6a21\u578b\u7f6e\u4fe1\u5ea6\u90fd\u4f4e\uff0c\u53ef\u4ee5\u7ec4\u5408\u9884\u6d4b</span>\n    <span class=\"k\">return</span> <span class=\"n\">weighted_ensemble</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">input_data</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"735\">7.3.5 \u5408\u5e76\u51b2\u7a81\u89e3\u51b3</h3>\n<p>\u5904\u7406\u6a21\u578b\u5408\u5e76\u4e2d\u7684\u51b2\u7a81\u662f\u786e\u4fdd\u8d28\u91cf\u7684\u5173\u952e\uff1a</p>\n<p><strong>\u51b2\u7a81\u7c7b\u578b\u4e0e\u89e3\u51b3\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u53c2\u6570\u7b26\u53f7\u51b2\u7a81</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">resolve_sign_conflicts</span><span class=\"p\">(</span><span class=\"n\">param_A</span><span class=\"p\">,</span> <span class=\"n\">param_B</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;magnitude&#39;</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u89e3\u51b3\u53c2\u6570\u7b26\u53f7\u76f8\u53cd\u7684\u51b2\u7a81&quot;&quot;&quot;</span>\n    <span class=\"n\">sign_conflict</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">param_A</span> <span class=\"o\">*</span> <span class=\"n\">param_B</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">method</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;magnitude&#39;</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u9009\u62e9\u7edd\u5bf9\u503c\u8f83\u5927\u7684</span>\n        <span class=\"n\">merged</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span>\n            <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">param_A</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">param_B</span><span class=\"p\">),</span>\n            <span class=\"n\">param_A</span><span class=\"p\">,</span> <span class=\"n\">param_B</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">method</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;zero&#39;</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u51b2\u7a81\u4f4d\u7f6e\u7f6e\u96f6</span>\n        <span class=\"n\">merged</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">sign_conflict</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">param_A</span> <span class=\"o\">+</span> <span class=\"n\">param_B</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">method</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;interpolate&#39;</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u6839\u636e\u91cd\u8981\u6027\u63d2\u503c</span>\n        <span class=\"n\">importance_A</span> <span class=\"o\">=</span> <span class=\"n\">compute_param_importance</span><span class=\"p\">(</span><span class=\"n\">param_A</span><span class=\"p\">)</span>\n        <span class=\"n\">importance_B</span> <span class=\"o\">=</span> <span class=\"n\">compute_param_importance</span><span class=\"p\">(</span><span class=\"n\">param_B</span><span class=\"p\">)</span>\n        <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">importance_A</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">importance_A</span> <span class=\"o\">+</span> <span class=\"n\">importance_B</span><span class=\"p\">)</span>\n        <span class=\"n\">merged</span> <span class=\"o\">=</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">param_A</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">alpha</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">param_B</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">merged</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u68af\u5ea6\u51b2\u7a81\u68c0\u6d4b\u4e0e\u7f13\u89e3</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">gradient_surgery</span><span class=\"p\">(</span><span class=\"n\">gradients</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u68af\u5ea6\u624b\u672f\uff1a\u6295\u5f71\u51b2\u7a81\u68af\u5ea6\u5230\u6b63\u4ea4\u7a7a\u95f4&quot;&quot;&quot;</span>\n    <span class=\"n\">modified_grads</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">g_i</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">gradients</span><span class=\"p\">):</span>\n        <span class=\"n\">g_modified</span> <span class=\"o\">=</span> <span class=\"n\">g_i</span><span class=\"o\">.</span><span class=\"n\">clone</span><span class=\"p\">()</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">g_j</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">gradients</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"n\">j</span><span class=\"p\">:</span>\n                <span class=\"c1\"># \u8ba1\u7b97\u4f59\u5f26\u76f8\u4f3c\u5ea6</span>\n                <span class=\"n\">cos_sim</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">cosine_similarity</span><span class=\"p\">(</span><span class=\"n\">g_i</span><span class=\"p\">,</span> <span class=\"n\">g_j</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n                <span class=\"k\">if</span> <span class=\"n\">cos_sim</span> <span class=\"o\">&lt;</span> <span class=\"n\">threshold</span><span class=\"p\">:</span>  <span class=\"c1\"># \u8d1f\u76f8\u5173\uff0c\u5b58\u5728\u51b2\u7a81</span>\n                    <span class=\"c1\"># \u6295\u5f71\u5230\u6b63\u4ea4\u7a7a\u95f4</span>\n                    <span class=\"n\">projection</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">g_i</span> <span class=\"o\">@</span> <span class=\"n\">g_j</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">g_j</span> <span class=\"o\">@</span> <span class=\"n\">g_j</span> <span class=\"o\">+</span> <span class=\"mf\">1e-8</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">g_j</span>\n                    <span class=\"n\">g_modified</span> <span class=\"o\">=</span> <span class=\"n\">g_modified</span> <span class=\"o\">-</span> <span class=\"n\">projection</span>\n\n        <span class=\"n\">modified_grads</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">g_modified</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">modified_grads</span>\n</code></pre></div>\n\n<p><strong>\u5408\u5e76\u8d28\u91cf\u9a8c\u8bc1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">validate_merge_quality</span><span class=\"p\">(</span><span class=\"n\">original_models</span><span class=\"p\">,</span> <span class=\"n\">merged_model</span><span class=\"p\">,</span> <span class=\"n\">test_sets</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u9a8c\u8bc1\u5408\u5e76\u540e\u6a21\u578b\u7684\u8d28\u91cf&quot;&quot;&quot;</span>\n    <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;performance_retention&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n        <span class=\"s1\">&#39;capability_preservation&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n        <span class=\"s1\">&#39;emergence_score&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">original</span><span class=\"p\">,</span> <span class=\"n\">test_set</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">original_models</span><span class=\"p\">,</span> <span class=\"n\">test_sets</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u6027\u80fd\u4fdd\u6301\u7387</span>\n        <span class=\"n\">original_score</span> <span class=\"o\">=</span> <span class=\"n\">evaluate</span><span class=\"p\">(</span><span class=\"n\">original</span><span class=\"p\">,</span> <span class=\"n\">test_set</span><span class=\"p\">)</span>\n        <span class=\"n\">merged_score</span> <span class=\"o\">=</span> <span class=\"n\">evaluate</span><span class=\"p\">(</span><span class=\"n\">merged_model</span><span class=\"p\">,</span> <span class=\"n\">test_set</span><span class=\"p\">)</span>\n        <span class=\"n\">retention</span> <span class=\"o\">=</span> <span class=\"n\">merged_score</span> <span class=\"o\">/</span> <span class=\"n\">original_score</span>\n        <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;performance_retention&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">retention</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u80fd\u529b\u4fdd\u7559\u68c0\u67e5</span>\n        <span class=\"n\">capability_tests</span> <span class=\"o\">=</span> <span class=\"n\">generate_capability_tests</span><span class=\"p\">(</span><span class=\"n\">original</span><span class=\"p\">)</span>\n        <span class=\"n\">preservation</span> <span class=\"o\">=</span> <span class=\"n\">evaluate_capabilities</span><span class=\"p\">(</span><span class=\"n\">merged_model</span><span class=\"p\">,</span> <span class=\"n\">capability_tests</span><span class=\"p\">)</span>\n        <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;capability_preservation&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">preservation</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u6d8c\u73b0\u80fd\u529b\uff08\u5408\u5e76\u540e\u51fa\u73b0\u7684\u65b0\u80fd\u529b\uff09</span>\n    <span class=\"n\">combined_test</span> <span class=\"o\">=</span> <span class=\"n\">combine_test_sets</span><span class=\"p\">(</span><span class=\"n\">test_sets</span><span class=\"p\">)</span>\n    <span class=\"n\">emergence</span> <span class=\"o\">=</span> <span class=\"n\">evaluate_emergence</span><span class=\"p\">(</span><span class=\"n\">merged_model</span><span class=\"p\">,</span> <span class=\"n\">combined_test</span><span class=\"p\">,</span> <span class=\"n\">original_models</span><span class=\"p\">)</span>\n    <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;emergence_score&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">emergence</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">metrics</span>\n</code></pre></div>\n\n<h2 id=\"74\">7.4 \u8d85\u53c2\u6570\u641c\u7d22\u7684\u5b9e\u7528\u6280\u5de7</h2>\n<p>\u8d85\u53c2\u6570\u4f18\u5316\u662f\u540e\u8bad\u7ec3\u6210\u529f\u7684\u5173\u952e\u56e0\u7d20\u4e4b\u4e00\u3002\u4e0e\u9884\u8bad\u7ec3\u76f8\u6bd4\uff0c\u540e\u8bad\u7ec3\u7684\u8d85\u53c2\u6570\u7a7a\u95f4\u66f4\u590d\u6742\uff0c\u9700\u8981\u66f4\u7cbe\u7ec6\u7684\u641c\u7d22\u7b56\u7565\u3002</p>\n<h3 id=\"741\">7.4.1 \u641c\u7d22\u7a7a\u95f4\u8bbe\u8ba1</h3>\n<p>\u5408\u7406\u7684\u641c\u7d22\u7a7a\u95f4\u8bbe\u8ba1\u53ef\u4ee5\u5927\u5e45\u63d0\u9ad8\u641c\u7d22\u6548\u7387\uff1a</p>\n<p><strong>\u5173\u952e\u8d85\u53c2\u6570\u53ca\u5176\u8303\u56f4</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">hyperparameter_space</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># \u5b66\u4e60\u7387\u76f8\u5173</span>\n    <span class=\"s2\">&quot;learning_rate&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;log_uniform&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;low&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1e-6</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;high&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1e-3</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\u5cf0\u503c\u5b66\u4e60\u7387&quot;</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;warmup_ratio&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;uniform&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;low&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;high&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\u9884\u70ed\u6b65\u6570\u6bd4\u4f8b&quot;</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\"># \u8bad\u7ec3\u914d\u7f6e</span>\n    <span class=\"s2\">&quot;batch_size&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;choice&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;values&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">],</span>\n        <span class=\"s2\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\u6709\u6548\u6279\u6b21\u5927\u5c0f&quot;</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;gradient_accumulation_steps&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;choice&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;values&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">],</span>\n        <span class=\"s2\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;\u68af\u5ea6\u7d2f\u79ef\u6b65\u6570&quot;</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\"># \u6b63\u5219\u5316</span>\n    <span class=\"s2\">&quot;weight_decay&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;log_uniform&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;low&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1e-4</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;high&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1e-1</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;dropout&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;uniform&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;low&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;high&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span>\n    <span class=\"p\">},</span>\n\n    <span class=\"c1\"># RLHF \u7279\u5b9a\u53c2\u6570</span>\n    <span class=\"s2\">&quot;kl_coefficient&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;log_uniform&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;low&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.001</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;high&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;KL \u6563\u5ea6\u60e9\u7f5a\u7cfb\u6570&quot;</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;clip_range&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;uniform&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;low&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;high&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;PPO \u88c1\u526a\u8303\u56f4&quot;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u6761\u4ef6\u4f9d\u8d56\u5173\u7cfb</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">conditional_hyperparameters</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u5904\u7406\u8d85\u53c2\u6570\u95f4\u7684\u6761\u4ef6\u4f9d\u8d56&quot;&quot;&quot;</span>\n    <span class=\"c1\"># \u5982\u679c\u4f7f\u7528 LoRA\uff0c\u6dfb\u52a0\u76f8\u5173\u53c2\u6570</span>\n    <span class=\"k\">if</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;use_lora&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;lora_rank&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sample_from</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;lora_alpha&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;lora_rank&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;lora_dropout&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sample_from</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u5b66\u4e60\u7387\u4e0e\u6279\u6b21\u5927\u5c0f\u7684\u5173\u7cfb</span>\n    <span class=\"k\">if</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;batch_size&quot;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">32</span><span class=\"p\">:</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;learning_rate&quot;</span><span class=\"p\">]</span> <span class=\"o\">*=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;batch_size&quot;</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">32</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u68af\u5ea6\u7d2f\u79ef\u4e0e\u5b9e\u9645\u6279\u6b21\u5927\u5c0f</span>\n    <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;effective_batch_size&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;batch_size&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;gradient_accumulation_steps&quot;</span><span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">config</span>\n</code></pre></div>\n\n<p><strong>\u641c\u7d22\u7a7a\u95f4\u7ea6\u7b80\u6280\u5de7</strong>\uff1a</p>\n<ol>\n<li><strong>\u5206\u9636\u6bb5\u641c\u7d22</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">staged_search</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u7b2c\u4e00\u9636\u6bb5\uff1a\u7c97\u7c92\u5ea6\u641c\u7d22</span>\n    <span class=\"n\">stage1_space</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;learning_rate&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">1e-5</span><span class=\"p\">,</span> <span class=\"mf\">1e-4</span><span class=\"p\">,</span> <span class=\"mf\">1e-3</span><span class=\"p\">],</span>\n        <span class=\"s2\">&quot;batch_size&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">best_config_stage1</span> <span class=\"o\">=</span> <span class=\"n\">grid_search</span><span class=\"p\">(</span><span class=\"n\">stage1_space</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u7b2c\u4e8c\u9636\u6bb5\uff1a\u7ec6\u7c92\u5ea6\u641c\u7d22</span>\n    <span class=\"n\">stage2_space</span> <span class=\"o\">=</span> <span class=\"n\">create_refined_space</span><span class=\"p\">(</span><span class=\"n\">best_config_stage1</span><span class=\"p\">)</span>\n    <span class=\"n\">best_config</span> <span class=\"o\">=</span> <span class=\"n\">bayesian_optimization</span><span class=\"p\">(</span><span class=\"n\">stage2_space</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">best_config</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u91cd\u8981\u6027\u91c7\u6837</strong>\uff1a\n   \u57fa\u4e8e\u53c2\u6570\u91cd\u8981\u6027\u5206\u914d\u641c\u7d22\u9884\u7b97</li>\n</ol>\n<h3 id=\"742\">7.4.2 \u8d1d\u53f6\u65af\u4f18\u5316</h3>\n<p>\u8d1d\u53f6\u65af\u4f18\u5316\u901a\u8fc7\u5efa\u7acb\u4ee3\u7406\u6a21\u578b\u9ad8\u6548\u63a2\u7d22\u8d85\u53c2\u6570\u7a7a\u95f4\uff1a</p>\n<p><strong>\u9ad8\u65af\u8fc7\u7a0b\u5b9e\u73b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">BayesianOptimizer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">space</span><span class=\"p\">,</span> <span class=\"n\">acquisition_func</span><span class=\"o\">=</span><span class=\"s2\">&quot;ei&quot;</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">space</span> <span class=\"o\">=</span> <span class=\"n\">space</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gp</span> <span class=\"o\">=</span> <span class=\"n\">GaussianProcessRegressor</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">acquisition_func</span> <span class=\"o\">=</span> <span class=\"n\">acquisition_func</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">observations</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">suggest_next</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">observations</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u521d\u59cb\u968f\u673a\u63a2\u7d22</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">random_sample</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u8bad\u7ec3\u9ad8\u65af\u8fc7\u7a0b</span>\n        <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">obs</span><span class=\"p\">[</span><span class=\"s2\">&quot;config&quot;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">obs</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">observations</span><span class=\"p\">]</span>\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">obs</span><span class=\"p\">[</span><span class=\"s2\">&quot;score&quot;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">obs</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">observations</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u4f18\u5316\u83b7\u53d6\u51fd\u6570</span>\n        <span class=\"n\">next_point</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">optimize_acquisition</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">next_point</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">optimize_acquisition</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4f18\u5316\u83b7\u53d6\u51fd\u6570\u627e\u5230\u4e0b\u4e00\u4e2a\u91c7\u6837\u70b9&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">acquisition_func</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ei&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expected_improvement</span><span class=\"p\">()</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">acquisition_func</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ucb&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">upper_confidence_bound</span><span class=\"p\">()</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">acquisition_func</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;pi&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">probability_improvement</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">expected_improvement</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u671f\u671b\u6539\u8fdb\u83b7\u53d6\u51fd\u6570&quot;&quot;&quot;</span>\n        <span class=\"n\">best_y</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">([</span><span class=\"n\">obs</span><span class=\"p\">[</span><span class=\"s2\">&quot;score&quot;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">obs</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">observations</span><span class=\"p\">])</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">ei</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n            <span class=\"n\">mean</span><span class=\"p\">,</span> <span class=\"n\">std</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">return_std</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">mean</span> <span class=\"o\">-</span> <span class=\"n\">best_y</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">std</span> <span class=\"o\">+</span> <span class=\"mf\">1e-9</span><span class=\"p\">)</span>\n            <span class=\"n\">ei_value</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">mean</span> <span class=\"o\">-</span> <span class=\"n\">best_y</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">norm</span><span class=\"o\">.</span><span class=\"n\">cdf</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">std</span> <span class=\"o\">*</span> <span class=\"n\">norm</span><span class=\"o\">.</span><span class=\"n\">pdf</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"n\">ei_value</span>  <span class=\"c1\"># \u8d1f\u503c\u7528\u4e8e\u6700\u5c0f\u5316</span>\n\n        <span class=\"c1\"># \u591a\u8d77\u70b9\u4f18\u5316</span>\n        <span class=\"n\">best_x</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">best_ei</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s2\">&quot;-inf&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n            <span class=\"n\">x0</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">random_sample</span><span class=\"p\">()</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">minimize</span><span class=\"p\">(</span><span class=\"n\">ei</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">bounds</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">space</span><span class=\"o\">.</span><span class=\"n\">bounds</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">-</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">fun</span> <span class=\"o\">&gt;</span> <span class=\"n\">best_ei</span><span class=\"p\">:</span>\n                <span class=\"n\">best_ei</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">fun</span>\n                <span class=\"n\">best_x</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">x</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">best_x</span>\n</code></pre></div>\n\n<p><strong>\u591a\u4fdd\u771f\u5ea6\u4f18\u5316\uff08Multi-fidelity\uff09</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">successive_halving</span><span class=\"p\">(</span><span class=\"n\">configs</span><span class=\"p\">,</span> <span class=\"n\">budget</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Successive Halving \u7b97\u6cd5&quot;&quot;&quot;</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">configs</span><span class=\"p\">)</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">budget</span> <span class=\"o\">/</span> <span class=\"n\">n</span>  <span class=\"c1\"># \u521d\u59cb\u8d44\u6e90\u5206\u914d</span>\n\n    <span class=\"k\">while</span> <span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u8bad\u7ec3\u6240\u6709\u914d\u7f6e r \u4e2a epoch</span>\n        <span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">config</span> <span class=\"ow\">in</span> <span class=\"n\">configs</span><span class=\"p\">:</span>\n            <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">train_and_evaluate</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">))</span>\n            <span class=\"n\">scores</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u4fdd\u7559\u524d 1/eta</span>\n        <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\">//</span> <span class=\"n\">eta</span><span class=\"p\">)</span>\n        <span class=\"n\">top_k_indices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argsort</span><span class=\"p\">(</span><span class=\"n\">scores</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"n\">k</span><span class=\"p\">:]</span>\n        <span class=\"n\">configs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">configs</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">top_k_indices</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u589e\u52a0\u8d44\u6e90</span>\n        <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">configs</span><span class=\"p\">)</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">*</span> <span class=\"n\">eta</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">configs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<h3 id=\"743\">7.4.3 \u7fa4\u4f53\u8bad\u7ec3\u7b56\u7565</h3>\n<p>\u540c\u65f6\u8bad\u7ec3\u591a\u4e2a\u6a21\u578b\u53d8\u4f53\uff0c\u5229\u7528\u7fa4\u4f53\u667a\u6167\uff1a</p>\n<p><strong>Population Based Training (PBT)</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">PopulationBasedTraining</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">population_size</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">population_size</span> <span class=\"o\">=</span> <span class=\"n\">population_size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">population</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">initialize_population</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">initialize_population</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u521d\u59cb\u5316\u79cd\u7fa4&quot;&quot;&quot;</span>\n        <span class=\"n\">population</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">population_size</span><span class=\"p\">):</span>\n            <span class=\"n\">member</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;config&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sample_hyperparameters</span><span class=\"p\">(),</span>\n                <span class=\"s2\">&quot;model&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;score&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;age&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">population</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">member</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">population</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">evolve</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">steps</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8fdb\u5316\u8fc7\u7a0b&quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">step</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">steps</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u5e76\u884c\u8bad\u7ec3\u4e00\u6bb5\u65f6\u95f4</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">train_population</span><span class=\"p\">(</span><span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u8bc4\u4f30\u6027\u80fd</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">evaluate_population</span><span class=\"p\">()</span>\n\n            <span class=\"c1\"># \u6267\u884c\u8fdb\u5316\u64cd\u4f5c</span>\n            <span class=\"k\">if</span> <span class=\"n\">step</span> <span class=\"o\">%</span> <span class=\"mi\">10</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">exploit_and_explore</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">exploit_and_explore</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5229\u7528\u548c\u63a2\u7d22&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u6392\u5e8f\u79cd\u7fa4</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">population</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"s2\">&quot;score&quot;</span><span class=\"p\">],</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5e95\u90e8 25% \u88ab\u9876\u90e8 25% \u66ff\u6362</span>\n        <span class=\"n\">bottom_quartile</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">population_size</span> <span class=\"o\">//</span> <span class=\"mi\">4</span>\n        <span class=\"n\">top_quartile</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">population_size</span> <span class=\"o\">//</span> <span class=\"mi\">4</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">bottom_quartile</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u590d\u5236\u9ad8\u6027\u80fd\u6210\u5458</span>\n            <span class=\"n\">source_idx</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"n\">top_quartile</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">population</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">copy_member</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">population</span><span class=\"p\">[</span><span class=\"n\">source_idx</span><span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u6270\u52a8\u8d85\u53c2\u6570\uff08\u63a2\u7d22\uff09</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">perturb_hyperparameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">population</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)])</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">perturb_hyperparameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">member</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6270\u52a8\u8d85\u53c2\u6570\u8fdb\u884c\u63a2\u7d22&quot;&quot;&quot;</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">member</span><span class=\"p\">[</span><span class=\"s2\">&quot;config&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">param</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.2</span><span class=\"p\">:</span>  <span class=\"c1\"># 20% \u6982\u7387\u6270\u52a8</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">):</span>\n                    <span class=\"c1\"># \u4e58\u6027\u6270\u52a8</span>\n                    <span class=\"n\">factor</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">([</span><span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">1.2</span><span class=\"p\">])</span>\n                    <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"n\">param</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span> <span class=\"o\">*</span> <span class=\"n\">factor</span>\n                <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n                    <span class=\"c1\"># \u52a0\u6027\u6270\u52a8</span>\n                    <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"n\">param</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">+</span> <span class=\"n\">delta</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"744\">7.4.4 \u65e9\u505c\u4e0e\u9884\u7b97\u5206\u914d</h3>\n<p>\u667a\u80fd\u5206\u914d\u8ba1\u7b97\u8d44\u6e90\uff0c\u907f\u514d\u5728\u5dee\u914d\u7f6e\u4e0a\u6d6a\u8d39\u65f6\u95f4\uff1a</p>\n<p><strong>\u81ea\u9002\u5e94\u65e9\u505c\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">AdaptiveEarlyStopping</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">patience</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">min_delta</span><span class=\"o\">=</span><span class=\"mf\">0.001</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">patience</span> <span class=\"o\">=</span> <span class=\"n\">patience</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_delta</span> <span class=\"o\">=</span> <span class=\"n\">min_delta</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">best_score</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s1\">&#39;-inf&#39;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">early_stop</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">current_score</span><span class=\"p\">,</span> <span class=\"n\">epoch</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u76f8\u5bf9\u6539\u8fdb</span>\n        <span class=\"n\">relative_improvement</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"p\">(</span><span class=\"n\">current_score</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">best_score</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">best_score</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mf\">1e-10</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">relative_improvement</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_delta</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">best_score</span> <span class=\"o\">=</span> <span class=\"n\">current_score</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">counter</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"c1\"># \u52a8\u6001\u8c03\u6574 patience</span>\n        <span class=\"k\">if</span> <span class=\"n\">epoch</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n            <span class=\"n\">adjusted_patience</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">patience</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>  <span class=\"c1\"># \u65e9\u671f\u66f4\u5bbd\u5bb9</span>\n        <span class=\"k\">elif</span> <span class=\"n\">epoch</span> <span class=\"o\">&gt;</span> <span class=\"mi\">50</span><span class=\"p\">:</span>\n            <span class=\"n\">adjusted_patience</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">patience</span> <span class=\"o\">//</span> <span class=\"mi\">2</span>  <span class=\"c1\"># \u540e\u671f\u66f4\u4e25\u683c</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">adjusted_patience</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">patience</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">counter</span> <span class=\"o\">&gt;=</span> <span class=\"n\">adjusted_patience</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">early_stop</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">early_stop</span>\n</code></pre></div>\n\n<p><strong>\u9884\u7b97\u5206\u914d\u7b97\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">hyperband</span><span class=\"p\">(</span><span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">81</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Hyperband \u7b97\u6cd5&quot;&quot;&quot;</span>\n    <span class=\"n\">logeta</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">eta</span><span class=\"p\">)</span>\n    <span class=\"n\">s_max</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">logeta</span><span class=\"p\">(</span><span class=\"n\">max_iter</span><span class=\"p\">))</span>\n    <span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">s_max</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">max_iter</span>\n\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">s_max</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)):</span>\n        <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ceil</span><span class=\"p\">(</span><span class=\"n\">B</span> <span class=\"o\">/</span> <span class=\"n\">max_iter</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">eta</span> <span class=\"o\">**</span> <span class=\"n\">s</span><span class=\"p\">))</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">max_iter</span> <span class=\"o\">*</span> <span class=\"n\">eta</span> <span class=\"o\">**</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Successive halving</span>\n        <span class=\"n\">configs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sample_configuration</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">s</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"n\">n_configs</span> <span class=\"o\">=</span> <span class=\"n\">n</span> <span class=\"o\">*</span> <span class=\"n\">eta</span> <span class=\"o\">**</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">i</span><span class=\"p\">)</span>\n            <span class=\"n\">n_iterations</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">*</span> <span class=\"n\">eta</span> <span class=\"o\">**</span> <span class=\"n\">i</span>\n\n            <span class=\"c1\"># \u8bad\u7ec3\u548c\u8bc4\u4f30</span>\n            <span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">config</span> <span class=\"ow\">in</span> <span class=\"n\">configs</span><span class=\"p\">[:</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">n_configs</span><span class=\"p\">)]:</span>\n                <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">train_and_evaluate</span><span class=\"p\">(</span>\n                    <span class=\"n\">config</span><span class=\"p\">,</span> \n                    <span class=\"n\">iterations</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">n_iterations</span><span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">scores</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">score</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># \u9009\u62e9\u6700\u4f73\u914d\u7f6e\u7ee7\u7eed</span>\n            <span class=\"n\">scores</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">configs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">config</span> <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">config</span> <span class=\"ow\">in</span> <span class=\"n\">scores</span><span class=\"p\">[:</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">n_configs</span> <span class=\"o\">/</span> <span class=\"n\">eta</span><span class=\"p\">)]]</span>\n\n        <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">scores</span><span class=\"p\">[:</span><span class=\"mi\">1</span><span class=\"p\">])</span>  <span class=\"c1\"># \u4fdd\u5b58\u6700\u4f73\u7ed3\u679c</span>\n\n    <span class=\"k\">return</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<h3 id=\"745\">7.4.5 \u8d85\u53c2\u6570\u8fc1\u79fb\u5b66\u4e60</h3>\n<p>\u5229\u7528\u5386\u53f2\u4efb\u52a1\u7684\u8d85\u53c2\u6570\u77e5\u8bc6\u52a0\u901f\u65b0\u4efb\u52a1\u7684\u641c\u7d22\uff1a</p>\n<p><strong>\u5143\u5b66\u4e60\u8d85\u53c2\u6570</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">HyperparameterMetaLearner</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">task_embeddings</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hyperparameter_history</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta_model</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">build_meta_model</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">build_meta_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6784\u5efa\u5143\u5b66\u4e60\u6a21\u578b&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">RandomForestRegressor</span><span class=\"p\">(</span><span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">learn_from_task</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">task_features</span><span class=\"p\">,</span> <span class=\"n\">best_hyperparams</span><span class=\"p\">,</span> <span class=\"n\">performance</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4ece\u4efb\u52a1\u4e2d\u5b66\u4e60&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hyperparameter_history</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n            <span class=\"s2\">&quot;task_features&quot;</span><span class=\"p\">:</span> <span class=\"n\">task_features</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;hyperparams&quot;</span><span class=\"p\">:</span> <span class=\"n\">best_hyperparams</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;performance&quot;</span><span class=\"p\">:</span> <span class=\"n\">performance</span>\n        <span class=\"p\">})</span>\n\n        <span class=\"c1\"># \u66f4\u65b0\u5143\u6a21\u578b</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hyperparameter_history</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n            <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"s2\">&quot;task_features&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"s2\">&quot;hyperparams&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())</span> \n                 <span class=\"k\">for</span> <span class=\"n\">h</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hyperparameter_history</span><span class=\"p\">]</span>\n            <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"s2\">&quot;performance&quot;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">h</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hyperparameter_history</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">suggest_initial_hyperparams</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_task_features</span><span class=\"p\">,</span> <span class=\"n\">n_suggestions</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4e3a\u65b0\u4efb\u52a1\u5efa\u8bae\u521d\u59cb\u8d85\u53c2\u6570&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hyperparameter_history</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u5386\u53f2\u6570\u636e\u4e0d\u8db3\uff0c\u8fd4\u56de\u968f\u673a\u914d\u7f6e</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">sample_random_config</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_suggestions</span><span class=\"p\">)]</span>\n\n        <span class=\"c1\"># \u627e\u5230\u76f8\u4f3c\u4efb\u52a1</span>\n        <span class=\"n\">similar_tasks</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">find_similar_tasks</span><span class=\"p\">(</span><span class=\"n\">new_task_features</span><span class=\"p\">)</span>\n\n        <span class=\"n\">suggestions</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">task</span> <span class=\"ow\">in</span> <span class=\"n\">similar_tasks</span><span class=\"p\">[:</span><span class=\"n\">n_suggestions</span><span class=\"p\">]:</span>\n            <span class=\"c1\"># \u57fa\u4e8e\u76f8\u4f3c\u4efb\u52a1\u7684\u8d85\u53c2\u6570\uff0c\u6dfb\u52a0\u5c0f\u6270\u52a8</span>\n            <span class=\"n\">base_config</span> <span class=\"o\">=</span> <span class=\"n\">task</span><span class=\"p\">[</span><span class=\"s2\">&quot;hyperparams&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n            <span class=\"n\">perturbed_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">perturb_config</span><span class=\"p\">(</span><span class=\"n\">base_config</span><span class=\"p\">)</span>\n            <span class=\"n\">suggestions</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">perturbed_config</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">suggestions</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">find_similar_tasks</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">task_features</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u627e\u5230\u6700\u76f8\u4f3c\u7684\u5386\u53f2\u4efb\u52a1&quot;&quot;&quot;</span>\n        <span class=\"n\">distances</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">hist</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hyperparameter_history</span><span class=\"p\">:</span>\n            <span class=\"n\">dist</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span>\n                <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">task_features</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">hist</span><span class=\"p\">[</span><span class=\"s2\">&quot;task_features&quot;</span><span class=\"p\">])</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">distances</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">dist</span><span class=\"p\">,</span> <span class=\"n\">hist</span><span class=\"p\">))</span>\n\n        <span class=\"n\">distances</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">hist</span> <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">hist</span> <span class=\"ow\">in</span> <span class=\"n\">distances</span><span class=\"p\">[:</span><span class=\"n\">k</span><span class=\"p\">]]</span>\n</code></pre></div>\n\n<h2 id=\"75\">7.5 \u5206\u5e03\u5f0f\u8bad\u7ec3\u7684\u5de5\u7a0b\u4f18\u5316</h2>\n<p>\u5927\u89c4\u6a21 LLM \u540e\u8bad\u7ec3\u5fc5\u987b\u4f9d\u8d56\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u5408\u7406\u7684\u5206\u5e03\u5f0f\u7b56\u7565\u548c\u5de5\u7a0b\u4f18\u5316\u53ef\u4ee5\u663e\u8457\u63d0\u5347\u8bad\u7ec3\u6548\u7387\u548c\u7a33\u5b9a\u6027\u3002</p>\n<h3 id=\"751\">7.5.1 \u5e76\u884c\u7b56\u7565\u9009\u62e9</h3>\n<p>\u6839\u636e\u6a21\u578b\u89c4\u6a21\u548c\u786c\u4ef6\u8d44\u6e90\u9009\u62e9\u5408\u9002\u7684\u5e76\u884c\u7b56\u7565\uff1a</p>\n<p><strong>\u5e76\u884c\u7b56\u7565\u5bf9\u6bd4</strong>\uff1a</p>\n<p>| \u7b56\u7565 | \u901a\u4fe1\u5f00\u9500 | \u5185\u5b58\u6548\u7387 | \u9002\u7528\u573a\u666f |</p>\n<table>\n<thead>\n<tr>\n<th>\u7b56\u7565</th>\n<th>\u901a\u4fe1\u5f00\u9500</th>\n<th>\u5185\u5b58\u6548\u7387</th>\n<th>\u9002\u7528\u573a\u666f</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u6570\u636e\u5e76\u884c(DP)</td>\n<td>O(\u6a21\u578b\u5927\u5c0f)</td>\n<td>\u4f4e</td>\n<td>\u5c0f\u6a21\u578b\uff0c\u5927\u6279\u6b21</td>\n</tr>\n<tr>\n<td>\u5f20\u91cf\u5e76\u884c(TP)</td>\n<td>O(\u6fc0\u6d3b\u5927\u5c0f)</td>\n<td>\u9ad8</td>\n<td>\u5355\u5c42\u53c2\u6570\u8d85\u8fc7GPU\u5185\u5b58</td>\n</tr>\n<tr>\n<td>\u6d41\u6c34\u7ebf\u5e76\u884c(PP)</td>\n<td>O(\u6279\u6b21\u5927\u5c0f)</td>\n<td>\u4e2d</td>\n<td>\u6df1\u5c42\u7f51\u7edc</td>\n</tr>\n<tr>\n<td>3D\u5e76\u884c</td>\n<td>\u6df7\u5408</td>\n<td>\u6700\u9ad8</td>\n<td>\u8d85\u5927\u89c4\u6a21\u6a21\u578b</td>\n</tr>\n</tbody>\n</table>\n<p><strong>\u6df7\u5408\u5e76\u884c\u7b56\u7565\u5b9e\u73b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">HybridParallelConfig</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">world_size</span><span class=\"p\">,</span> <span class=\"n\">model_config</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">world_size</span> <span class=\"o\">=</span> <span class=\"n\">world_size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_config</span> <span class=\"o\">=</span> <span class=\"n\">model_config</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">strategy</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">determine_strategy</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">determine_strategy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6839\u636e\u6a21\u578b\u548c\u786c\u4ef6\u81ea\u52a8\u786e\u5b9a\u5e76\u884c\u7b56\u7565&quot;&quot;&quot;</span>\n        <span class=\"n\">model_params</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_config</span><span class=\"o\">.</span><span class=\"n\">num_parameters</span>\n        <span class=\"n\">gpu_memory</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"o\">.</span><span class=\"n\">get_device_properties</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">total_memory</span>\n\n        <span class=\"c1\"># \u4f30\u7b97\u5355GPU\u80fd\u5426\u5bb9\u7eb3\u6a21\u578b</span>\n        <span class=\"n\">bytes_per_param</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>  <span class=\"c1\"># FP32</span>\n        <span class=\"n\">model_memory</span> <span class=\"o\">=</span> <span class=\"n\">model_params</span> <span class=\"o\">*</span> <span class=\"n\">bytes_per_param</span>\n        <span class=\"n\">activation_memory</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimate_activation_memory</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">model_memory</span> <span class=\"o\">+</span> <span class=\"n\">activation_memory</span> <span class=\"o\">&lt;</span> <span class=\"n\">gpu_memory</span> <span class=\"o\">*</span> <span class=\"mf\">0.8</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u7eaf\u6570\u636e\u5e76\u884c</span>\n            <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">&quot;dp&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">world_size</span><span class=\"p\">,</span> <span class=\"s2\">&quot;tp&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pp&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n\n        <span class=\"c1\"># \u9700\u8981\u6a21\u578b\u5e76\u884c</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_config</span><span class=\"o\">.</span><span class=\"n\">num_layers</span> <span class=\"o\">&gt;</span> <span class=\"mi\">24</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6df1\u5c42\u7f51\u7edc\uff0c\u4f7f\u7528\u6d41\u6c34\u7ebf\u5e76\u884c</span>\n            <span class=\"n\">pp_size</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_config</span><span class=\"o\">.</span><span class=\"n\">num_layers</span> <span class=\"o\">//</span> <span class=\"mi\">12</span><span class=\"p\">)</span>\n            <span class=\"n\">remaining</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">world_size</span> <span class=\"o\">//</span> <span class=\"n\">pp_size</span>\n\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_config</span><span class=\"o\">.</span><span class=\"n\">hidden_size</span> <span class=\"o\">&gt;</span> <span class=\"mi\">8192</span><span class=\"p\">:</span>\n                <span class=\"c1\"># \u5bbd\u6a21\u578b\uff0c\u6dfb\u52a0\u5f20\u91cf\u5e76\u884c</span>\n                <span class=\"n\">tp_size</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">remaining</span><span class=\"p\">)</span>\n                <span class=\"n\">dp_size</span> <span class=\"o\">=</span> <span class=\"n\">remaining</span> <span class=\"o\">//</span> <span class=\"n\">tp_size</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">tp_size</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n                <span class=\"n\">dp_size</span> <span class=\"o\">=</span> <span class=\"n\">remaining</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6d45\u5c42\u5bbd\u6a21\u578b\uff0c\u4e3b\u8981\u4f7f\u7528\u5f20\u91cf\u5e76\u884c</span>\n            <span class=\"n\">tp_size</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">world_size</span><span class=\"p\">)</span>\n            <span class=\"n\">dp_size</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">world_size</span> <span class=\"o\">//</span> <span class=\"n\">tp_size</span>\n            <span class=\"n\">pp_size</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">&quot;dp&quot;</span><span class=\"p\">:</span> <span class=\"n\">dp_size</span><span class=\"p\">,</span> <span class=\"s2\">&quot;tp&quot;</span><span class=\"p\">:</span> <span class=\"n\">tp_size</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pp&quot;</span><span class=\"p\">:</span> <span class=\"n\">pp_size</span><span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>ZeRO \u4f18\u5316\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">configure_zero_optimization</span><span class=\"p\">(</span><span class=\"n\">stage</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u914d\u7f6e ZeRO \u4f18\u5316&quot;&quot;&quot;</span>\n    <span class=\"n\">zero_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;stage&quot;</span><span class=\"p\">:</span> <span class=\"n\">stage</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;allgather_partitions&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;allgather_bucket_size&quot;</span><span class=\"p\">:</span> <span class=\"mf\">2e8</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;overlap_comm&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;reduce_scatter&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;reduce_bucket_size&quot;</span><span class=\"p\">:</span> <span class=\"mf\">2e8</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;contiguous_gradients&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">stage</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n        <span class=\"c1\"># ZeRO-2: \u4f18\u5316\u5668\u72b6\u6001\u5206\u7247</span>\n        <span class=\"n\">zero_config</span><span class=\"p\">[</span><span class=\"s2\">&quot;offload_optimizer&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;device&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;cpu&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;pin_memory&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">stage</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n        <span class=\"c1\"># ZeRO-3: \u53c2\u6570\u5206\u7247</span>\n        <span class=\"n\">zero_config</span><span class=\"p\">[</span><span class=\"s2\">&quot;offload_param&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;device&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;cpu&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;pin_memory&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">zero_config</span><span class=\"p\">[</span><span class=\"s2\">&quot;param_persistence_threshold&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1e5</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">zero_config</span>\n</code></pre></div>\n\n<h3 id=\"752\">7.5.2 \u901a\u4fe1\u4f18\u5316</h3>\n<p>\u51cf\u5c11\u901a\u4fe1\u5f00\u9500\u662f\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684\u5173\u952e\u4f18\u5316\u70b9\uff1a</p>\n<p><strong>\u68af\u5ea6\u538b\u7f29</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">GradientCompressor</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compression_ratio</span><span class=\"o\">=</span><span class=\"mf\">0.01</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compression_ratio</span> <span class=\"o\">=</span> <span class=\"n\">compression_ratio</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">residuals</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">compress</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tensor</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Top-k \u7a00\u758f\u5316\u538b\u7f29&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u6dfb\u52a0\u6b8b\u5dee</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">residuals</span><span class=\"p\">:</span>\n            <span class=\"n\">tensor</span> <span class=\"o\">=</span> <span class=\"n\">tensor</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">residuals</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u9009\u62e9 top-k \u5143\u7d20</span>\n        <span class=\"n\">numel</span> <span class=\"o\">=</span> <span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">numel</span><span class=\"p\">()</span>\n        <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">numel</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compression_ratio</span><span class=\"p\">))</span>\n\n        <span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">topk</span><span class=\"p\">(</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n        <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n        <span class=\"n\">mask</span><span class=\"p\">[</span><span class=\"n\">indices</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n        <span class=\"n\">compressed</span> <span class=\"o\">=</span> <span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">mask</span>\n\n        <span class=\"c1\"># \u4fdd\u5b58\u6b8b\u5dee</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">residuals</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">compressed</span>\n\n        <span class=\"c1\"># \u8fd4\u56de\u7a00\u758f\u8868\u793a</span>\n        <span class=\"k\">return</span> <span class=\"n\">indices</span><span class=\"p\">,</span> <span class=\"n\">compressed</span><span class=\"p\">[</span><span class=\"n\">indices</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">decompress</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">indices</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u89e3\u538b\u7f29&quot;&quot;&quot;</span>\n        <span class=\"n\">tensor</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">tensor</span><span class=\"p\">[</span><span class=\"n\">indices</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">values</span>\n        <span class=\"k\">return</span> <span class=\"n\">tensor</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u901a\u4fe1\u8c03\u5ea6\u4f18\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CommunicationScheduler</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">comm_groups</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_comm_groups</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">schedule_allreduce</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">gradients</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4f18\u5316 AllReduce \u8c03\u5ea6&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u6309\u5927\u5c0f\u5206\u7ec4</span>\n        <span class=\"n\">small_grads</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">large_grads</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">grad</span> <span class=\"ow\">in</span> <span class=\"n\">gradients</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">grad</span><span class=\"o\">.</span><span class=\"n\">numel</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"mf\">1e6</span><span class=\"p\">:</span>\n                <span class=\"n\">small_grads</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">grad</span><span class=\"p\">))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">large_grads</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">grad</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># \u5c0f\u68af\u5ea6\u5408\u5e76\u901a\u4fe1</span>\n        <span class=\"k\">if</span> <span class=\"n\">small_grads</span><span class=\"p\">:</span>\n            <span class=\"n\">merged</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cat</span><span class=\"p\">([</span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">g</span> <span class=\"ow\">in</span> <span class=\"n\">small_grads</span><span class=\"p\">])</span>\n            <span class=\"n\">handle</span> <span class=\"o\">=</span> <span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">all_reduce</span><span class=\"p\">(</span><span class=\"n\">merged</span><span class=\"p\">,</span> <span class=\"n\">async_op</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5927\u68af\u5ea6\u6d41\u6c34\u7ebf\u901a\u4fe1</span>\n        <span class=\"n\">handles</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">grad</span> <span class=\"ow\">in</span> <span class=\"n\">large_grads</span><span class=\"p\">:</span>\n            <span class=\"n\">handle</span> <span class=\"o\">=</span> <span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">all_reduce</span><span class=\"p\">(</span><span class=\"n\">grad</span><span class=\"p\">,</span> <span class=\"n\">async_op</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">handles</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">handle</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">handles</span>\n</code></pre></div>\n\n<h3 id=\"753\">7.5.3 \u5185\u5b58\u7ba1\u7406</h3>\n<p>\u7cbe\u7ec6\u7684\u5185\u5b58\u7ba1\u7406\u5bf9\u5927\u6a21\u578b\u8bad\u7ec3\u81f3\u5173\u91cd\u8981\uff1a</p>\n<p><strong>\u6fc0\u6d3b\u68c0\u67e5\u70b9\uff08Activation Checkpointing\uff09</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">SelectiveCheckpointing</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u9009\u62e9\u6027\u6fc0\u6d3b\u68c0\u67e5\u70b9&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">checkpoint_ratio</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_ratio</span> <span class=\"o\">=</span> <span class=\"n\">checkpoint_ratio</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup_checkpointing</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">setup_checkpointing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u914d\u7f6e\u54ea\u4e9b\u5c42\u4f7f\u7528\u68c0\u67e5\u70b9&quot;&quot;&quot;</span>\n        <span class=\"n\">total_layers</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">)</span>\n        <span class=\"n\">checkpoint_layers</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">total_layers</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_ratio</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u9009\u62e9\u5185\u5b58\u5360\u7528\u5927\u7684\u5c42</span>\n        <span class=\"n\">layer_memories</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">layer</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">):</span>\n            <span class=\"n\">memory</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimate_layer_memory</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"p\">)</span>\n            <span class=\"n\">layer_memories</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">memory</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># \u4f18\u5148\u68c0\u67e5\u70b9\u5185\u5b58\u5360\u7528\u5927\u7684\u5c42</span>\n        <span class=\"n\">layer_memories</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">layer_memories</span><span class=\"p\">[:</span><span class=\"n\">checkpoint_layers</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">use_checkpoint</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">estimate_layer_memory</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4f30\u7b97\u5c42\u7684\u6fc0\u6d3b\u5185\u5b58&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u7b80\u5316\u4f30\u7b97</span>\n        <span class=\"k\">return</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">numel</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">layer</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">())</span>\n</code></pre></div>\n\n<p><strong>\u5185\u5b58\u6c60\u7ba1\u7406</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MemoryPool</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u9884\u5206\u914d\u5185\u5b58\u6c60\u51cf\u5c11\u788e\u7247&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pool_size</span><span class=\"o\">=</span><span class=\"mi\">1024</span><span class=\"o\">**</span><span class=\"mi\">3</span><span class=\"p\">):</span>  <span class=\"c1\"># 1GB</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pool</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"o\">.</span><span class=\"n\">ByteTensor</span><span class=\"p\">(</span><span class=\"n\">pool_size</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allocated</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allocations</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">allocate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4ece\u6c60\u4e2d\u5206\u914d\u5185\u5b58&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allocated</span> <span class=\"o\">+</span> <span class=\"n\">size</span> <span class=\"o\">&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pool</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Memory pool exhausted&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allocated</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allocated</span> <span class=\"o\">+=</span> <span class=\"n\">size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allocations</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pool</span><span class=\"p\">[</span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"n\">start</span><span class=\"o\">+</span><span class=\"n\">size</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">free</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u91ca\u653e\u5185\u5b58\uff08\u903b\u8f91\u91ca\u653e\uff09&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allocations</span><span class=\"p\">:</span>\n            <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allocations</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span>\n            <span class=\"c1\"># \u5b9e\u9645\u5b9e\u73b0\u4e2d\u9700\u8981\u5185\u5b58\u6574\u7406</span>\n</code></pre></div>\n\n<h3 id=\"754\">7.5.4 \u6545\u969c\u6062\u590d\u673a\u5236</h3>\n<p>\u6784\u5efa\u5065\u58ee\u7684\u6545\u969c\u6062\u590d\u673a\u5236\u786e\u4fdd\u8bad\u7ec3\u7a33\u5b9a\u6027\uff1a</p>\n<p><strong>\u68c0\u67e5\u70b9\u7ba1\u7406</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">RobustCheckpointing</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">checkpoint_dir</span><span class=\"p\">,</span> <span class=\"n\">keep_last_n</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_dir</span> <span class=\"o\">=</span> <span class=\"n\">checkpoint_dir</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">keep_last_n</span> <span class=\"o\">=</span> <span class=\"n\">keep_last_n</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_history</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">save_checkpoint</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">optimizer</span><span class=\"p\">,</span> <span class=\"n\">epoch</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4fdd\u5b58\u68c0\u67e5\u70b9with\u539f\u5b50\u64cd\u4f5c&quot;&quot;&quot;</span>\n        <span class=\"n\">checkpoint</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;model_state_dict&quot;</span><span class=\"p\">:</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">state_dict</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;optimizer_state_dict&quot;</span><span class=\"p\">:</span> <span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">state_dict</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;epoch&quot;</span><span class=\"p\">:</span> <span class=\"n\">epoch</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;metrics&quot;</span><span class=\"p\">:</span> <span class=\"n\">metrics</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;timestamp&quot;</span><span class=\"p\">:</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\"># \u4e34\u65f6\u6587\u4ef6</span>\n        <span class=\"n\">temp_path</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_dir</span><span class=\"si\">}</span><span class=\"s2\">/temp_ckpt_</span><span class=\"si\">{</span><span class=\"n\">epoch</span><span class=\"si\">}</span><span class=\"s2\">.pt&quot;</span>\n        <span class=\"n\">final_path</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_dir</span><span class=\"si\">}</span><span class=\"s2\">/checkpoint_</span><span class=\"si\">{</span><span class=\"n\">epoch</span><span class=\"si\">}</span><span class=\"s2\">.pt&quot;</span>\n\n        <span class=\"c1\"># \u539f\u5b50\u5199\u5165</span>\n        <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">checkpoint</span><span class=\"p\">,</span> <span class=\"n\">temp_path</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u9a8c\u8bc1\u68c0\u67e5\u70b9</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">verify_checkpoint</span><span class=\"p\">(</span><span class=\"n\">temp_path</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">temp_path</span><span class=\"p\">,</span> <span class=\"n\">final_path</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_history</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">final_path</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u6e05\u7406\u65e7\u68c0\u67e5\u70b9</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_history</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">keep_last_n</span><span class=\"p\">:</span>\n                <span class=\"n\">old_ckpt</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_history</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">old_ckpt</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">temp_path</span><span class=\"p\">)</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Checkpoint verification failed&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">verify_checkpoint</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u9a8c\u8bc1\u68c0\u67e5\u70b9\u5b8c\u6574\u6027&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">checkpoint</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">map_location</span><span class=\"o\">=</span><span class=\"s2\">&quot;cpu&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">required_keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;model_state_dict&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;optimizer_state_dict&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;epoch&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">return</span> <span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">checkpoint</span> <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">required_keys</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n</code></pre></div>\n\n<p><strong>\u5f39\u6027\u8bad\u7ec3</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ElasticTrainer</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u652f\u6301\u52a8\u6001\u8282\u70b9\u589e\u51cf\u7684\u5f39\u6027\u8bad\u7ec3&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">min_nodes</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">max_nodes</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_nodes</span> <span class=\"o\">=</span> <span class=\"n\">min_nodes</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_nodes</span> <span class=\"o\">=</span> <span class=\"n\">max_nodes</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_nodes</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">detect_available_nodes</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle_node_failure</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">failed_node</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5904\u7406\u8282\u70b9\u6545\u969c&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_nodes</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">failed_node</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_nodes</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_nodes</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u7b49\u5f85\u65b0\u8282\u70b9\u6216\u7ec8\u6b62</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wait_for_nodes</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u91cd\u65b0\u914d\u7f6e\u5e76\u7ee7\u7eed</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reconfigure_training</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">reconfigure_training</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u91cd\u65b0\u914d\u7f6e\u8bad\u7ec3&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u91cd\u65b0\u521d\u59cb\u5316\u8fdb\u7a0b\u7ec4</span>\n        <span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">destroy_process_group</span><span class=\"p\">()</span>\n        <span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">init_process_group</span><span class=\"p\">(</span>\n            <span class=\"n\">backend</span><span class=\"o\">=</span><span class=\"s2\">&quot;nccl&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">world_size</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_nodes</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8c03\u6574\u6279\u6b21\u5927\u5c0f\u4fdd\u6301\u5168\u5c40\u6279\u6b21\u4e0d\u53d8</span>\n        <span class=\"n\">global_batch_size</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">global_batch_size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">local_batch_size</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"n\">global_batch_size</span> <span class=\"o\">//</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_nodes</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u91cd\u65b0\u5206\u914d\u6570\u636e</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redistribute_data</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<h3 id=\"755\">7.5.5 \u6027\u80fd\u8c03\u4f18\u5b9e\u8df5</h3>\n<p>\u7cfb\u7edf\u7ea7\u4f18\u5316\u63d0\u5347\u8bad\u7ec3\u6548\u7387\uff1a</p>\n<p><strong>\u6027\u80fd\u5206\u6790\u5de5\u5177\u96c6\u6210</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">PerformanceMonitor</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">profiler</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">profile_iteration</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">iteration</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5206\u6790\u5355\u6b21\u8fed\u4ee3&quot;&quot;&quot;</span>\n        <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">profiler</span><span class=\"o\">.</span><span class=\"n\">profile</span><span class=\"p\">(</span>\n            <span class=\"n\">activities</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">profiler</span><span class=\"o\">.</span><span class=\"n\">ProfilerActivity</span><span class=\"o\">.</span><span class=\"n\">CPU</span><span class=\"p\">,</span>\n                <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">profiler</span><span class=\"o\">.</span><span class=\"n\">ProfilerActivity</span><span class=\"o\">.</span><span class=\"n\">CUDA</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"n\">record_shapes</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">profile_memory</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">with_stack</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n        <span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">prof</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6267\u884c\u8bad\u7ec3\u6b65\u9aa4</span>\n            <span class=\"k\">yield</span>\n\n        <span class=\"c1\"># \u5206\u6790\u7ed3\u679c</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">analyze_profile</span><span class=\"p\">(</span><span class=\"n\">prof</span><span class=\"p\">,</span> <span class=\"n\">iteration</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">analyze_profile</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prof</span><span class=\"p\">,</span> <span class=\"n\">iteration</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5206\u6790\u6027\u80fd\u74f6\u9888&quot;&quot;&quot;</span>\n        <span class=\"c1\"># GPU\u5229\u7528\u7387</span>\n        <span class=\"n\">cuda_time</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">([</span>\n            <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">cuda_time_total</span> <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">prof</span><span class=\"o\">.</span><span class=\"n\">key_averages</span><span class=\"p\">()</span>\n        <span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u901a\u4fe1\u65f6\u95f4</span>\n        <span class=\"n\">comm_time</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">([</span>\n            <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">cuda_time_total</span> <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">prof</span><span class=\"o\">.</span><span class=\"n\">key_averages</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;nccl&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">key</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;allreduce&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">key</span>\n        <span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u5185\u5b58\u5cf0\u503c</span>\n        <span class=\"n\">memory_peak</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"o\">.</span><span class=\"n\">max_memory_allocated</span><span class=\"p\">()</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s2\">&quot;gpu_utilization&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">cuda_time</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s2\">&quot;comm_overhead&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">comm_time</span> <span class=\"o\">/</span> <span class=\"n\">cuda_time</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s2\">&quot;memory_peak&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">memory_peak</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8bc6\u522b\u74f6\u9888</span>\n        <span class=\"k\">if</span> <span class=\"n\">comm_time</span> <span class=\"o\">/</span> <span class=\"n\">cuda_time</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.3</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Warning: High communication overhead (</span><span class=\"si\">{</span><span class=\"n\">comm_time</span><span class=\"o\">/</span><span class=\"n\">cuda_time</span><span class=\"si\">:</span><span class=\"s2\">.2%</span><span class=\"si\">}</span><span class=\"s2\">)&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u81ea\u52a8\u6027\u80fd\u8c03\u4f18</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">AutoTuner</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u81ea\u52a8\u8c03\u4f18\u8bad\u7ec3\u914d\u7f6e&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">initial_config</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">initial_config</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">performance_history</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">auto_tune</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">num_trials</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u81ea\u52a8\u8c03\u4f18&quot;&quot;&quot;</span>\n        <span class=\"n\">best_throughput</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">best_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">trial</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_trials</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u751f\u6210\u65b0\u914d\u7f6e</span>\n            <span class=\"n\">trial_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generate_config_variant</span><span class=\"p\">()</span>\n\n            <span class=\"c1\"># \u6d4b\u8bd5\u6027\u80fd</span>\n            <span class=\"n\">throughput</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">benchmark_config</span><span class=\"p\">(</span><span class=\"n\">trial_config</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">throughput</span> <span class=\"o\">&gt;</span> <span class=\"n\">best_throughput</span><span class=\"p\">:</span>\n                <span class=\"n\">best_throughput</span> <span class=\"o\">=</span> <span class=\"n\">throughput</span>\n                <span class=\"n\">best_config</span> <span class=\"o\">=</span> <span class=\"n\">trial_config</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">performance_history</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                <span class=\"s2\">&quot;config&quot;</span><span class=\"p\">:</span> <span class=\"n\">trial_config</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;throughput&quot;</span><span class=\"p\">:</span> <span class=\"n\">throughput</span>\n            <span class=\"p\">})</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">best_config</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">generate_config_variant</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u751f\u6210\u914d\u7f6e\u53d8\u4f53&quot;&quot;&quot;</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u8c03\u6574\u5173\u952e\u53c2\u6570</span>\n        <span class=\"n\">params_to_tune</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;micro_batch_size&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;gradient_accumulation_steps&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">]),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;num_workers&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;pin_memory&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;prefetch_factor&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">])</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">param</span><span class=\"p\">,</span> <span class=\"n\">values</span> <span class=\"ow\">in</span> <span class=\"n\">params_to_tune</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.3</span><span class=\"p\">:</span>  <span class=\"c1\"># 30% \u6982\u7387\u4fee\u6539</span>\n                <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"n\">param</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n</code></pre></div>\n\n<h2 id=\"_2\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u7cfb\u7edf\u4ecb\u7ecd\u4e86 LLM \u540e\u8bad\u7ec3\u4e2d\u7684\u8bad\u7ec3\u5faa\u73af\u4e0e\u8fed\u4ee3\u4f18\u5316\u65b9\u6cd5\uff1a</p>\n<p><strong>\u6838\u5fc3\u8981\u70b9</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6570\u636e-\u6807\u6ce8-\u8bad\u7ec3-\u8bc4\u4f30\u5faa\u73af</strong>\uff1a\n   - \u5efa\u7acb\u9ad8\u6548\u7684\u95ed\u73af\u7cfb\u7edf\u662f\u540e\u8bad\u7ec3\u6210\u529f\u7684\u57fa\u7840\n   - \u6bcf\u4e2a\u73af\u8282\u7684\u8d28\u91cf\u63a7\u5236\u548c\u53cd\u9988\u673a\u5236\u81f3\u5173\u91cd\u8981\n   - \u81ea\u52a8\u5316\u548c\u667a\u80fd\u5316\u51b3\u7b56\u63d0\u5347\u8fed\u4ee3\u6548\u7387</p>\n</li>\n<li>\n<p><strong>\u4e3b\u52a8\u5b66\u4e60\u4e0e\u6570\u636e\u9009\u62e9</strong>\uff1a\n   - \u4e0d\u786e\u5b9a\u6027\u91c7\u6837\u3001\u591a\u6837\u6027\u9009\u62e9\u3001\u56f0\u96be\u6837\u672c\u6316\u6398\u76f8\u7ed3\u5408\n   - \u8bfe\u7a0b\u5b66\u4e60\u4f18\u5316\u8bad\u7ec3\u987a\u5e8f\uff0c\u63d0\u9ad8\u6536\u655b\u901f\u5ea6\n   - \u6570\u636e\u4ef7\u503c\u8bc4\u4f30\u6307\u5bfc\u8d44\u6e90\u5206\u914d</p>\n</li>\n<li>\n<p><strong>\u6a21\u578b\u5408\u5e76\u4e0e\u96c6\u6210</strong>\uff1a\n   - \u53c2\u6570\u7a7a\u95f4\u5408\u5e76\u6280\u672f\u5b9e\u73b0\u96f6\u6210\u672c\u96c6\u6210\n   - \u4efb\u52a1\u5411\u91cf\u652f\u6301\u6a21\u578b\u80fd\u529b\u7684\u7b97\u672f\u8fd0\u7b97\n   - \u5c42\u7ea7\u7b56\u7565\u548c\u51b2\u7a81\u89e3\u51b3\u786e\u4fdd\u5408\u5e76\u8d28\u91cf</p>\n</li>\n<li>\n<p><strong>\u8d85\u53c2\u6570\u4f18\u5316</strong>\uff1a\n   - \u8d1d\u53f6\u65af\u4f18\u5316\u548c\u7fa4\u4f53\u8bad\u7ec3\u63d0\u9ad8\u641c\u7d22\u6548\u7387\n   - \u591a\u4fdd\u771f\u5ea6\u65b9\u6cd5\u4f18\u5316\u8ba1\u7b97\u8d44\u6e90\u4f7f\u7528\n   - \u8d85\u53c2\u6570\u8fc1\u79fb\u5b66\u4e60\u52a0\u901f\u65b0\u4efb\u52a1\u9002\u914d</p>\n</li>\n<li>\n<p><strong>\u5206\u5e03\u5f0f\u8bad\u7ec3\u4f18\u5316</strong>\uff1a\n   - \u6df7\u5408\u5e76\u884c\u7b56\u7565\u9002\u5e94\u4e0d\u540c\u89c4\u6a21\u6a21\u578b\n   - \u901a\u4fe1\u548c\u5185\u5b58\u4f18\u5316\u964d\u4f4e\u8bad\u7ec3\u6210\u672c\n   - \u6545\u969c\u6062\u590d\u673a\u5236\u4fdd\u8bc1\u8bad\u7ec3\u7a33\u5b9a\u6027</p>\n</li>\n</ol>\n<p><strong>\u5173\u952e\u516c\u5f0f\u56de\u987e</strong>\uff1a</p>\n<ul>\n<li>\u4e0d\u786e\u5b9a\u6027\u5ea6\u91cf\uff1a$H(x) = -\\sum_{i=1}^{K} p(y_i|x) \\log p(y_i|x)$</li>\n<li>\u4efb\u52a1\u5411\u91cf\uff1a$\\tau = \\theta_{finetuned} - \\theta_{pretrained}$</li>\n<li>\u671f\u671b\u6539\u8fdb\uff1a$EI(x) = (\\mu(x) - f^*) \\Phi(Z) + \\sigma(x) \\phi(Z)$</li>\n</ul>\n<h2 id=\"_3\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_4\">\u57fa\u7840\u9898</h3>\n<ol>\n<li><strong>\u5faa\u73af\u8bbe\u8ba1\u7406\u89e3</strong>\n   \u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e-\u6807\u6ce8-\u8bad\u7ec3-\u8bc4\u4f30\u5faa\u73af\uff0c\u8981\u6c42\u65e5\u4ea7\u51fa 1000 \u4e2a\u9ad8\u8d28\u91cf\u6807\u6ce8\u6837\u672c\uff0c\u63cf\u8ff0\u5404\u73af\u8282\u7684\u5173\u952e\u6307\u6807\u548c\u8d28\u91cf\u63a7\u5236\u70b9\u3002</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u8003\u8651\u6807\u6ce8\u6548\u7387\u3001\u8d28\u91cf\u68c0\u67e5\u3001\u81ea\u52a8\u5316\u7a0b\u5ea6\u3001\u53cd\u9988\u5ef6\u8fdf\u7b49\u56e0\u7d20\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u53c2\u8003\u7b54\u6848</summary>\n\n   \u5faa\u73af\u8bbe\u8ba1\u65b9\u6848\uff1a\n\n   - \u6570\u636e\u6536\u96c6\uff1a\u4ece\u7528\u6237\u4ea4\u4e92\u65e5\u5fd7\u7b5b\u9009\uff082000\u6837\u672c/\u65e5\uff09\uff0c\u9884\u8fc7\u6ee4\u89c4\u5219\u53bb\u9664\u660e\u663e\u4f4e\u8d28\u91cf\n   - \u6807\u6ce8\uff1a\u6df7\u5408\u6a21\u5f0f\uff0c\u6a21\u578b\u9884\u6807\u6ce8(5000/\u65e5) \u2192 \u4eba\u5de5\u5ba1\u6838(1500/\u65e5) \u2192 \u8d28\u68c0(100%\u8986\u76d6)\n   - \u8bad\u7ec3\uff1a\u7d2f\u79ef5000\u6837\u672c\u89e6\u53d1\uff0c\u589e\u91cf\u8bad\u7ec32\u5c0f\u65f6\n   - \u8bc4\u4f30\uff1a\u81ea\u52a8\u8bc4\u4f30(\u51c6\u786e\u7387&gt;95%) + \u4eba\u5de5\u62bd\u68c0(5%)\n   - \u5173\u952e\u6307\u6807\uff1a\u6807\u6ce8\u4e00\u81f4\u6027&gt;0.85\uff0c\u6a21\u578b\u6539\u8fdb&gt;2%\uff0c\u7aef\u5230\u7aef\u5ef6\u8fdf&lt;24\u5c0f\u65f6\n   </details>\n<ol start=\"2\">\n<li><strong>\u4e0d\u786e\u5b9a\u6027\u8ba1\u7b97</strong>\n   \u7ed9\u5b9a\u6a21\u578b\u5bf9\u4e09\u4e2a\u7c7b\u522b\u7684\u9884\u6d4b\u6982\u7387\u4e3a [0.4, 0.35, 0.25]\uff0c\u8ba1\u7b97\u9884\u6d4b\u71b5\u3001\u6700\u5c0f\u7f6e\u4fe1\u5ea6\u548c\u8fb9\u9645\u91c7\u6837\u5206\u6570\u3002</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u76f4\u63a5\u5e94\u7528\u672c\u7ae0\u4ecb\u7ecd\u7684\u4e09\u4e2a\u516c\u5f0f\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u53c2\u8003\u7b54\u6848</summary>\n\n   - \u9884\u6d4b\u71b5\uff1aH = -0.4\u00d7log(0.4) - 0.35\u00d7log(0.35) - 0.25\u00d7log(0.25) \u2248 1.08\n   - \u6700\u5c0f\u7f6e\u4fe1\u5ea6\uff1aLC = 1 - 0.4 = 0.6\n   - \u8fb9\u9645\u91c7\u6837\uff1aMS = 0.4 - 0.35 = 0.05\n   - \u7ed3\u8bba\uff1a\u9ad8\u4e0d\u786e\u5b9a\u6027\u6837\u672c\uff0c\u9002\u5408\u4e3b\u52a8\u5b66\u4e60\n   </details>\n<ol start=\"3\">\n<li><strong>\u6a21\u578b\u5408\u5e76\u6743\u91cd</strong>\n   \u4e24\u4e2a\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u6027\u80fd\u5206\u522b\u4e3a 0.85 \u548c 0.90\uff0cFisher \u4fe1\u606f\u77e9\u9635\u8303\u6570\u6bd4\u4e3a 2:3\uff0c\u8ba1\u7b97\u6700\u4f18\u5408\u5e76\u6743\u91cd\u3002</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u7ed3\u5408\u6027\u80fd\u548c Fisher \u4fe1\u606f\u786e\u5b9a\u6743\u91cd\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u53c2\u8003\u7b54\u6848</summary>\n\n   \u7efc\u5408\u6743\u91cd\u8ba1\u7b97\uff1a\n\n   - \u6027\u80fd\u6743\u91cd\uff1a0.85:0.90 = 0.486:0.514\n   - Fisher \u6743\u91cd\uff1a2:3 = 0.4:0.6\n   - \u7efc\u5408\u6743\u91cd\uff08\u5e73\u5747\uff09\uff1a(0.486+0.4)/2 : (0.514+0.6)/2 = 0.443:0.557\n   - \u5f52\u4e00\u5316\uff1a0.443:0.557\n   </details>\n<ol start=\"4\">\n<li><strong>\u5e76\u884c\u7b56\u7565\u9009\u62e9</strong>\n   \u6a21\u578b\u53c2\u6570 70B\uff0c32 \u4e2a A100 GPU\uff0880GB\uff09\uff0c\u6279\u6b21\u5927\u5c0f 512\uff0c\u5982\u4f55\u8bbe\u8ba1 3D \u5e76\u884c\u7b56\u7565\uff1f</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u8ba1\u7b97\u6a21\u578b\u5185\u5b58\u9700\u6c42\uff0c\u8003\u8651\u6fc0\u6d3b\u5185\u5b58\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u53c2\u8003\u7b54\u6848</summary>\n\n   \u7b56\u7565\u8bbe\u8ba1\uff1a\n\n   - \u6a21\u578b\u5185\u5b58\uff1a70B \u00d7 4 bytes = 280GB\uff08FP32\uff09\n   - \u5355GPU\u65e0\u6cd5\u5bb9\u7eb3\uff0c\u9700\u8981\u6a21\u578b\u5e76\u884c\n   - \u5efa\u8bae\u914d\u7f6e\uff1aTP=4, PP=2, DP=4\n   - \u6bcf\u4e2aGPU\u8d1f\u8d23\uff1a70B/(4\u00d72) = 8.75B \u53c2\u6570\n   - \u5185\u5b58\u5360\u7528\uff1a35GB\u6a21\u578b + 20GB\u6fc0\u6d3b &lt; 80GB\n   </details>\n<h3 id=\"_5\">\u6311\u6218\u9898</h3>\n<ol start=\"5\">\n<li><strong>\u4e3b\u52a8\u5b66\u4e60\u7b56\u7565\u8bbe\u8ba1</strong>\n   \u8bbe\u8ba1\u4e00\u4e2a\u7ed3\u5408\u4e0d\u786e\u5b9a\u6027\u3001\u591a\u6837\u6027\u548c\u56f0\u96be\u5ea6\u7684\u7efc\u5408\u4e3b\u52a8\u5b66\u4e60\u7b56\u7565\uff0c\u7ed9\u51fa\u5177\u4f53\u7684\u8bc4\u5206\u51fd\u6570\u548c\u9009\u62e9\u7b97\u6cd5\u3002</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u8003\u8651\u4e09\u4e2a\u7ef4\u5ea6\u7684\u6743\u91cd\u5e73\u8861\u548c\u5f52\u4e00\u5316\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u53c2\u8003\u7b54\u6848</summary>\n\n   \u7efc\u5408\u8bc4\u5206\u51fd\u6570\uff1a\n   Score(x) = \u03b1\u00b7Uncertainty(x) + \u03b2\u00b7Diversity(x) + \u03b3\u00b7Difficulty(x)\n\n   \u5176\u4e2d\uff1a\n\n   - Uncertainty(x) = H(x) / log(K)  # \u5f52\u4e00\u5316\u71b5\n   - Diversity(x) = min_distance(x, selected_set) / max_distance\n   - Difficulty(x) = loss(x) / percentile_95_loss\n   - \u03b1=0.4, \u03b2=0.3, \u03b3=0.3\uff08\u53ef\u8c03\uff09\n\n   \u9009\u62e9\u7b97\u6cd5\uff1a\n\n   1. \u8ba1\u7b97\u6240\u6709\u5019\u9009\u6837\u672c\u7684\u7efc\u5408\u5206\u6570\n   2. \u8d2a\u5fc3\u9009\u62e9\uff1a\u6bcf\u6b21\u9009\u6700\u9ad8\u5206\uff0c\u66f4\u65b0\u5df2\u9009\u96c6\u5408\n   3. \u52a8\u6001\u8c03\u6574\u6743\u91cd\uff1a\u65e9\u671f\u91cd\u89c6\u591a\u6837\u6027\uff0c\u540e\u671f\u91cd\u89c6\u56f0\u96be\u5ea6\n   </details>\n<ol start=\"6\">\n<li><strong>\u8d85\u53c2\u6570\u8fc1\u79fb\u65b9\u6848</strong>\n   \u8bbe\u8ba1\u4e00\u4e2a\u8de8\u4efb\u52a1\u7684\u8d85\u53c2\u6570\u8fc1\u79fb\u5b66\u4e60\u7cfb\u7edf\uff0c\u5305\u62ec\u4efb\u52a1\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u3001\u5386\u53f2\u77e5\u8bc6\u5b58\u50a8\u548c\u521d\u59cb\u5316\u7b56\u7565\u3002</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u8003\u8651\u4efb\u52a1\u7279\u5f81\u63d0\u53d6\u3001\u76f8\u4f3c\u5ea6\u5ea6\u91cf\u3001\u77e5\u8bc6\u84b8\u998f\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u53c2\u8003\u7b54\u6848</summary>\n\n   \u7cfb\u7edf\u8bbe\u8ba1\uff1a\n\n   1. \u4efb\u52a1\u7279\u5f81\u63d0\u53d6\uff1a\n      - \u6570\u636e\u7edf\u8ba1\uff1a\u6837\u672c\u6570\u3001\u7c7b\u522b\u6570\u3001\u6587\u672c\u957f\u5ea6\u5206\u5e03\n      - \u6a21\u578b\u7279\u5f81\uff1a\u67b6\u6784\u3001\u53c2\u6570\u91cf\u3001\u9884\u8bad\u7ec3\u6765\u6e90\n      - \u9886\u57df\u7279\u5f81\uff1a\u4efb\u52a1\u7c7b\u578b\u3001\u8bc4\u4f30\u6307\u6807\n\n   2. \u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff1a\n      - \u7279\u5f81\u5411\u91cf\u4f59\u5f26\u76f8\u4f3c\u5ea6\n      - \u4efb\u52a1\u5d4c\u5165\uff08\u901a\u8fc7\u5143\u5b66\u4e60\u83b7\u5f97\uff09\n      - \u5386\u53f2\u6027\u80fd\u76f8\u5173\u6027\n\n   3. \u77e5\u8bc6\u8fc1\u79fb\uff1a\n      - Top-3\u76f8\u4f3c\u4efb\u52a1\u7684\u8d85\u53c2\u6570\u52a0\u6743\u5e73\u5747\n      - \u6dfb\u52a0\u63a2\u7d22\u566a\u58f0\uff08\u00b120%\uff09\n      - \u4fdd\u7559\u4efb\u52a1\u7279\u5b9a\u8c03\u6574\u7a7a\u95f4\n   </details>\n<ol start=\"7\">\n<li><strong>\u5206\u5e03\u5f0f\u8bad\u7ec3\u6545\u969c\u6062\u590d</strong>\n   \u8bbe\u8ba1\u4e00\u4e2a\u80fd\u5904\u7406\u8282\u70b9\u6545\u969c\u3001\u7f51\u7edc\u5206\u533a\u548c\u6570\u636e\u635f\u574f\u7684\u5b8c\u6574\u6545\u969c\u6062\u590d\u7cfb\u7edf\u3002</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u8003\u8651\u68c0\u6d4b\u3001\u9694\u79bb\u3001\u6062\u590d\u3001\u9a8c\u8bc1\u56db\u4e2a\u9636\u6bb5\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u53c2\u8003\u7b54\u6848</summary>\n\n   \u6545\u969c\u6062\u590d\u7cfb\u7edf\uff1a\n\n   1. \u6545\u969c\u68c0\u6d4b\uff1a\n      - \u5fc3\u8df3\u76d1\u63a7\uff085\u79d2\u8d85\u65f6\uff09\n      - \u68af\u5ea6\u8303\u6570\u5f02\u5e38\u68c0\u6d4b\n      - \u901a\u4fe1\u9519\u8bef\u7387\u76d1\u63a7\n\n   2. \u6545\u969c\u9694\u79bb\uff1a\n      - \u6807\u8bb0\u6545\u969c\u8282\u70b9\n      - \u91cd\u7ec4\u901a\u4fe1\u62d3\u6251\n      - \u6570\u636e\u91cd\u5206\u914d\n\n   3. \u72b6\u6001\u6062\u590d\uff1a\n      - \u4ece\u6700\u8fd1\u68c0\u67e5\u70b9\u6062\u590d\n      - \u91cd\u653e\u65e5\u5fd7\u6062\u590d\u4e2d\u95f4\u72b6\u6001\n      - \u9a8c\u8bc1\u6a21\u578b\u53c2\u6570\u4e00\u81f4\u6027\n\n   4. \u5f39\u6027\u8c03\u6574\uff1a\n      - \u52a8\u6001\u8c03\u6574\u5e76\u884c\u5ea6\n      - \u91cd\u65b0\u8ba1\u7b97\u6279\u6b21\u5927\u5c0f\n      - \u66f4\u65b0\u5b66\u4e60\u7387\uff08\u6839\u636e\u6709\u6548\u6279\u6b21\uff09\n   </details>\n<ol start=\"8\">\n<li><strong>\u6a21\u578b\u5408\u5e76\u51b2\u7a81\u89e3\u51b3</strong>\n   \u4e24\u4e2a\u6a21\u578b\u5728\u76f8\u540c\u4efb\u52a1\u4e0a\u8bad\u7ec3\u4f46\u4f7f\u7528\u4e0d\u540c\u6570\u636e\u96c6\uff0c\u5408\u5e76\u65f6\u53d1\u73b030%\u7684\u53c2\u6570\u7b26\u53f7\u76f8\u53cd\uff0c\u8bbe\u8ba1\u89e3\u51b3\u65b9\u6848\u3002</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u5206\u6790\u51b2\u7a81\u539f\u56e0\uff0c\u8bbe\u8ba1\u591a\u7ea7\u89e3\u51b3\u7b56\u7565\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u53c2\u8003\u7b54\u6848</summary>\n\n   \u51b2\u7a81\u89e3\u51b3\u65b9\u6848\uff1a\n\n   1. \u51b2\u7a81\u5206\u6790\uff1a\n      - \u6309\u5c42\u7edf\u8ba1\u51b2\u7a81\u6bd4\u4f8b\n      - \u8bc6\u522b\u7cfb\u7edf\u6027 vs \u968f\u673a\u6027\u51b2\u7a81\n      - \u8bc4\u4f30\u53c2\u6570\u91cd\u8981\u6027\uff08\u68af\u5ea6\u3001Fisher\u4fe1\u606f\uff09\n\n   2. \u5206\u7ea7\u5904\u7406\uff1a\n      - \u5173\u952e\u5c42\uff08\u6ce8\u610f\u529b\uff09\uff1a\u57fa\u4e8e\u9a8c\u8bc1\u96c6\u6027\u80fd\u9009\u62e9\n      - \u4e2d\u95f4\u5c42\uff1a\u91cd\u8981\u6027\u52a0\u6743\u63d2\u503c\n      - \u9876\u5c42\uff1a\u4efb\u52a1\u76f8\u5173\u6027\u51b3\u5b9a\n\n   3. \u540e\u5904\u7406\uff1a\n      - \u5fae\u8c03\u5408\u5e76\u6a21\u578b\uff08\u5c0f\u5b66\u4e60\u7387\uff09\n      - \u77e5\u8bc6\u84b8\u998f\u5bf9\u9f50\n      - \u9a8c\u8bc1\u5173\u952e\u80fd\u529b\u4fdd\u6301\n\n   4. \u9884\u9632\u63aa\u65bd\uff1a\n      - \u8bad\u7ec3\u65f6\u6dfb\u52a0\u4e00\u81f4\u6027\u6b63\u5219\u5316\n      - \u4f7f\u7528\u76f8\u540c\u521d\u59cb\u5316\n      - \u5b9a\u671f\u4ea4\u6362\u68af\u5ea6\u4fe1\u606f\n   </details>\n<h2 id=\"_6\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</h2>\n<h3 id=\"_7\">\u6570\u636e\u5faa\u73af\u76f8\u5173</h3>\n<p>\u26a0\ufe0f <strong>\u9677\u96311\uff1a\u6570\u636e\u6cc4\u9732</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u9a8c\u8bc1\u96c6\u6570\u636e\u8fdb\u5165\u8bad\u7ec3\u5faa\u73af</li>\n<li>\u540e\u679c\uff1a\u8fc7\u9ad8\u4f30\u8ba1\u6a21\u578b\u6027\u80fd</li>\n<li>\u89e3\u51b3\uff1a\u4e25\u683c\u7684\u6570\u636e\u9694\u79bb\uff0c\u7248\u672c\u63a7\u5236</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u9677\u96312\uff1a\u6807\u6ce8\u6f02\u79fb</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u6807\u6ce8\u89c4\u8303\u968f\u65f6\u95f4\u53d8\u5316\u4f46\u672a\u66f4\u65b0\u5386\u53f2\u6570\u636e</li>\n<li>\u540e\u679c\uff1a\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u6a21\u578b\u5b66\u4e60\u51b2\u7a81\u4fe1\u53f7</li>\n<li>\u89e3\u51b3\uff1a\u5b9a\u671f\u5ba1\u67e5\u89c4\u8303\uff0c\u5fc5\u8981\u65f6\u91cd\u65b0\u6807\u6ce8</li>\n</ul>\n<h3 id=\"_8\">\u4e3b\u52a8\u5b66\u4e60\u76f8\u5173</h3>\n<p>\u26a0\ufe0f <strong>\u9677\u96313\uff1a\u91c7\u6837\u504f\u5dee</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u8fc7\u5ea6\u5173\u6ce8\u4e0d\u786e\u5b9a\u6837\u672c\uff0c\u5ffd\u7565\u4ee3\u8868\u6027</li>\n<li>\u540e\u679c\uff1a\u6a21\u578b\u5728\u5e38\u89c1\u6848\u4f8b\u4e0a\u6027\u80fd\u4e0b\u964d</li>\n<li>\u89e3\u51b3\uff1a\u5e73\u8861\u4e0d\u786e\u5b9a\u6027\u548c\u591a\u6837\u6027</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u9677\u96314\uff1a\u51b7\u542f\u52a8\u95ee\u9898</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u521d\u59cb\u6a21\u578b\u592a\u5dee\uff0c\u4e0d\u786e\u5b9a\u6027\u4f30\u8ba1\u4e0d\u53ef\u9760</li>\n<li>\u540e\u679c\uff1a\u9009\u62e9\u4f4e\u4ef7\u503c\u6837\u672c</li>\n<li>\u89e3\u51b3\uff1a\u521d\u59cb\u968f\u673a\u91c7\u6837\u5efa\u7acb\u57fa\u7ebf</li>\n</ul>\n<h3 id=\"_9\">\u6a21\u578b\u5408\u5e76\u76f8\u5173</h3>\n<p>\u26a0\ufe0f <strong>\u9677\u96315\uff1a\u76f2\u76ee\u5e73\u5747</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u76f4\u63a5\u5e73\u5747\u6240\u6709\u53c2\u6570</li>\n<li>\u540e\u679c\uff1a\u7834\u574f\u5b66\u4e60\u7684\u7279\u5f81\u8868\u793a</li>\n<li>\u89e3\u51b3\uff1a\u8003\u8651\u53c2\u6570\u91cd\u8981\u6027\u548c\u4efb\u52a1\u76f8\u5173\u6027</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u9677\u96316\uff1a\u5ffd\u89c6\u521d\u59cb\u5316</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u5408\u5e76\u4e0d\u540c\u521d\u59cb\u5316\u7684\u6a21\u578b</li>\n<li>\u540e\u679c\uff1a\u53c2\u6570\u7a7a\u95f4\u4e0d\u5bf9\u9f50</li>\n<li>\u89e3\u51b3\uff1a\u4f7f\u7528\u76f8\u540c\u9884\u8bad\u7ec3\u6a21\u578b\u4f5c\u4e3a\u57fa\u7840</li>\n</ul>\n<h3 id=\"_10\">\u5206\u5e03\u5f0f\u8bad\u7ec3\u76f8\u5173</h3>\n<p>\u26a0\ufe0f <strong>\u9677\u96317\uff1a\u901a\u4fe1\u74f6\u9888</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u5ffd\u89c6\u7f51\u7edc\u5e26\u5bbd\u9650\u5236</li>\n<li>\u540e\u679c\uff1aGPU\u5229\u7528\u7387\u4f4e</li>\n<li>\u89e3\u51b3\uff1a\u68af\u5ea6\u538b\u7f29\uff0c\u901a\u4fe1\u4f18\u5316</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u9677\u96318\uff1a\u68c0\u67e5\u70b9\u635f\u574f</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u68c0\u67e5\u70b9\u4fdd\u5b58\u4e0d\u5b8c\u6574\u6216\u635f\u574f</li>\n<li>\u540e\u679c\uff1a\u65e0\u6cd5\u6062\u590d\u8bad\u7ec3</li>\n<li>\u89e3\u51b3\uff1a\u539f\u5b50\u64cd\u4f5c\uff0c\u591a\u526f\u672c\uff0c\u9a8c\u8bc1\u673a\u5236</li>\n</ul>\n<h3 id=\"_11\">\u8d85\u53c2\u6570\u4f18\u5316\u76f8\u5173</h3>\n<p>\u26a0\ufe0f <strong>\u9677\u96319\uff1a\u8fc7\u65e9\u505c\u6b62</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u5728\u5b66\u4e60\u7387\u9884\u70ed\u9636\u6bb5\u5c31\u505c\u6b62</li>\n<li>\u540e\u679c\uff1a\u9519\u8fc7\u6f5c\u5728\u597d\u914d\u7f6e</li>\n<li>\u89e3\u51b3\uff1a\u8bbe\u7f6e\u6700\u5c0f\u8bad\u7ec3\u6b65\u6570</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u9677\u963110\uff1a\u641c\u7d22\u7a7a\u95f4\u8fc7\u5927</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u540c\u65f6\u641c\u7d22\u6240\u6709\u8d85\u53c2\u6570</li>\n<li>\u540e\u679c\uff1a\u641c\u7d22\u6548\u7387\u4f4e</li>\n<li>\u89e3\u51b3\uff1a\u5206\u9636\u6bb5\u641c\u7d22\uff0c\u56fa\u5b9a\u6b21\u8981\u53c2\u6570</li>\n</ul>"
  },
  "CLAUDE.md": {
    "hash": "1ba1ec659b5de0b9f8b4b51217ea786a",
    "content": "<p>\uff08\u4ea4\u6d41\u53ef\u4ee5\u7528\u82f1\u6587\uff0c\u6240\u6709\u6587\u6863\u4e2d\u6587\uff0c\u4fdd\u7559\u8fd9\u53e5\uff09</p>\n<h2 id=\"_1\">\u9879\u76ee\u76ee\u6807</h2>\n<p>\u7f16\u5199\u4e00\u4efdLLM \u540e\u8bad\u7ec3\u5b9e\u9a8c\u8bbe\u8ba1\u7684\u4e2d\u6587\u6559\u7a0bmarkdown\uff0c\u8981\u5305\u542b\u5927\u91cf\u7684\u4e60\u9898\u548c\u53c2\u8003\u7b54\u6848\uff08\u7b54\u6848\u9ed8\u8ba4\u6298\u53e0\uff09\u3002\n\u5305\u62ec\u7eaf\u8bed\u8a00\u4efb\u52a1\uff08\u5982\u591a\u8f6e\u4e0b\u7684\u610f\u56fe\u8bc6\u522b\uff09\n\u5305\u62ec\u591a\u6a21\u6001\u4efb\u52a1\uff08\u5982\u56fe\u50cf\u76f8\u5173\u7684\u6307\u4ee4\uff09\n\u6570\u636e\u91c7\u6807\u8bad\u53d1\u5faa\u73af\n\u4ece\u7406\u8bba\u5230\u5b9e\u8df5\uff0c\u63d0\u4f9b\u5b9e\u64cd\u6280\u5de7\u548c rule-of-thumb\n\u6587\u4ef6\u7ec4\u7ec7\u662f index.md + chapter1.md + ...</p>\n<h2 id=\"audience\">Audience</h2>\n<p>verteran engineer and AI scientist</p>\n<h2 id=\"_2\">\u7ae0\u8282\u7ed3\u6784\u8981\u6c42</h2>\n<p>\u6bcf\u4e2a\u7ae0\u8282\u5e94\u5305\u542b\uff1a</p>\n<ol>\n<li><strong>\u5f00\u7bc7\u6bb5\u843d</strong>\uff1a\u7b80\u8981\u4ecb\u7ecd\u672c\u7ae0\u5185\u5bb9\u548c\u5b66\u4e60\u76ee\u6807</li>\n<li><strong>\u6587\u5b57\u8bba\u8ff0</strong>\uff1a\u4ee5\u6587\u5b57\u8bba\u8ff0\u4e3a\u4e3b\uff0c\u9002\u5f53\u914d\u4e0aASCII \u56fe\u8bf4\u660e\u3002\u6570\u5b66\u7528 latex</li>\n<li><strong>\u672c\u7ae0\u5c0f\u7ed3</strong>\uff1a\u603b\u7ed3\u5173\u952e\u6982\u5ff5\u548c\u516c\u5f0f</li>\n<li><strong>\u7ec3\u4e60\u9898</strong>\uff1a\n   - \u6bcf\u7ae0\u5305\u542b6-8\u9053\u7ec3\u4e60\u9898\n   - 50%\u57fa\u7840\u9898\uff08\u5e2e\u52a9\u719f\u6089\u6750\u6599\uff09\n   - 50%\u6311\u6218\u9898\uff08\u5305\u62ec\u5f00\u653e\u6027\u601d\u8003\u9898\uff09\n   - \u6bcf\u9898\u63d0\u4f9b\u63d0\u793a\uff08Hint\uff09\n   - \u7b54\u6848\u9ed8\u8ba4\u6298\u53e0\uff0c\u4e0d\u5305\u542b\u4ee3\u7801</li>\n<li><strong>\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</strong> (Gotchas)\uff1a\u6bcf\u7ae0\u5305\u542b\u8be5\u4e3b\u9898\u7684\u5e38\u89c1\u9519\u8bef\u548c\u8c03\u8bd5\u6280\u5de7</li>\n</ol>"
  },
  "chapter6.md": {
    "hash": "85b16bd5b5459eaaf8d15d093b40b208",
    "content": "<h1 id=\"_1\">\u7b2c\u516d\u7ae0\uff1a\u5f3a\u5316\u5b66\u4e60\u4e0e\u4eba\u7c7b\u53cd\u9988</h1>\n<p>\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u57fa\u4e8e\u4eba\u7c7b\u53cd\u9988\u7684\u5f3a\u5316\u5b66\u4e60\uff08RLHF\uff09\u53ca\u5176\u53d8\u4f53\u5728\u5927\u8bed\u8a00\u6a21\u578b\u540e\u8bad\u7ec3\u4e2d\u7684\u5e94\u7528\u3002\u6211\u4eec\u5c06\u4ece\u5956\u52b1\u6a21\u578b\u7684\u6784\u5efa\u5f00\u59cb\uff0c\u8be6\u7ec6\u5206\u6790PPO\u3001DPO\u7b49\u4e3b\u6d41\u7b97\u6cd5\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u63a2\u8ba8Constitutional AI\u7b49\u81ea\u6211\u6539\u8fdb\u65b9\u6cd5\uff0c\u5e76\u8ba8\u8bba\u5728\u7ebf\u4e0e\u79bb\u7ebf\u5f3a\u5316\u5b66\u4e60\u7684\u6743\u8861\u3002\u901a\u8fc7\u672c\u7ae0\u5b66\u4e60\uff0c\u60a8\u5c06\u638c\u63e1\u8bbe\u8ba1\u548c\u5b9e\u65bdRLHF\u7cfb\u7edf\u7684\u5b8c\u6574\u65b9\u6cd5\u8bba\uff0c\u7406\u89e3\u4e0d\u540c\u7b97\u6cd5\u7684\u9002\u7528\u573a\u666f\uff0c\u4ee5\u53ca\u907f\u514d\u5e38\u89c1\u7684\u5b9e\u9a8c\u9677\u9631\u3002</p>\n<h2 id=\"61-rlhf\">6.1 RLHF\u7684\u52a8\u673a\u4e0e\u6838\u5fc3\u6311\u6218</h2>\n<h3 id=\"611-rlhf\">6.1.1 \u4e3a\u4ec0\u4e48\u9700\u8981RLHF</h3>\n<p>\u76d1\u7763\u5fae\u8c03\uff08SFT\uff09\u867d\u7136\u80fd\u8ba9\u6a21\u578b\u5b66\u4f1a\u9075\u5faa\u6307\u4ee4\u7684\u57fa\u672c\u683c\u5f0f\uff0c\u4f46\u5b58\u5728\u51e0\u4e2a\u6839\u672c\u6027\u9650\u5236\uff1a</p>\n<ol>\n<li>\n<p><strong>\u884c\u4e3a\u6a21\u4eff\u7684\u5c40\u9650\u6027</strong>\uff1aSFT\u672c\u8d28\u4e0a\u662f\u8ba9\u6a21\u578b\u6a21\u4eff\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u884c\u4e3a\u6a21\u5f0f\u3002\u5373\u4f7f\u6709\u9ad8\u8d28\u91cf\u7684\u793a\u8303\u6570\u636e\uff0c\u6a21\u578b\u4e5f\u53ea\u80fd\u5b66\u5230\"\u5982\u4f55\u8bf4\"\uff0c\u800c\u975e\u771f\u6b63\u7406\u89e3\"\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bf4\u66f4\u597d\"\u3002</p>\n</li>\n<li>\n<p><strong>\u504f\u597d\u7684\u9690\u5f0f\u6027</strong>\uff1a\u4eba\u7c7b\u504f\u597d\u5f80\u5f80\u662f\u9690\u5f0f\u7684\u3001\u591a\u7ef4\u7684\uff0c\u5f88\u96be\u901a\u8fc7\u793a\u4f8b\u5b8c\u5168\u8868\u8fbe\u3002\u6bd4\u5982\"\u6709\u5e2e\u52a9\"\u8fd9\u4e2a\u6982\u5ff5\uff0c\u5305\u542b\u51c6\u786e\u6027\u3001\u5b8c\u6574\u6027\u3001\u6e05\u6670\u5ea6\u7b49\u591a\u4e2a\u7ef4\u5ea6\uff0c\u4e14\u5728\u4e0d\u540c\u4e0a\u4e0b\u6587\u4e2d\u6743\u91cd\u4e0d\u540c\u3002</p>\n</li>\n<li>\n<p><strong>\u5206\u5e03\u504f\u79fb\u95ee\u9898</strong>\uff1aSFT\u6a21\u578b\u5728\u751f\u6210\u65f6\u4f1a\u7d2f\u79ef\u8bef\u5dee\uff0c\u9010\u6e10\u504f\u79bb\u8bad\u7ec3\u5206\u5e03\u3002\u800cRLHF\u901a\u8fc7\u5728\u6a21\u578b\u81ea\u5df1\u7684\u751f\u6210\u5206\u5e03\u4e0a\u8bad\u7ec3\uff0c\u80fd\u66f4\u597d\u5730\u5904\u7406\u8fd9\u79cd\u504f\u79fb\u3002</p>\n</li>\n</ol>\n<h3 id=\"612-rlhf\">6.1.2 RLHF\u7684\u6838\u5fc3\u7ec4\u4ef6</h3>\n<div class=\"codehilite\"><pre><span></span><code>    Human Preferences\n           \u2193\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502 Reward Model \u2502 \u2190 \u504f\u597d\u6570\u636e\u8bad\u7ec3\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2193\n       \u5956\u52b1\u4fe1\u53f7\n           \u2193\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502  RL Training \u2502 \u2190 PPO/DPO\u7b49\u7b97\u6cd5\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2193\n     Aligned Model\n</code></pre></div>\n\n<p>RLHF\u7cfb\u7edf\u5305\u542b\u4e09\u4e2a\u6838\u5fc3\u7ec4\u4ef6\uff1a</p>\n<ol>\n<li><strong>\u504f\u597d\u6570\u636e\u6536\u96c6</strong>\uff1a\u83b7\u53d6\u4eba\u7c7b\u5bf9\u4e0d\u540c\u56de\u590d\u7684\u76f8\u5bf9\u504f\u597d\u5224\u65ad</li>\n<li><strong>\u5956\u52b1\u6a21\u578b\u8bad\u7ec3</strong>\uff1a\u5b66\u4e60\u5c06\u6587\u672c\u6620\u5c04\u5230\u6807\u91cf\u5956\u52b1\u503c</li>\n<li><strong>\u7b56\u7565\u4f18\u5316</strong>\uff1a\u4f7f\u7528RL\u7b97\u6cd5\u4f18\u5316\u8bed\u8a00\u6a21\u578b\u4ee5\u6700\u5927\u5316\u671f\u671b\u5956\u52b1</li>\n</ol>\n<h3 id=\"613\">6.1.3 \u4e3b\u8981\u6311\u6218</h3>\n<p><strong>\u6311\u62181\uff1a\u5956\u52b1\u8fc7\u62df\u5408\uff08Reward Hacking\uff09</strong></p>\n<p>\u6a21\u578b\u53ef\u80fd\u627e\u5230\u83b7\u5f97\u9ad8\u5956\u52b1\u4f46\u5b9e\u9645\u8d28\u91cf\u5dee\u7684\u6377\u5f84\u3002\u4f8b\u5982\uff1a</p>\n<ul>\n<li>\u8fc7\u5ea6\u4f7f\u7528\u5956\u52b1\u6a21\u578b\u504f\u597d\u7684\u7279\u5b9a\u77ed\u8bed</li>\n<li>\u751f\u6210\u770b\u4f3c\u5b8c\u6574\u4f46\u5b9e\u9645\u7a7a\u6d1e\u7684\u957f\u56de\u590d</li>\n<li>\u5229\u7528\u5956\u52b1\u6a21\u578b\u7684\u76f2\u70b9\u751f\u6210\u6709\u95ee\u9898\u7684\u5185\u5bb9</li>\n</ul>\n<p><strong>\u6311\u62182\uff1a\u8bad\u7ec3\u4e0d\u7a33\u5b9a\u6027</strong></p>\n<p>RLHF\u8bad\u7ec3\u8fc7\u7a0b\u5bb9\u6613\u51fa\u73b0\uff1a</p>\n<ul>\n<li>\u7b56\u7565\u5d29\u6e83\uff1a\u6a21\u578b\u9000\u5316\u5230\u91cd\u590d\u7b80\u5355\u6a21\u5f0f</li>\n<li>\u5956\u52b1\u7206\u70b8\uff1a\u4f18\u5316\u8fc7\u7a0b\u5931\u63a7\u5bfc\u81f4\u5956\u52b1\u503c\u5f02\u5e38</li>\n<li>KL\u6563\u5ea6\u5931\u63a7\uff1a\u751f\u6210\u5206\u5e03\u8fc7\u5ea6\u504f\u79bb\u521d\u59cb\u6a21\u578b</li>\n</ul>\n<p><strong>\u6311\u62183\uff1a\u8bc4\u4f30\u56f0\u96be</strong></p>\n<ul>\n<li>\u5956\u52b1\u503c\u4e0d\u80fd\u5b8c\u5168\u4ee3\u8868\u771f\u5b9e\u8d28\u91cf</li>\n<li>\u9700\u8981\u5927\u91cf\u4eba\u5de5\u8bc4\u4f30\u9a8c\u8bc1\u6539\u8fdb\u6548\u679c</li>\n<li>\u4e0d\u540c\u8bc4\u4f30\u6307\u6807\u53ef\u80fd\u76f8\u4e92\u51b2\u7a81</li>\n</ul>\n<h2 id=\"62\">6.2 \u5956\u52b1\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u6821\u51c6</h2>\n<h3 id=\"621-bradley-terry\">6.2.1 Bradley-Terry\u504f\u597d\u6a21\u578b</h3>\n<p>\u5956\u52b1\u6a21\u578b\u7684\u7406\u8bba\u57fa\u7840\u662fBradley-Terry\u6a21\u578b\uff0c\u5b83\u5047\u8bbe\u4eba\u7c7b\u9009\u62e9\u56de\u590dA\u4f18\u4e8e\u56de\u590dB\u7684\u6982\u7387\u4e3a\uff1a</p>\n<p>$$P(A \\succ B) = \\frac{\\exp(r(A))}{\\exp(r(A)) + \\exp(r(B))} = \\sigma(r(A) - r(B))$$\n\u5176\u4e2d$r(\\cdot)$\u662f\u5956\u52b1\u51fd\u6570\uff0c$\\sigma$\u662fsigmoid\u51fd\u6570\u3002</p>\n<p>\u8bad\u7ec3\u76ee\u6807\u662f\u6700\u5927\u5316\u5bf9\u6570\u4f3c\u7136\uff1a\n$$\\mathcal{L}_{RM} = -\\mathbb{E}_{(x,y_w,y_l)\\sim D}\\left[\\log\\sigma(r_\\theta(x,y_w) - r_\\theta(x,y_l))\\right]$$\n\u5176\u4e2d$y_w$\u662f\u88ab\u504f\u597d\u7684\u56de\u590d\uff0c$y_l$\u662f\u8f83\u5dee\u7684\u56de\u590d\u3002</p>\n<h3 id=\"622\">6.2.2 \u5956\u52b1\u6a21\u578b\u67b6\u6784\u8bbe\u8ba1</h3>\n<p>\u5178\u578b\u7684\u5956\u52b1\u6a21\u578b\u67b6\u6784\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nl\">\u8f93\u5165</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">prompt</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">response</span><span class=\"o\">]</span>\n<span class=\"w\">  </span><span class=\"err\">\u2193</span>\n<span class=\"n\">Transformer</span><span class=\"w\"> </span><span class=\"n\">Encoder</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">\u9884\u8bad\u7ec3LM</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"err\">\u2193</span>\n<span class=\"n\">\u6700\u540e\u4e00\u4e2atoken\u7684\u9690\u72b6\u6001</span>\n<span class=\"w\">  </span><span class=\"err\">\u2193</span>\n<span class=\"n\">Linear</span><span class=\"w\"> </span><span class=\"n\">Head</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">\u6807\u91cf\u5956\u52b1\u503c</span>\n</code></pre></div>\n\n<p><strong>\u5173\u952e\u8bbe\u8ba1\u9009\u62e9\uff1a</strong></p>\n<ol>\n<li>\n<p><strong>\u57fa\u5ea7\u6a21\u578b\u9009\u62e9</strong>\uff1a\n   - \u4f7f\u7528\u4e0e\u7b56\u7565\u6a21\u578b\u76f8\u540c\u89c4\u6a21\u7684\u57fa\u5ea7\uff08\u59827B\u5bf97B\uff09\n   - \u6216\u4f7f\u7528\u66f4\u5927\u7684\u6a21\u578b\uff08\u598213B\u5956\u52b1\u6a21\u578b\u6307\u5bfc7B\u7b56\u7565\uff09</p>\n</li>\n<li>\n<p><strong>\u6c60\u5316\u7b56\u7565</strong>\uff1a\n   - \u6700\u540etoken\u6c60\u5316\uff08\u6700\u5e38\u7528\uff09\n   - \u5e73\u5747\u6c60\u5316\uff08\u5bf9\u957f\u6587\u672c\u66f4\u7a33\u5b9a\uff09\n   - \u52a0\u6743\u6c60\u5316\uff08\u8003\u8651token\u91cd\u8981\u6027\uff09</p>\n</li>\n<li>\n<p><strong>\u5f52\u4e00\u5316\u65b9\u6848</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6bcf\u6279\u6b21\u6807\u51c6\u5316</span>\n<span class=\"n\">rewards</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">rewards</span> <span class=\"o\">-</span> <span class=\"n\">rewards</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">())</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">rewards</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mf\">1e-8</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># \u6216\u4f7f\u7528\u8fd0\u884c\u5747\u503c/\u65b9\u5dee</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">running_mean</span> <span class=\"o\">=</span> <span class=\"mf\">0.99</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">running_mean</span> <span class=\"o\">+</span> <span class=\"mf\">0.01</span> <span class=\"o\">*</span> <span class=\"n\">batch_mean</span>\n</code></pre></div>\n\n<h3 id=\"623\">6.2.3 \u8bad\u7ec3\u6280\u5de7\u4e0e\u8fc7\u62df\u5408\u9884\u9632</h3>\n<p><strong>\u6280\u5de71\uff1a\u6570\u636e\u589e\u5f3a</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">augment_preference_data</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">):</span>\n    <span class=\"c1\"># 1. \u987a\u5e8f\u968f\u673a\u5316</span>\n    <span class=\"k\">if</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.5</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"c1\"># \u6807\u7b7e\u7ffb\u8f6c</span>\n\n    <span class=\"c1\"># 2. \u8fb9\u9645\u6848\u4f8b\u751f\u6210</span>\n    <span class=\"k\">if</span> <span class=\"n\">similarity</span><span class=\"p\">(</span><span class=\"n\">chosen</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.9</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u4e3a\u9ad8\u5ea6\u76f8\u4f3c\u7684\u5bf9\u6dfb\u52a0\u566a\u58f0</span>\n        <span class=\"n\">rejected</span> <span class=\"o\">=</span> <span class=\"n\">add_noise</span><span class=\"p\">(</span><span class=\"n\">rejected</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n</code></pre></div>\n\n<p><strong>\u6280\u5de72\uff1a\u96c6\u6210\u4e0e\u4e0d\u786e\u5b9a\u6027\u4f30\u8ba1</strong></p>\n<p>\u8bad\u7ec3\u591a\u4e2a\u5956\u52b1\u6a21\u578b\u5e76\u4f7f\u7528\u96c6\u6210\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">EnsembleRewardModel</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"n\">models</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">predict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">):</span>\n        <span class=\"n\">rewards</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">m</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"p\">]</span>\n        <span class=\"n\">mean_reward</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">rewards</span><span class=\"p\">)</span>\n        <span class=\"n\">uncertainty</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">(</span><span class=\"n\">rewards</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u9ad8\u4e0d\u786e\u5b9a\u6027\u65f6\u964d\u4f4e\u5956\u52b1\u7f6e\u4fe1\u5ea6</span>\n        <span class=\"k\">if</span> <span class=\"n\">uncertainty</span> <span class=\"o\">&gt;</span> <span class=\"n\">threshold</span><span class=\"p\">:</span>\n            <span class=\"n\">mean_reward</span> <span class=\"o\">*=</span> <span class=\"mf\">0.8</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">mean_reward</span><span class=\"p\">,</span> <span class=\"n\">uncertainty</span>\n</code></pre></div>\n\n<p><strong>\u6280\u5de73\uff1a\u5bf9\u6297\u9a8c\u8bc1</strong></p>\n<p>\u5b9a\u671f\u7528\u5bf9\u6297\u6837\u672c\u6d4b\u8bd5\u5956\u52b1\u6a21\u578b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">generate_adversarial_samples</span><span class=\"p\">(</span><span class=\"n\">reward_model</span><span class=\"p\">,</span> <span class=\"n\">base_model</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u751f\u6210\u9ad8\u5956\u52b1\u4f46\u8d28\u91cf\u5dee\u7684\u6837\u672c</span>\n    <span class=\"n\">prompt</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;\u89e3\u91ca\u91cf\u5b50\u529b\u5b66&quot;</span>\n\n    <span class=\"c1\"># \u7b56\u75651\uff1a\u91cd\u590d\u5173\u952e\u8bcd</span>\n    <span class=\"n\">bad_response_1</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;\u91cf\u5b50\u529b\u5b66\u91cf\u5b50\u529b\u5b66...&quot;</span> <span class=\"o\">*</span> <span class=\"mi\">100</span>\n\n    <span class=\"c1\"># \u7b56\u75652\uff1a\u7a7a\u6d1e\u7684\u957f\u56de\u590d</span>\n    <span class=\"n\">bad_response_2</span> <span class=\"o\">=</span> <span class=\"n\">generate_verbose_but_empty</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u68c0\u67e5\u5956\u52b1\u6a21\u578b\u662f\u5426\u88ab\u6b3a\u9a97</span>\n    <span class=\"k\">if</span> <span class=\"n\">reward_model</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">bad_response_1</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">threshold</span><span class=\"p\">:</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u5956\u52b1\u6a21\u578b\u5bf9\u91cd\u590d\u5185\u5bb9\u7ed9\u51fa\u9ad8\u5206&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"624\">6.2.4 \u6821\u51c6\u6280\u672f</h3>\n<p><strong>\u6e29\u5ea6\u7f29\u653e\uff08Temperature Scaling\uff09</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CalibratedRewardModel</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">base_model</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_model</span> <span class=\"o\">=</span> <span class=\"n\">base_model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temperature</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">):</span>\n        <span class=\"n\">logits</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_model</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">logits</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temperature</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">calibrate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val_data</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u5728\u9a8c\u8bc1\u96c6\u4e0a\u4f18\u5316\u6e29\u5ea6\u53c2\u6570</span>\n        <span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">LBFGS</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temperature</span><span class=\"p\">])</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">closure</span><span class=\"p\">():</span>\n            <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"k\">for</span> <span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">,</span> <span class=\"n\">rejected</span> <span class=\"ow\">in</span> <span class=\"n\">val_data</span><span class=\"p\">:</span>\n                <span class=\"n\">prob</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">sigmoid</span><span class=\"p\">(</span>\n                    <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">))</span> \n                <span class=\"p\">)</span>\n                <span class=\"n\">loss</span> <span class=\"o\">-=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">prob</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">loss</span>\n\n        <span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">closure</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u671f\u671b\u6821\u51c6\u8bef\u5dee\uff08ECE\uff09\u76d1\u63a7</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compute_ece</span><span class=\"p\">(</span><span class=\"n\">predictions</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">n_bins</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">bin_boundaries</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n_bins</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">ece</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_bins</span><span class=\"p\">):</span>\n        <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">predictions</span> <span class=\"o\">&gt;=</span> <span class=\"n\">bin_boundaries</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span> <span class=\"o\">&amp;</span> \\\n               <span class=\"p\">(</span><span class=\"n\">predictions</span> <span class=\"o\">&lt;</span> <span class=\"n\">bin_boundaries</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">mask</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">bin_acc</span> <span class=\"o\">=</span> <span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"n\">mask</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n            <span class=\"n\">bin_conf</span> <span class=\"o\">=</span> <span class=\"n\">predictions</span><span class=\"p\">[</span><span class=\"n\">mask</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n            <span class=\"n\">bin_weight</span> <span class=\"o\">=</span> <span class=\"n\">mask</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span> <span class=\"o\">/</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">predictions</span><span class=\"p\">)</span>\n\n            <span class=\"n\">ece</span> <span class=\"o\">+=</span> <span class=\"n\">bin_weight</span> <span class=\"o\">*</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">bin_acc</span> <span class=\"o\">-</span> <span class=\"n\">bin_conf</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">ece</span>\n</code></pre></div>\n\n<h2 id=\"63-ppollm\">6.3 PPO\u5728LLM\u4e2d\u7684\u5b9e\u73b0\u7ec6\u8282</h2>\n<h3 id=\"631-ppo\">6.3.1 PPO\u7b97\u6cd5\u6838\u5fc3</h3>\n<p>PPO\uff08Proximal Policy Optimization\uff09\u901a\u8fc7\u9650\u5236\u6bcf\u6b21\u66f4\u65b0\u7684\u5e45\u5ea6\u6765\u4fdd\u8bc1\u8bad\u7ec3\u7a33\u5b9a\u6027\uff1a\n$$\\mathcal{L}_{PPO} = \\mathbb{E}_t\\left[\\min\\left(r_t(\\theta)\\hat{A}_t, \\text{clip}(r_t(\\theta), 1-\\epsilon, 1+\\epsilon)\\hat{A}_t\\right)\\right]$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$r_t(\\theta) = \\frac{\\pi_\\theta(a_t|s_t)}{\\pi_{\\theta_{old}}(a_t|s_t)}$ \u662f\u91cd\u8981\u6027\u91c7\u6837\u6bd4\u7387</li>\n<li>$\\hat{A}_t$ \u662f\u4f18\u52bf\u51fd\u6570\u4f30\u8ba1</li>\n<li>$\\epsilon$ \u662f\u88c1\u526a\u53c2\u6570\uff08\u901a\u5e380.1-0.2\uff09</li>\n</ul>\n<h3 id=\"632-llm\">6.3.2 LLM\u7279\u5b9a\u7684\u5b9e\u73b0\u7ec6\u8282</h3>\n<p><strong>\u6311\u62181\uff1a\u5e8f\u5217\u751f\u6210\u7684\u4fe1\u7528\u5206\u914d</strong></p>\n<p>\u5728LLM\u4e2d\uff0c\u4e00\u4e2a\"\u52a8\u4f5c\"\u662f\u751f\u6210\u4e00\u4e2atoken\uff0c\"\u8f68\u8ff9\"\u662f\u5b8c\u6574\u7684\u56de\u590d\u3002\u5956\u52b1\u901a\u5e38\u53ea\u5728\u5e8f\u5217\u672b\u5c3e\u7ed9\u51fa\uff0c\u9700\u8981\u5408\u7406\u7684\u4fe1\u7528\u5206\u914d\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compute_advantages</span><span class=\"p\">(</span><span class=\"n\">rewards</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">gamma</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">lam</span><span class=\"o\">=</span><span class=\"mf\">0.95</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u8ba1\u7b97\u5e7f\u4e49\u4f18\u52bf\u4f30\u8ba1(GAE)</span>\n<span class=\"sd\">    rewards: [batch_size, seq_len] \u901a\u5e38\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u975e\u96f6</span>\n<span class=\"sd\">    values: [batch_size, seq_len] \u4ef7\u503c\u51fd\u6570\u9884\u6d4b</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">advantages</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">rewards</span><span class=\"p\">)</span>\n    <span class=\"n\">lastgaelam</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rewards</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))):</span>\n        <span class=\"k\">if</span> <span class=\"n\">t</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rewards</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">next_values</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>  <span class=\"c1\"># \u7ec8\u6b62\u72b6\u6001</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">next_values</span> <span class=\"o\">=</span> <span class=\"n\">values</span><span class=\"p\">[:,</span> <span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n\n        <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"n\">rewards</span><span class=\"p\">[:,</span> <span class=\"n\">t</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">gamma</span> <span class=\"o\">*</span> <span class=\"n\">next_values</span> <span class=\"o\">-</span> <span class=\"n\">values</span><span class=\"p\">[:,</span> <span class=\"n\">t</span><span class=\"p\">]</span>\n        <span class=\"n\">advantages</span><span class=\"p\">[:,</span> <span class=\"n\">t</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">lastgaelam</span> <span class=\"o\">=</span> <span class=\"n\">delta</span> <span class=\"o\">+</span> <span class=\"n\">gamma</span> <span class=\"o\">*</span> <span class=\"n\">lam</span> <span class=\"o\">*</span> <span class=\"n\">lastgaelam</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">advantages</span>\n</code></pre></div>\n\n<p><strong>\u6311\u62182\uff1aKL\u6563\u5ea6\u7ea6\u675f</strong></p>\n<p>\u9632\u6b62\u7b56\u7565\u504f\u79bb\u592a\u8fdc\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">compute_kl_penalty</span><span class=\"p\">(</span><span class=\"n\">logprobs_new</span><span class=\"p\">,</span> <span class=\"n\">logprobs_ref</span><span class=\"p\">,</span> <span class=\"n\">kl_coef</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u8ba1\u7b97KL\u6563\u5ea6\u60e9\u7f5a</span>\n<span class=\"sd\">    logprobs_new: \u5f53\u524d\u7b56\u7565\u7684\u5bf9\u6570\u6982\u7387</span>\n<span class=\"sd\">    logprobs_ref: \u53c2\u8003\u7b56\u7565\uff08\u901a\u5e38\u662fSFT\u6a21\u578b\uff09\u7684\u5bf9\u6570\u6982\u7387</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">kl</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">logprobs_ref</span> <span class=\"o\">-</span> <span class=\"n\">logprobs_new</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u81ea\u9002\u5e94KL\u7cfb\u6570</span>\n    <span class=\"k\">if</span> <span class=\"n\">kl</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"n\">target_kl</span> <span class=\"o\">*</span> <span class=\"mf\">1.5</span><span class=\"p\">:</span>\n        <span class=\"n\">kl_coef</span> <span class=\"o\">*=</span> <span class=\"mf\">1.5</span>  <span class=\"c1\"># \u589e\u52a0\u60e9\u7f5a</span>\n    <span class=\"k\">elif</span> <span class=\"n\">kl</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"n\">target_kl</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span><span class=\"p\">:</span>\n        <span class=\"n\">kl_coef</span> <span class=\"o\">*=</span> <span class=\"mf\">0.5</span>  <span class=\"c1\"># \u51cf\u5c11\u60e9\u7f5a</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">kl</span> <span class=\"o\">*</span> <span class=\"n\">kl_coef</span>\n</code></pre></div>\n\n<h3 id=\"633\">6.3.3 \u8bad\u7ec3\u5faa\u73af\u5b9e\u73b0</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">PPOTrainer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">policy_model</span><span class=\"p\">,</span> <span class=\"n\">ref_model</span><span class=\"p\">,</span> <span class=\"n\">reward_model</span><span class=\"p\">,</span> \n                 <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">1e-6</span><span class=\"p\">,</span> <span class=\"n\">eps</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">kl_coef</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">policy</span> <span class=\"o\">=</span> <span class=\"n\">policy_model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ref</span> <span class=\"o\">=</span> <span class=\"n\">ref_model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reward</span> <span class=\"o\">=</span> <span class=\"n\">reward_model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">AdamW</span><span class=\"p\">(</span><span class=\"n\">policy_model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"n\">lr</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">eps</span> <span class=\"o\">=</span> <span class=\"n\">eps</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kl_coef</span> <span class=\"o\">=</span> <span class=\"n\">kl_coef</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">train_step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 1. \u751f\u6210\u56de\u590d</span>\n        <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n            <span class=\"n\">responses</span><span class=\"p\">,</span> <span class=\"n\">old_logprobs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generate_responses</span><span class=\"p\">(</span>\n                <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">max_length</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"c1\"># 2. \u8ba1\u7b97\u5956\u52b1</span>\n            <span class=\"n\">rewards</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reward</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">responses</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># 3. \u8ba1\u7b97\u53c2\u8003\u6a21\u578b\u7684\u5bf9\u6570\u6982\u7387</span>\n            <span class=\"n\">ref_logprobs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ref</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">responses</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 4. \u591a\u8f6ePPO\u66f4\u65b0</span>\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">):</span>  <span class=\"c1\"># PPO epochs</span>\n            <span class=\"c1\"># \u8ba1\u7b97\u5f53\u524d\u7b56\u7565\u7684\u5bf9\u6570\u6982\u7387</span>\n            <span class=\"n\">new_logprobs</span><span class=\"p\">,</span> <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">policy</span><span class=\"o\">.</span><span class=\"n\">forward_with_value</span><span class=\"p\">(</span>\n                <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">responses</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u8ba1\u7b97\u4f18\u52bf</span>\n            <span class=\"n\">advantages</span> <span class=\"o\">=</span> <span class=\"n\">compute_advantages</span><span class=\"p\">(</span><span class=\"n\">rewards</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># PPO\u635f\u5931</span>\n            <span class=\"n\">ratio</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">new_logprobs</span> <span class=\"o\">-</span> <span class=\"n\">old_logprobs</span><span class=\"p\">)</span>\n            <span class=\"n\">clipped_ratio</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">ratio</span><span class=\"p\">,</span> <span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">eps</span><span class=\"p\">,</span> <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">eps</span><span class=\"p\">)</span>\n\n            <span class=\"n\">policy_loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">(</span>\n                <span class=\"n\">ratio</span> <span class=\"o\">*</span> <span class=\"n\">advantages</span><span class=\"p\">,</span>\n                <span class=\"n\">clipped_ratio</span> <span class=\"o\">*</span> <span class=\"n\">advantages</span>\n            <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n\n            <span class=\"c1\"># KL\u60e9\u7f5a</span>\n            <span class=\"n\">kl_loss</span> <span class=\"o\">=</span> <span class=\"n\">compute_kl_penalty</span><span class=\"p\">(</span>\n                <span class=\"n\">new_logprobs</span><span class=\"p\">,</span> <span class=\"n\">ref_logprobs</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kl_coef</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u4ef7\u503c\u51fd\u6570\u635f\u5931</span>\n            <span class=\"n\">value_loss</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">mse_loss</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">rewards</span> <span class=\"o\">+</span> <span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">detach</span><span class=\"p\">())</span>\n\n            <span class=\"c1\"># \u603b\u635f\u5931</span>\n            <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"n\">policy_loss</span> <span class=\"o\">+</span> <span class=\"n\">kl_loss</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">value_loss</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n            <span class=\"n\">loss</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n            <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">clip_grad_norm_</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">policy</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<h3 id=\"634-ppo\">6.3.4 PPO\u8c03\u8bd5\u6280\u5de7</h3>\n<p><strong>\u6280\u5de71\uff1a\u76d1\u63a7\u5173\u952e\u6307\u6807</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">log_ppo_metrics</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u5fc5\u987b\u76d1\u63a7\u7684\u6307\u6807</span>\n    <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;kl_divergence&#39;</span><span class=\"p\">:</span> <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;kl&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(),</span>\n        <span class=\"s1\">&#39;clip_fraction&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;ratio&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">1.2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(),</span>\n        <span class=\"s1\">&#39;approx_kl&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;ratio&#39;</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pow</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;reward_mean&#39;</span><span class=\"p\">:</span> <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;rewards&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(),</span>\n        <span class=\"s1\">&#39;reward_std&#39;</span><span class=\"p\">:</span> <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;rewards&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">(),</span>\n        <span class=\"s1\">&#39;value_loss&#39;</span><span class=\"p\">:</span> <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;value_loss&#39;</span><span class=\"p\">],</span>\n        <span class=\"s1\">&#39;policy_loss&#39;</span><span class=\"p\">:</span> <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;policy_loss&#39;</span><span class=\"p\">],</span>\n        <span class=\"s1\">&#39;entropy&#39;</span><span class=\"p\">:</span> <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">&#39;entropy&#39;</span><span class=\"p\">],</span>  <span class=\"c1\"># \u76d1\u63a7\u63a2\u7d22\u7a0b\u5ea6</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\"># \u5f02\u5e38\u68c0\u6d4b</span>\n    <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;kl_divergence&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.1</span><span class=\"p\">:</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;KL\u6563\u5ea6\u8fc7\u5927\uff0c\u53ef\u80fd\u5bfc\u81f4\u8bad\u7ec3\u4e0d\u7a33\u5b9a&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;clip_fraction&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.3</span><span class=\"p\">:</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u88c1\u526a\u6bd4\u4f8b\u8fc7\u9ad8\uff0c\u8003\u8651\u51cf\u5c0f\u5b66\u4e60\u7387&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">metrics</span>\n</code></pre></div>\n\n<p><strong>\u6280\u5de72\uff1a\u6e10\u8fdb\u5f0f\u8bad\u7ec3</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">progressive_ppo_training</span><span class=\"p\">(</span><span class=\"n\">trainer</span><span class=\"p\">,</span> <span class=\"n\">stages</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u5206\u9636\u6bb5\u9010\u6b65\u589e\u52a0\u8bad\u7ec3\u96be\u5ea6</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">stage</span> <span class=\"ow\">in</span> <span class=\"n\">stages</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u9636\u6bb51\uff1a\u7b80\u5355\u4efb\u52a1\uff0c\u5927KL\u5bb9\u5fcd\u5ea6</span>\n        <span class=\"k\">if</span> <span class=\"n\">stage</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">kl_coef</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>\n            <span class=\"n\">prompts</span> <span class=\"o\">=</span> <span class=\"n\">get_simple_prompts</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u9636\u6bb52\uff1a\u4e2d\u7b49\u96be\u5ea6\uff0c\u6807\u51c6KL</span>\n        <span class=\"k\">elif</span> <span class=\"n\">stage</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">kl_coef</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>\n            <span class=\"n\">prompts</span> <span class=\"o\">=</span> <span class=\"n\">get_medium_prompts</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u9636\u6bb53\uff1a\u56f0\u96be\u4efb\u52a1\uff0c\u4e25\u683cKL</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">kl_coef</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>\n            <span class=\"n\">prompts</span> <span class=\"o\">=</span> <span class=\"n\">get_hard_prompts</span><span class=\"p\">()</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">step</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">stage_steps</span><span class=\"p\">):</span>\n            <span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">train_step</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h2 id=\"64-dpoipo\">6.4 DPO\u4e0eIPO\u7684\u6bd4\u8f83\u5206\u6790</h2>\n<h3 id=\"641-dpo\">6.4.1 DPO\u7684\u7406\u8bba\u57fa\u7840</h3>\n<p>DPO\uff08Direct Preference Optimization\uff09\u901a\u8fc7\u91cd\u65b0\u53c2\u6570\u5316\uff0c\u5c06RLHF\u95ee\u9898\u8f6c\u6362\u4e3a\u76d1\u7763\u5b66\u4e60\u95ee\u9898\uff0c\u907f\u514d\u4e86\u663e\u5f0f\u8bad\u7ec3\u5956\u52b1\u6a21\u578b\uff1a</p>\n<p><strong>\u5173\u952e\u6d1e\u5bdf</strong>\uff1a\u6700\u4f18\u7b56\u7565\u53ef\u4ee5\u7528\u5c01\u95ed\u5f62\u5f0f\u8868\u8fbe\uff1a\n$$\\pi^*(y|x) = \\frac{1}{Z(x)}\\pi_{ref}(y|x)\\exp\\left(\\frac{r(x,y)}{\\beta}\\right)$$\n\u53cd\u63a8\u5956\u52b1\u51fd\u6570\uff1a\n$$r(x,y) = \\beta\\log\\frac{\\pi^*(y|x)}{\\pi_{ref}(y|x)} + \\beta\\log Z(x)$$\n\u4ee3\u5165Bradley-Terry\u6a21\u578b\uff0c\u5f97\u5230DPO\u635f\u5931\uff1a\n$$\\mathcal{L}_{DPO} = -\\mathbb{E}\\left[\\log\\sigma\\left(\\beta\\log\\frac{\\pi_\\theta(y_w|x)}{\\pi_{ref}(y_w|x)} - \\beta\\log\\frac{\\pi_\\theta(y_l|x)}{\\pi_{ref}(y_l|x)}\\right)\\right]$$</p>\n<h3 id=\"642-dpo\">6.4.2 DPO\u5b9e\u73b0\u7ec6\u8282</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">DPOTrainer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">ref_model</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ref_model</span> <span class=\"o\">=</span> <span class=\"n\">ref_model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">beta</span> <span class=\"o\">=</span> <span class=\"n\">beta</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">AdamW</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">5e-7</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">compute_loss</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8ba1\u7b97\u7b56\u7565\u6a21\u578b\u7684\u5bf9\u6570\u6982\u7387</span>\n        <span class=\"n\">chosen_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">)</span>\n        <span class=\"n\">rejected_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u53c2\u8003\u6a21\u578b\u7684\u5bf9\u6570\u6982\u7387</span>\n        <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n            <span class=\"n\">ref_chosen_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ref_model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span>\n                <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">chosen</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">ref_rejected_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ref_model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span>\n                <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">rejected</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u5bf9\u6570\u6982\u7387\u6bd4</span>\n        <span class=\"n\">chosen_rewards</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">beta</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">chosen_logps</span> <span class=\"o\">-</span> <span class=\"n\">ref_chosen_logps</span><span class=\"p\">)</span>\n        <span class=\"n\">rejected_rewards</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">beta</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">rejected_logps</span> <span class=\"o\">-</span> <span class=\"n\">ref_rejected_logps</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># DPO\u635f\u5931</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">logsigmoid</span><span class=\"p\">(</span><span class=\"n\">chosen_rewards</span> <span class=\"o\">-</span> <span class=\"n\">rejected_rewards</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u6dfb\u52a0\u9690\u5f0f\u5956\u52b1\u7684\u76d1\u63a7</span>\n        <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n            <span class=\"n\">reward_accuracy</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">chosen_rewards</span> <span class=\"o\">&gt;</span> <span class=\"n\">rejected_rewards</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n            <span class=\"n\">reward_margin</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">chosen_rewards</span> <span class=\"o\">-</span> <span class=\"n\">rejected_rewards</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">loss</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;reward_accuracy&#39;</span><span class=\"p\">:</span> <span class=\"n\">reward_accuracy</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;reward_margin&#39;</span><span class=\"p\">:</span> <span class=\"n\">reward_margin</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;chosen_rewards&#39;</span><span class=\"p\">:</span> <span class=\"n\">chosen_rewards</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(),</span>\n            <span class=\"s1\">&#39;rejected_rewards&#39;</span><span class=\"p\">:</span> <span class=\"n\">rejected_rewards</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n</code></pre></div>\n\n<h3 id=\"643-ipo\">6.4.3 IPO\u7684\u6539\u8fdb</h3>\n<p>IPO\uff08Identity Preference Optimization\uff09\u89e3\u51b3\u4e86DPO\u7684\u4e00\u4e9b\u95ee\u9898\uff1a</p>\n<ol>\n<li><strong>\u8fc7\u62df\u5408\u95ee\u9898</strong>\uff1aDPO\u503e\u5411\u4e8e\u8ba9rejected\u6837\u672c\u7684\u4f3c\u7136\u5ea6\u8d8b\u8fd1\u4e8e0</li>\n<li><strong>\u786e\u5b9a\u6027\u504f\u597d</strong>\uff1aDPO\u5047\u8bbe\u504f\u597d\u662f\u786e\u5b9a\u6027\u7684\uff0c\u5ffd\u7565\u4e86\u6807\u6ce8\u566a\u58f0</li>\n</ol>\n<p>IPO\u7684\u635f\u5931\u51fd\u6570\uff1a\n$$\\mathcal{L}_{IPO} = \\mathbb{E}\\left[\\left(\\log\\frac{\\pi_\\theta(y_w|x)}{\\pi_{ref}(y_w|x)} - \\log\\frac{\\pi_\\theta(y_l|x)}{\\pi_{ref}(y_l|x)} - \\frac{1}{2\\beta}\\right)^2\\right]$$</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">IPOTrainer</span><span class=\"p\">(</span><span class=\"n\">DPOTrainer</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">compute_loss</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u4e0eDPO\u76f8\u540c\u7684\u5bf9\u6570\u6982\u7387\u8ba1\u7b97</span>\n        <span class=\"n\">chosen_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">)</span>\n        <span class=\"n\">rejected_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n            <span class=\"n\">ref_chosen_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ref_model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span>\n                <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">chosen</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">ref_rejected_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ref_model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span>\n                <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">rejected</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"c1\"># IPO\u4f7f\u7528\u5e73\u65b9\u635f\u5931\u800c\u975elogistic\u635f\u5931</span>\n        <span class=\"n\">log_ratio_chosen</span> <span class=\"o\">=</span> <span class=\"n\">chosen_logps</span> <span class=\"o\">-</span> <span class=\"n\">ref_chosen_logps</span>\n        <span class=\"n\">log_ratio_rejected</span> <span class=\"o\">=</span> <span class=\"n\">rejected_logps</span> <span class=\"o\">-</span> <span class=\"n\">ref_rejected_logps</span>\n\n        <span class=\"c1\"># IPO\u635f\u5931\uff1a\u9f13\u52b1\u5dee\u503c\u4e3a1/(2\u03b2)</span>\n        <span class=\"n\">losses</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">log_ratio_chosen</span> <span class=\"o\">-</span> <span class=\"n\">log_ratio_rejected</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">beta</span><span class=\"p\">))</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">losses</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(),</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;log_ratio_diff&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">log_ratio_chosen</span> <span class=\"o\">-</span> <span class=\"n\">log_ratio_rejected</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n</code></pre></div>\n\n<h3 id=\"644-dpo-vs-ipo\">6.4.4 DPO vs IPO\u5b9e\u9a8c\u5bf9\u6bd4</h3>\n<p><strong>\u5b9e\u9a8c\u8bbe\u7f6e\u5bf9\u6bd4\u8868</strong>\uff1a</p>\n<p>| \u7ef4\u5ea6 | DPO | IPO |</p>\n<table>\n<thead>\n<tr>\n<th>\u7ef4\u5ea6</th>\n<th>DPO</th>\n<th>IPO</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u635f\u5931\u51fd\u6570</td>\n<td>Logistic</td>\n<td>MSE</td>\n</tr>\n<tr>\n<td>\u03b2\u53c2\u6570\u654f\u611f\u5ea6</td>\n<td>\u9ad8</td>\n<td>\u4e2d</td>\n</tr>\n<tr>\n<td>\u8bad\u7ec3\u7a33\u5b9a\u6027</td>\n<td>\u4e2d</td>\n<td>\u9ad8</td>\n</tr>\n<tr>\n<td>\u6536\u655b\u901f\u5ea6</td>\n<td>\u5feb</td>\n<td>\u6162</td>\n</tr>\n<tr>\n<td>\u8fc7\u62df\u5408\u98ce\u9669</td>\n<td>\u9ad8</td>\n<td>\u4f4e</td>\n</tr>\n<tr>\n<td>\u566a\u58f0\u9c81\u68d2\u6027</td>\n<td>\u4f4e</td>\n<td>\u9ad8</td>\n</tr>\n</tbody>\n</table>\n<p><strong>\u9009\u62e9\u6307\u5357</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">choose_optimization_method</span><span class=\"p\">(</span><span class=\"n\">dataset_properties</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u6839\u636e\u6570\u636e\u96c6\u7279\u6027\u9009\u62e9DPO\u6216IPO</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">dataset_properties</span><span class=\"p\">[</span><span class=\"s1\">&#39;annotation_agreement&#39;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.7</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u6807\u6ce8\u4e00\u81f4\u6027\u4f4e\uff0c\u4f7f\u7528IPO</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;IPO&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u6807\u6ce8\u566a\u58f0\u5927\uff0cIPO\u66f4\u9c81\u68d2&#39;</span>\n\n    <span class=\"k\">elif</span> <span class=\"n\">dataset_properties</span><span class=\"p\">[</span><span class=\"s1\">&#39;size&#39;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10000</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u6570\u636e\u91cf\u5c0f\uff0c\u4f7f\u7528IPO\u907f\u514d\u8fc7\u62df\u5408</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;IPO&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u6570\u636e\u91cf\u5c0f\uff0cIPO\u6cdb\u5316\u66f4\u597d&#39;</span>\n\n    <span class=\"k\">elif</span> <span class=\"n\">dataset_properties</span><span class=\"p\">[</span><span class=\"s1\">&#39;preference_strength&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.9</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u504f\u597d\u975e\u5e38\u660e\u786e\uff0c\u4f7f\u7528DPO</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;DPO&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u504f\u597d\u660e\u786e\uff0cDPO\u6536\u655b\u5feb&#39;</span>\n\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u9ed8\u8ba4\u4f7f\u7528DPO</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;DPO&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u6807\u51c6\u573a\u666f\uff0cDPO\u6548\u7387\u9ad8&#39;</span>\n</code></pre></div>\n\n<h3 id=\"645\">6.4.5 \u6df7\u5408\u7b56\u7565</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">HybridDPO_IPO</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u7ed3\u5408DPO\u548cIPO\u4f18\u70b9\u7684\u6df7\u5408\u65b9\u6cd5</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">ref_model</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ref_model</span> <span class=\"o\">=</span> <span class=\"n\">ref_model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">beta</span> <span class=\"o\">=</span> <span class=\"n\">beta</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">alpha</span>  <span class=\"c1\"># DPO\u548cIPO\u7684\u6df7\u5408\u6743\u91cd</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">compute_loss</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8ba1\u7b97\u5bf9\u6570\u6982\u7387</span>\n        <span class=\"n\">chosen_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">)</span>\n        <span class=\"n\">rejected_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n            <span class=\"n\">ref_chosen_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ref_model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">chosen</span><span class=\"p\">)</span>\n            <span class=\"n\">ref_rejected_logps</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ref_model</span><span class=\"o\">.</span><span class=\"n\">compute_logprobs</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">rejected</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5bf9\u6570\u6bd4</span>\n        <span class=\"n\">log_ratio_diff</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">chosen_logps</span> <span class=\"o\">-</span> <span class=\"n\">ref_chosen_logps</span><span class=\"p\">)</span> <span class=\"o\">-</span> \\\n                        <span class=\"p\">(</span><span class=\"n\">rejected_logps</span> <span class=\"o\">-</span> <span class=\"n\">ref_rejected_logps</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># DPO\u635f\u5931</span>\n        <span class=\"n\">dpo_loss</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">logsigmoid</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">beta</span> <span class=\"o\">*</span> <span class=\"n\">log_ratio_diff</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># IPO\u635f\u5931</span>\n        <span class=\"n\">ipo_loss</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">log_ratio_diff</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">beta</span><span class=\"p\">))</span><span class=\"o\">**</span><span class=\"mf\">2.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u6df7\u5408\u635f\u5931</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">dpo_loss</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">alpha</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">ipo_loss</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">loss</span>\n</code></pre></div>\n\n<h2 id=\"65-constitutional-ai\">6.5 Constitutional AI\u4e0e\u81ea\u6211\u6539\u8fdb</h2>\n<h3 id=\"651-constitutional-ai\">6.5.1 Constitutional AI\u539f\u7406</h3>\n<p>Constitutional AI\uff08CAI\uff09\u4f7f\u7528\u4e00\u7ec4\u539f\u5219\u6765\u6307\u5bfc\u6a21\u578b\u7684\u81ea\u6211\u6539\u8fdb\uff0c\u51cf\u5c11\u5bf9\u4eba\u7c7b\u6807\u6ce8\u7684\u4f9d\u8d56\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u539f\u59cb\u56de\u590d \u2192 AI\u81ea\u6211\u6279\u5224 \u2192 \u4fee\u8ba2\u56de\u590d \u2192 AI\u504f\u597d\u5224\u65ad \u2192 \u8bad\u7ec3\n</code></pre></div>\n\n<p>\u6838\u5fc3\u7ec4\u4ef6\uff1a</p>\n<ol>\n<li><strong>\u5baa\u6cd5\u539f\u5219</strong>\uff1a\u5b9a\u4e49\u6a21\u578b\u5e94\u9075\u5faa\u7684\u89c4\u5219</li>\n<li><strong>\u81ea\u6211\u6279\u5224</strong>\uff1a\u6a21\u578b\u8bc4\u4f30\u81ea\u5df1\u7684\u8f93\u51fa</li>\n<li><strong>\u81ea\u6211\u4fee\u8ba2</strong>\uff1a\u57fa\u4e8e\u6279\u5224\u6539\u8fdb\u56de\u590d</li>\n<li><strong>\u81ea\u6211\u504f\u597d</strong>\uff1a\u751f\u6210\u504f\u597d\u6570\u636e\u7528\u4e8e\u8bad\u7ec3</li>\n</ol>\n<h3 id=\"652-constitutional-ai\">6.5.2 \u5b9e\u73b0Constitutional AI</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ConstitutionalAI</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">principles</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">principles</span> <span class=\"o\">=</span> <span class=\"n\">principles</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">critique_response</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u4f7f\u7528\u5baa\u6cd5\u539f\u5219\u6279\u5224\u56de\u590d</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">critiques</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">principle</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">principles</span><span class=\"p\">:</span>\n            <span class=\"n\">critique_prompt</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">            \u539f\u5219\uff1a</span><span class=\"si\">{</span><span class=\"n\">principle</span><span class=\"si\">}</span>\n<span class=\"s2\">            \u7528\u6237\u95ee\u9898\uff1a</span><span class=\"si\">{</span><span class=\"n\">prompt</span><span class=\"si\">}</span>\n<span class=\"s2\">            \u52a9\u624b\u56de\u590d\uff1a</span><span class=\"si\">{</span><span class=\"n\">response</span><span class=\"si\">}</span>\n\n<span class=\"s2\">            \u8fd9\u4e2a\u56de\u590d\u662f\u5426\u8fdd\u53cd\u4e86\u4e0a\u8ff0\u539f\u5219\uff1f\u5982\u679c\u662f\uff0c\u8bf7\u8bf4\u660e\u5982\u4f55\u6539\u8fdb\u3002</span>\n<span class=\"s2\">            &quot;&quot;&quot;</span>\n\n            <span class=\"n\">critique</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">critique_prompt</span><span class=\"p\">)</span>\n            <span class=\"n\">critiques</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">critique</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">critiques</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">revise_response</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">critiques</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u57fa\u4e8e\u6279\u5224\u4fee\u8ba2\u56de\u590d</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">revision_prompt</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">        \u539f\u59cb\u95ee\u9898\uff1a</span><span class=\"si\">{</span><span class=\"n\">prompt</span><span class=\"si\">}</span>\n<span class=\"s2\">        \u539f\u59cb\u56de\u590d\uff1a</span><span class=\"si\">{</span><span class=\"n\">response</span><span class=\"si\">}</span>\n\n<span class=\"s2\">        \u6279\u5224\u610f\u89c1\uff1a</span>\n<span class=\"s2\">        </span><span class=\"si\">{</span><span class=\"s1\">&#39; &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">critiques</span><span class=\"p\">)</span><span class=\"si\">}</span>\n\n<span class=\"s2\">        \u8bf7\u6839\u636e\u6279\u5224\u610f\u89c1\u4fee\u8ba2\u56de\u590d\uff0c\u4f7f\u5176\u66f4\u597d\u5730\u9075\u5faa\u539f\u5219\u3002</span>\n<span class=\"s2\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">revised</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">revision_prompt</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">revised</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">generate_preference_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompts</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u751f\u6210\u81ea\u6211\u6807\u6ce8\u7684\u504f\u597d\u6570\u636e</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">preference_data</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">prompt</span> <span class=\"ow\">in</span> <span class=\"n\">prompts</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u751f\u6210\u521d\u59cb\u56de\u590d</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u81ea\u6211\u6279\u5224</span>\n            <span class=\"n\">critiques</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">critique_response</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u5982\u679c\u6709\u6279\u5224\uff0c\u751f\u6210\u4fee\u8ba2\u7248\u672c</span>\n            <span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">critiques</span><span class=\"p\">):</span>\n                <span class=\"n\">revised</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">revise_response</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">critiques</span><span class=\"p\">)</span>\n\n                <span class=\"c1\"># \u521b\u5efa\u504f\u597d\u5bf9\uff08\u4fee\u8ba2\u7248\u672c &gt; \u539f\u59cb\u7248\u672c\uff09</span>\n                <span class=\"n\">preference_data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                    <span class=\"s1\">&#39;prompt&#39;</span><span class=\"p\">:</span> <span class=\"n\">prompt</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;chosen&#39;</span><span class=\"p\">:</span> <span class=\"n\">revised</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;rejected&#39;</span><span class=\"p\">:</span> <span class=\"n\">response</span>\n                <span class=\"p\">})</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">preference_data</span>\n</code></pre></div>\n\n<h3 id=\"653-rlaif\">6.5.3 RLAIF\u5b9e\u8df5</h3>\n<p>RLAIF\uff08RL from AI Feedback\uff09\u5b8c\u6574\u6d41\u7a0b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">RLAIFTrainer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">critic_model</span><span class=\"p\">,</span> <span class=\"n\">principles</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">critic</span> <span class=\"o\">=</span> <span class=\"n\">critic_model</span>  <span class=\"c1\"># \u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u6a21\u578b</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">principles</span> <span class=\"o\">=</span> <span class=\"n\">principles</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dpo_trainer</span> <span class=\"o\">=</span> <span class=\"n\">DPOTrainer</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">())</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">train_iteration</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">n_iterations</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">iteration</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_iterations</span><span class=\"p\">):</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;RLAIF\u8fed\u4ee3 </span><span class=\"si\">{</span><span class=\"n\">iteration</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># 1. \u751f\u6210\u56de\u590d</span>\n            <span class=\"n\">responses</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">prompt</span> <span class=\"ow\">in</span> <span class=\"n\">prompts</span><span class=\"p\">:</span>\n                <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">)</span>\n                <span class=\"n\">responses</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># 2. AI\u8bc4\u5206\u548c\u6392\u5e8f</span>\n            <span class=\"n\">scored_responses</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">score_responses</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">responses</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># 3. \u6784\u5efa\u504f\u597d\u6570\u636e</span>\n            <span class=\"n\">preference_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_preferences</span><span class=\"p\">(</span><span class=\"n\">scored_responses</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># 4. DPO\u8bad\u7ec3</span>\n            <span class=\"k\">for</span> <span class=\"n\">batch</span> <span class=\"ow\">in</span> <span class=\"n\">preference_data</span><span class=\"p\">:</span>\n                <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dpo_trainer</span><span class=\"o\">.</span><span class=\"n\">train_step</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># 5. \u8bc4\u4f30\u6539\u8fdb</span>\n            <span class=\"n\">improvement</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">evaluate_improvement</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;\u6539\u8fdb\u5e45\u5ea6: </span><span class=\"si\">{</span><span class=\"n\">improvement</span><span class=\"si\">:</span><span class=\"s2\">.2%</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">improvement</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.01</span><span class=\"p\">:</span>  <span class=\"c1\"># \u6536\u655b</span>\n                <span class=\"k\">break</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">score_responses</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">responses</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u4f7f\u7528AI\u8bc4\u5206\u5668\u7ed9\u56de\u590d\u6253\u5206</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">responses</span><span class=\"p\">):</span>\n            <span class=\"n\">score_prompt</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">            \u6839\u636e\u4ee5\u4e0b\u539f\u5219\u8bc4\u5206\uff081-10\u5206\uff09\uff1a</span>\n<span class=\"s2\">            </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">principles</span><span class=\"si\">}</span>\n\n<span class=\"s2\">            \u95ee\u9898\uff1a</span><span class=\"si\">{</span><span class=\"n\">prompt</span><span class=\"si\">}</span>\n<span class=\"s2\">            \u56de\u590d\uff1a</span><span class=\"si\">{</span><span class=\"n\">response</span><span class=\"si\">}</span>\n\n<span class=\"s2\">            \u8bc4\u5206\uff08\u53ea\u8fd4\u56de\u6570\u5b57\uff09\uff1a</span>\n<span class=\"s2\">            &quot;&quot;&quot;</span>\n\n            <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">critic</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">score_prompt</span><span class=\"p\">))</span>\n            <span class=\"n\">scores</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">responses</span><span class=\"p\">,</span> <span class=\"n\">scores</span><span class=\"p\">))</span>\n</code></pre></div>\n\n<h3 id=\"654\">6.5.4 \u539f\u5219\u8bbe\u8ba1\u6700\u4f73\u5b9e\u8df5</h3>\n<p><strong>\u539f\u5219\u5c42\u6b21\u7ed3\u6784</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">CONSTITUTIONAL_PRINCIPLES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># \u7b2c\u4e00\u5c42\uff1a\u5b89\u5168\u6027\u539f\u5219\uff08\u6700\u9ad8\u4f18\u5148\u7ea7\uff09</span>\n    <span class=\"s1\">&#39;safety&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">&quot;\u4e0d\u63d0\u4f9b\u53ef\u80fd\u9020\u6210\u4f24\u5bb3\u7684\u4fe1\u606f&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;\u907f\u514d\u751f\u6210\u6b67\u89c6\u6027\u5185\u5bb9&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;\u4fdd\u62a4\u7528\u6237\u9690\u79c1&quot;</span>\n    <span class=\"p\">],</span>\n\n    <span class=\"c1\"># \u7b2c\u4e8c\u5c42\uff1a\u6709\u7528\u6027\u539f\u5219</span>\n    <span class=\"s1\">&#39;helpfulness&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">&quot;\u63d0\u4f9b\u51c6\u786e\u7684\u4fe1\u606f&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;\u56de\u7b54\u8981\u5207\u4e2d\u8981\u70b9&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;\u627f\u8ba4\u4e0d\u786e\u5b9a\u6027&quot;</span>\n    <span class=\"p\">],</span>\n\n    <span class=\"c1\"># \u7b2c\u4e09\u5c42\uff1a\u98ce\u683c\u539f\u5219</span>\n    <span class=\"s1\">&#39;style&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">&quot;\u4fdd\u6301\u4e13\u4e1a\u8bed\u6c14&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;\u907f\u514d\u8fc7\u5ea6\u81ea\u4fe1&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;\u9002\u5f53\u4f7f\u7528\u4f8b\u5b50&quot;</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">apply_principles_hierarchically</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">principles</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u5206\u5c42\u5e94\u7528\u539f\u5219\uff0c\u9ad8\u4f18\u5148\u7ea7\u539f\u5219\u53ef\u8986\u76d6\u4f4e\u4f18\u5148\u7ea7</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">level</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;safety&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;helpfulness&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;style&#39;</span><span class=\"p\">]:</span>\n        <span class=\"k\">for</span> <span class=\"n\">principle</span> <span class=\"ow\">in</span> <span class=\"n\">principles</span><span class=\"p\">[</span><span class=\"n\">level</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"n\">violates_principle</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">principle</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"n\">level</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;safety&#39;</span><span class=\"p\">:</span>\n                    <span class=\"c1\"># \u5b89\u5168\u95ee\u9898\u5fc5\u987b\u4fee\u6b63</span>\n                    <span class=\"k\">return</span> <span class=\"n\">revise_for_safety</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">principle</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"c1\"># \u5176\u4ed6\u95ee\u9898\u5c1d\u8bd5\u4fee\u6b63\u4f46\u4e0d\u5f3a\u5236</span>\n                    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">soft_revise</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">principle</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">response</span>\n</code></pre></div>\n\n<h2 id=\"66\">6.6 \u5728\u7ebf\u4e0e\u79bb\u7ebf\u5f3a\u5316\u5b66\u4e60\u7684\u6743\u8861</h2>\n<h3 id=\"661-vsrl\">6.6.1 \u5728\u7ebfvs\u79bb\u7ebfRL\u7684\u672c\u8d28\u533a\u522b</h3>\n<p><strong>\u5728\u7ebfRL</strong>\uff1a\u6a21\u578b\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u4e0e\u73af\u5883\u4ea4\u4e92\uff0c\u751f\u6210\u65b0\u6570\u636e\u5e76\u7acb\u5373\u4ece\u4e2d\u5b66\u4e60\u3002</p>\n<p><strong>\u79bb\u7ebfRL</strong>\uff1a\u4ec5\u4f7f\u7528\u9884\u5148\u6536\u96c6\u7684\u56fa\u5b9a\u6570\u636e\u96c6\u8fdb\u884c\u8bad\u7ec3\uff0c\u4e0d\u4e0e\u73af\u5883\u5b9e\u65f6\u4ea4\u4e92\u3002</p>\n<div class=\"codehilite\"><pre><span></span><code>\u5728\u7ebfRL\u6d41\u7a0b\uff1a\n\u7b56\u7565 \u2192 \u751f\u6210 \u2192 \u5956\u52b1 \u2192 \u66f4\u65b0 \u2192 \u7b56\u7565\uff08\u5faa\u73af\uff09\n\n\u79bb\u7ebfRL\u6d41\u7a0b\uff1a\n\u56fa\u5b9a\u6570\u636e\u96c6 \u2192 \u8bad\u7ec3 \u2192 \u7b56\u7565\uff08\u4e00\u6b21\u6027\uff09\n</code></pre></div>\n\n<h3 id=\"662-rl\">6.6.2 \u5728\u7ebfRL\u7684\u4f18\u52bf\u4e0e\u6311\u6218</h3>\n<p><strong>\u4f18\u52bf</strong>\uff1a</p>\n<ol>\n<li><strong>\u63a2\u7d22\u80fd\u529b\u5f3a</strong>\uff1a\u80fd\u4e3b\u52a8\u63a2\u7d22\u9ad8\u5956\u52b1\u533a\u57df</li>\n<li><strong>\u9002\u5e94\u6027\u597d</strong>\uff1a\u5feb\u901f\u9002\u5e94\u5956\u52b1\u51fd\u6570\u53d8\u5316</li>\n<li><strong>\u65e0\u5206\u5e03\u504f\u79fb</strong>\uff1a\u5728\u81ea\u5df1\u7684\u751f\u6210\u5206\u5e03\u4e0a\u8bad\u7ec3</li>\n</ol>\n<p><strong>\u6311\u6218</strong>\uff1a</p>\n<ol>\n<li><strong>\u8ba1\u7b97\u6210\u672c\u9ad8</strong>\uff1a\u9700\u8981\u5b9e\u65f6\u751f\u6210\u548c\u8bc4\u4f30</li>\n<li><strong>\u4e0d\u7a33\u5b9a\u6027</strong>\uff1a\u5bb9\u6613\u51fa\u73b0\u7b56\u7565\u5d29\u6e83</li>\n<li><strong>\u5b89\u5168\u98ce\u9669</strong>\uff1a\u53ef\u80fd\u751f\u6210\u6709\u5bb3\u5185\u5bb9</li>\n</ol>\n<p><strong>\u5728\u7ebfPPO\u5b9e\u73b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">OnlinePPO</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">policy</span><span class=\"p\">,</span> <span class=\"n\">reward_model</span><span class=\"p\">,</span> <span class=\"n\">buffer_size</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">policy</span> <span class=\"o\">=</span> <span class=\"n\">policy</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reward_model</span> <span class=\"o\">=</span> <span class=\"n\">reward_model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer_size</span> <span class=\"o\">=</span> <span class=\"n\">buffer_size</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">collect_trajectories</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompts</span><span class=\"p\">,</span> <span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u5b9e\u65f6\u6536\u96c6\u8f68\u8ff9\u6570\u636e</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">trajectories</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">prompt</span> <span class=\"ow\">in</span> <span class=\"n\">prompts</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"p\">):</span>\n                <span class=\"c1\"># \u5728\u7ebf\u751f\u6210</span>\n                <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">policy</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">)</span>\n\n                <span class=\"c1\"># \u5b9e\u65f6\u8ba1\u7b97\u5956\u52b1</span>\n                <span class=\"n\">reward</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reward_model</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n\n                <span class=\"c1\"># \u8ba1\u7b97\u4f18\u52bf\uff08\u9700\u8981\u4ef7\u503c\u51fd\u6570\uff09</span>\n                <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">policy</span><span class=\"o\">.</span><span class=\"n\">value_head</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n\n                <span class=\"n\">trajectories</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                    <span class=\"s1\">&#39;prompt&#39;</span><span class=\"p\">:</span> <span class=\"n\">prompt</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;response&#39;</span><span class=\"p\">:</span> <span class=\"n\">response</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;reward&#39;</span><span class=\"p\">:</span> <span class=\"n\">reward</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;value&#39;</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;logprobs&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">policy</span><span class=\"o\">.</span><span class=\"n\">get_logprobs</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n                <span class=\"p\">})</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">trajectories</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">train_step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompts</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u6536\u96c6\u65b0\u6570\u636e</span>\n        <span class=\"n\">new_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">collect_trajectories</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u66f4\u65b0\u7f13\u51b2\u533a\uff08FIFO\uff09</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">new_data</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer_size</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer_size</span><span class=\"p\">:]</span>\n\n        <span class=\"c1\"># \u5728\u7f13\u51b2\u533a\u6570\u636e\u4e0a\u8bad\u7ec3</span>\n        <span class=\"k\">for</span> <span class=\"n\">epoch</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">batch</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_batches</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"p\">):</span>\n                <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ppo_loss</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"663-rl\">6.6.3 \u79bb\u7ebfRL\u7684\u4f18\u52bf\u4e0e\u6311\u6218</h3>\n<p><strong>\u4f18\u52bf</strong>\uff1a</p>\n<ol>\n<li><strong>\u5b89\u5168\u53ef\u63a7</strong>\uff1a\u4e0d\u4f1a\u751f\u6210\u672a\u89c1\u8fc7\u7684\u6709\u5bb3\u5185\u5bb9</li>\n<li><strong>\u8ba1\u7b97\u9ad8\u6548</strong>\uff1a\u6570\u636e\u53ef\u9884\u5904\u7406\u548c\u7f13\u5b58</li>\n<li><strong>\u53ef\u91cd\u590d\u6027</strong>\uff1a\u76f8\u540c\u6570\u636e\u5f97\u5230\u76f8\u540c\u7ed3\u679c</li>\n</ol>\n<p><strong>\u6311\u6218</strong>\uff1a</p>\n<ol>\n<li><strong>\u5206\u5e03\u504f\u79fb</strong>\uff1a\u8bad\u7ec3\u548c\u90e8\u7f72\u5206\u5e03\u4e0d\u5339\u914d</li>\n<li><strong>\u6570\u636e\u8d28\u91cf\u4f9d\u8d56</strong>\uff1a\u5b8c\u5168\u4f9d\u8d56\u5386\u53f2\u6570\u636e\u8d28\u91cf</li>\n<li><strong>\u4fdd\u5b88\u6027</strong>\uff1a\u96be\u4ee5\u8d85\u8d8a\u6570\u636e\u96c6\u4e2d\u7684\u6700\u4f73\u8868\u73b0</li>\n</ol>\n<p><strong>\u79bb\u7ebfDPO\u5b9e\u73b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">OfflineDPO</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">ref_model</span><span class=\"p\">,</span> <span class=\"n\">dataset</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ref_model</span> <span class=\"o\">=</span> <span class=\"n\">ref_model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span>  <span class=\"c1\"># \u9884\u6536\u96c6\u7684\u504f\u597d\u6570\u636e</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">train</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n_epochs</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u7eaf\u79bb\u7ebf\u8bad\u7ec3\uff0c\u4e0d\u751f\u6210\u65b0\u6570\u636e</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">epoch</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_epochs</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">batch</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"p\">:</span>\n                <span class=\"c1\"># \u4f7f\u7528\u56fa\u5b9a\u6570\u636e\u96c6</span>\n                <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute_dpo_loss</span><span class=\"p\">(</span>\n                    <span class=\"n\">batch</span><span class=\"p\">[</span><span class=\"s1\">&#39;prompts&#39;</span><span class=\"p\">],</span>\n                    <span class=\"n\">batch</span><span class=\"p\">[</span><span class=\"s1\">&#39;chosen&#39;</span><span class=\"p\">],</span>\n                    <span class=\"n\">batch</span><span class=\"p\">[</span><span class=\"s1\">&#39;rejected&#39;</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u79bb\u7ebf\u8bc4\u4f30</span>\n            <span class=\"n\">val_loss</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">evaluate_offline</span><span class=\"p\">()</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Epoch </span><span class=\"si\">{</span><span class=\"n\">epoch</span><span class=\"si\">}</span><span class=\"s2\">: Val Loss = </span><span class=\"si\">{</span><span class=\"n\">val_loss</span><span class=\"si\">:</span><span class=\"s2\">.4f</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">compute_importance_weights</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u8ba1\u7b97\u91cd\u8981\u6027\u6743\u91cd\u4ee5\u7f13\u89e3\u5206\u5e03\u504f\u79fb</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">with</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">no_grad</span><span class=\"p\">():</span>\n            <span class=\"c1\"># \u5f53\u524d\u7b56\u7565\u7684\u6982\u7387</span>\n            <span class=\"n\">current_probs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">get_probs</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">[</span><span class=\"s1\">&#39;prompts&#39;</span><span class=\"p\">],</span> <span class=\"n\">batch</span><span class=\"p\">[</span><span class=\"s1\">&#39;responses&#39;</span><span class=\"p\">])</span>\n\n            <span class=\"c1\"># \u6570\u636e\u6536\u96c6\u65f6\u7684\u6982\u7387\uff08\u5982\u679c\u6709\uff09</span>\n            <span class=\"n\">old_probs</span> <span class=\"o\">=</span> <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;old_probs&#39;</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">ones_like</span><span class=\"p\">(</span><span class=\"n\">current_probs</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># \u91cd\u8981\u6027\u6743\u91cd</span>\n            <span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"n\">current_probs</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">old_probs</span> <span class=\"o\">+</span> <span class=\"mf\">1e-8</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u88c1\u526a\u9632\u6b62\u6743\u91cd\u7206\u70b8</span>\n            <span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">weights</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">10.0</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">weights</span>\n</code></pre></div>\n\n<h3 id=\"664\">6.6.4 \u6df7\u5408\u7b56\u7565\uff1a\u534a\u5728\u7ebf\u5b66\u4e60</h3>\n<p>\u7ed3\u5408\u4e24\u8005\u4f18\u52bf\u7684\u5b9e\u7528\u65b9\u6848\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">SemiOnlineRL</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">offline_data</span><span class=\"p\">,</span> <span class=\"n\">online_ratio</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offline_data</span> <span class=\"o\">=</span> <span class=\"n\">offline_data</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span> <span class=\"o\">=</span> <span class=\"n\">online_ratio</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_buffer</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">train_step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompts</span><span class=\"p\">):</span>\n        <span class=\"n\">batch_size</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">prompts</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 1. \u79bb\u7ebf\u6570\u636e\u91c7\u6837</span>\n        <span class=\"n\">offline_size</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">batch_size</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span><span class=\"p\">))</span>\n        <span class=\"n\">offline_batch</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sample_offline</span><span class=\"p\">(</span><span class=\"n\">offline_size</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. \u5728\u7ebf\u6570\u636e\u751f\u6210\uff08\u5c11\u91cf\uff09</span>\n        <span class=\"n\">online_size</span> <span class=\"o\">=</span> <span class=\"n\">batch_size</span> <span class=\"o\">-</span> <span class=\"n\">offline_size</span>\n        <span class=\"n\">online_batch</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generate_online</span><span class=\"p\">(</span>\n            <span class=\"n\">prompts</span><span class=\"p\">[:</span><span class=\"n\">online_size</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u6df7\u5408\u8bad\u7ec3</span>\n        <span class=\"n\">combined_batch</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">combine_batches</span><span class=\"p\">(</span>\n            <span class=\"n\">offline_batch</span><span class=\"p\">,</span> \n            <span class=\"n\">online_batch</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># 4. \u52a0\u6743\u66f4\u65b0</span>\n        <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weighted_loss</span><span class=\"p\">(</span><span class=\"n\">combined_batch</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">weighted_loss</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u5bf9\u5728\u7ebf\u548c\u79bb\u7ebf\u6570\u636e\u4f7f\u7528\u4e0d\u540c\u6743\u91cd</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">losses</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">batch</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">item</span><span class=\"p\">[</span><span class=\"s1\">&#39;source&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;online&#39;</span><span class=\"p\">:</span>\n                <span class=\"c1\"># \u5728\u7ebf\u6570\u636e\u6743\u91cd\u66f4\u9ad8\uff08\u66f4\u53ef\u4fe1\uff09</span>\n                <span class=\"n\">weight</span> <span class=\"o\">=</span> <span class=\"mf\">1.5</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"c1\"># \u79bb\u7ebf\u6570\u636e\u6743\u91cd\u8f83\u4f4e</span>\n                <span class=\"n\">weight</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n\n            <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute_loss</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">weight</span>\n            <span class=\"n\">losses</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">(</span><span class=\"n\">losses</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<h3 id=\"665\">6.6.5 \u5b9e\u7528\u51b3\u7b56\u6846\u67b6</h3>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">choose_rl_strategy</span><span class=\"p\">(</span><span class=\"n\">constraints</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    \u6839\u636e\u5b9e\u9645\u7ea6\u675f\u9009\u62e9RL\u7b56\u7565</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">constraints</span><span class=\"p\">[</span><span class=\"s1\">&#39;safety_critical&#39;</span><span class=\"p\">]:</span>\n        <span class=\"c1\"># \u5b89\u5168\u8981\u6c42\u9ad8\uff0c\u4f7f\u7528\u7eaf\u79bb\u7ebf</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;offline&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u5b89\u5168\u7b2c\u4e00\uff0c\u907f\u514d\u672a\u77e5\u98ce\u9669&quot;</span>\n\n    <span class=\"k\">elif</span> <span class=\"n\">constraints</span><span class=\"p\">[</span><span class=\"s1\">&#39;compute_budget&#39;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span><span class=\"p\">:</span>  <span class=\"c1\"># GPU\u5c0f\u65f6</span>\n        <span class=\"c1\"># \u8ba1\u7b97\u9884\u7b97\u6709\u9650\uff0c\u4f7f\u7528\u79bb\u7ebf</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;offline&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u8ba1\u7b97\u8d44\u6e90\u53d7\u9650&quot;</span>\n\n    <span class=\"k\">elif</span> <span class=\"n\">constraints</span><span class=\"p\">[</span><span class=\"s1\">&#39;data_quality&#39;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.7</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u6570\u636e\u8d28\u91cf\u5dee\uff0c\u9700\u8981\u5728\u7ebf\u63a2\u7d22</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;online&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u6570\u636e\u8d28\u91cf\u4e0d\u8db3\uff0c\u9700\u8981\u4e3b\u52a8\u6539\u8fdb&quot;</span>\n\n    <span class=\"k\">elif</span> <span class=\"n\">constraints</span><span class=\"p\">[</span><span class=\"s1\">&#39;deployment_type&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;production&#39;</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u751f\u4ea7\u73af\u5883\uff0c\u4f7f\u7528\u534a\u5728\u7ebf</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;semi_online&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u5e73\u8861\u5b89\u5168\u6027\u548c\u6027\u80fd&quot;</span>\n\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u7814\u7a76\u73af\u5883\uff0c\u4f7f\u7528\u5728\u7ebf</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;online&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u8ffd\u6c42\u6700\u4f73\u6027\u80fd&quot;</span>\n</code></pre></div>\n\n<h3 id=\"666\">6.6.6 \u5206\u5e03\u504f\u79fb\u7684\u7f13\u89e3\u6280\u672f</h3>\n<p><strong>\u6280\u672f1\uff1a\u4fdd\u5b88\u6b63\u5219\u5316</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">conservative_regularization</span><span class=\"p\">(</span><span class=\"n\">policy</span><span class=\"p\">,</span> <span class=\"n\">ref_policy</span><span class=\"p\">,</span> <span class=\"n\">responses</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    CQL-style\u4fdd\u5b88\u6b63\u5219\u5316\uff0c\u9632\u6b62\u79bb\u7ebfRL\u8fc7\u5ea6\u4e50\u89c2</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># \u8ba1\u7b97OOD\uff08out-of-distribution\uff09\u52a8\u4f5c\u7684Q\u503c</span>\n    <span class=\"n\">ood_responses</span> <span class=\"o\">=</span> <span class=\"n\">policy</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"mf\">1.5</span><span class=\"p\">)</span>  <span class=\"c1\"># \u9ad8\u6e29\u91c7\u6837OOD</span>\n    <span class=\"n\">ood_q_values</span> <span class=\"o\">=</span> <span class=\"n\">policy</span><span class=\"o\">.</span><span class=\"n\">q_function</span><span class=\"p\">(</span><span class=\"n\">ood_responses</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u60e9\u7f5aOOD\u52a8\u4f5c\u7684\u9ad8Q\u503c</span>\n    <span class=\"n\">conservative_loss</span> <span class=\"o\">=</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">ood_q_values</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">conservative_loss</span>\n</code></pre></div>\n\n<p><strong>\u6280\u672f2\uff1a\u5206\u5e03\u611f\u77e5\u91c7\u6837</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">DistributionAwareSampler</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">offline_data</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offline_data</span> <span class=\"o\">=</span> <span class=\"n\">offline_data</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n\n        <span class=\"c1\"># \u9884\u8ba1\u7b97\u6570\u636e\u5206\u5e03\u7279\u5f81</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data_embeddings</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute_embeddings</span><span class=\"p\">(</span><span class=\"n\">offline_data</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">distribution_stats</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute_stats</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data_embeddings</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">sample_in_distribution</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n_samples</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        \u4f18\u5148\u91c7\u6837\u5206\u5e03\u5185\u7684\u6570\u636e</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">candidates</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_samples</span> <span class=\"o\">*</span> <span class=\"mi\">5</span><span class=\"p\">):</span>  <span class=\"c1\"># \u8fc7\u91c7\u6837</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span>\n            <span class=\"n\">embedding</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_embedding</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u8ba1\u7b97\u4e0e\u8bad\u7ec3\u5206\u5e03\u7684\u8ddd\u79bb</span>\n            <span class=\"n\">distance</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute_distance</span><span class=\"p\">(</span>\n                <span class=\"n\">embedding</span><span class=\"p\">,</span> \n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">distribution_stats</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">candidates</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">distance</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># \u9009\u62e9\u6700\u63a5\u8fd1\u8bad\u7ec3\u5206\u5e03\u7684\u6837\u672c</span>\n        <span class=\"n\">candidates</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">candidates</span><span class=\"p\">[:</span><span class=\"n\">n_samples</span><span class=\"p\">]]</span>\n</code></pre></div>\n\n<h2 id=\"_2\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u4e86\u57fa\u4e8e\u4eba\u7c7b\u53cd\u9988\u7684\u5f3a\u5316\u5b66\u4e60\uff08RLHF\uff09\u53ca\u5176\u53d8\u4f53\u5728\u5927\u8bed\u8a00\u6a21\u578b\u540e\u8bad\u7ec3\u4e2d\u7684\u5e94\u7528\u3002\u6211\u4eec\u5b66\u4e60\u4e86\uff1a</p>\n<h3 id=\"_3\">\u6838\u5fc3\u6982\u5ff5\u56de\u987e</h3>\n<ol>\n<li>\n<p><strong>RLHF\u7684\u4e09\u5927\u652f\u67f1</strong>\uff1a\n   - \u5956\u52b1\u6a21\u578b\uff1a\u5c06\u4eba\u7c7b\u504f\u597d\u8f6c\u5316\u4e3a\u53ef\u4f18\u5316\u7684\u6807\u91cf\u4fe1\u53f7\n   - \u7b56\u7565\u4f18\u5316\uff1a\u901a\u8fc7PPO\u7b49\u7b97\u6cd5\u6700\u5927\u5316\u671f\u671b\u5956\u52b1\n   - KL\u7ea6\u675f\uff1a\u9632\u6b62\u6a21\u578b\u504f\u79bb\u521d\u59cb\u5206\u5e03\u8fc7\u8fdc</p>\n</li>\n<li>\n<p><strong>\u5173\u952e\u7b97\u6cd5\u5bf9\u6bd4</strong>\uff1a\n   - <strong>PPO</strong>\uff1a\u7a33\u5b9a\u4f46\u8ba1\u7b97\u5bc6\u96c6\uff0c\u9700\u8981\u663e\u5f0f\u5956\u52b1\u6a21\u578b\n   - <strong>DPO</strong>\uff1a\u76f4\u63a5\u4f18\u5316\uff0c\u8bad\u7ec3\u9ad8\u6548\u4f46\u53ef\u80fd\u8fc7\u62df\u5408\n   - <strong>IPO</strong>\uff1a\u66f4\u9c81\u68d2\u4f46\u6536\u655b\u8f83\u6162\n   - <strong>Constitutional AI</strong>\uff1a\u81ea\u6211\u6539\u8fdb\uff0c\u51cf\u5c11\u4eba\u5de5\u6807\u6ce8</p>\n</li>\n<li>\n<p><strong>\u5b9e\u7528\u6743\u8861</strong>\uff1a\n   - \u5728\u7ebfRL\uff1a\u63a2\u7d22\u80fd\u529b\u5f3a\u4f46\u6210\u672c\u9ad8\n   - \u79bb\u7ebfRL\uff1a\u5b89\u5168\u9ad8\u6548\u4f46\u53d7\u9650\u4e8e\u6570\u636e\u8d28\u91cf\n   - \u6df7\u5408\u7b56\u7565\uff1a\u5e73\u8861\u63a2\u7d22\u4e0e\u5b89\u5168\u6027</p>\n</li>\n</ol>\n<h3 id=\"_4\">\u5173\u952e\u516c\u5f0f\u6c47\u603b</h3>\n<p><strong>Bradley-Terry\u504f\u597d\u6a21\u578b</strong>\uff1a\n$$P(A \\succ B) = \\sigma(r(A) - r(B))$$\n<strong>PPO\u76ee\u6807\u51fd\u6570</strong>\uff1a\n$$\\mathcal{L}_{PPO} = \\min(r_t(\\theta)\\hat{A}_t, \\text{clip}(r_t(\\theta), 1-\\epsilon, 1+\\epsilon)\\hat{A}_t)$$\n<strong>DPO\u635f\u5931\u51fd\u6570</strong>\uff1a\n$$\\mathcal{L}_{DPO} = -\\log\\sigma\\left(\\beta\\log\\frac{\\pi_\\theta(y_w|x)}{\\pi_{ref}(y_w|x)} - \\beta\\log\\frac{\\pi_\\theta(y_l|x)}{\\pi_{ref}(y_l|x)}\\right)$$</p>\n<h3 id=\"_5\">\u5b9e\u8df5\u8981\u70b9</h3>\n<ol>\n<li><strong>\u5956\u52b1\u6a21\u578b\u8bad\u7ec3</strong>\uff1a\u4f7f\u7528\u96c6\u6210\u548c\u6821\u51c6\u6280\u672f\u63d0\u9ad8\u9c81\u68d2\u6027</li>\n<li><strong>PPO\u8c03\u4f18</strong>\uff1a\u76d1\u63a7KL\u6563\u5ea6\u548c\u88c1\u526a\u6bd4\u4f8b\uff0c\u91c7\u7528\u6e10\u8fdb\u5f0f\u8bad\u7ec3</li>\n<li><strong>DPO/IPO\u9009\u62e9</strong>\uff1a\u6839\u636e\u6570\u636e\u8d28\u91cf\u548c\u6807\u6ce8\u4e00\u81f4\u6027\u9009\u62e9</li>\n<li><strong>\u5728\u7ebf/\u79bb\u7ebf\u51b3\u7b56</strong>\uff1a\u57fa\u4e8e\u5b89\u5168\u9700\u6c42\u548c\u8ba1\u7b97\u9884\u7b97\u6743\u8861</li>\n</ol>\n<h2 id=\"_6\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_7\">\u57fa\u7840\u9898\uff08\u7406\u89e3\u6982\u5ff5\uff09</h3>\n<p><strong>\u7ec3\u4e606.1\uff1a\u5956\u52b1\u6a21\u578b\u8bbe\u8ba1</strong>\n\u8bbe\u8ba1\u4e00\u4e2a\u5956\u52b1\u6a21\u578b\u67b6\u6784\uff0c\u7528\u4e8e\u8bc4\u4f30\u4ee3\u7801\u751f\u6210\u4efb\u52a1\u7684\u8d28\u91cf\u3002\u8003\u8651\u5982\u4f55\u5904\u7406\u8bed\u6cd5\u6b63\u786e\u6027\u3001\u529f\u80fd\u5b8c\u6574\u6027\u548c\u4ee3\u7801\u98ce\u683c\u7b49\u591a\u4e2a\u7ef4\u5ea6\u3002</p>\n<details>\n<summary>\u63d0\u793a\uff08Hint\uff09</summary>\n<p>\u8003\u8651\u591a\u5934\u67b6\u6784\uff0c\u6bcf\u4e2a\u5934\u8d1f\u8d23\u4e00\u4e2a\u8d28\u91cf\u7ef4\u5ea6\uff0c\u6700\u7ec8\u52a0\u6743\u7ec4\u5408\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u5956\u52b1\u6a21\u578b\u5e94\u5305\u542b\uff1a</p>\n<ol>\n<li>\u8bed\u6cd5\u68c0\u67e5\u5934\uff1a\u4f7f\u7528AST\u89e3\u6790\u9a8c\u8bc1\u8bed\u6cd5\u6b63\u786e\u6027\uff08\u4e8c\u503c\u8f93\u51fa\uff09</li>\n<li>\u529f\u80fd\u8bc4\u4f30\u5934\uff1a\u901a\u8fc7\u6d4b\u8bd5\u7528\u4f8b\u6267\u884c\u8bc4\u4f30\u529f\u80fd\u5b8c\u6574\u6027\uff080-1\u8fde\u7eed\u503c\uff09</li>\n<li>\u98ce\u683c\u8bc4\u5206\u5934\uff1a\u57fa\u4e8e\u4ee3\u7801\u89c4\u8303\u68c0\u67e5\u5de5\u5177\u7684\u8f93\u51fa\uff080-1\u8fde\u7eed\u503c\uff09</li>\n<li>\u6548\u7387\u8bc4\u4f30\u5934\uff1a\u5206\u6790\u65f6\u95f4/\u7a7a\u95f4\u590d\u6742\u5ea6\uff08\u53ef\u9009\uff09</li>\n</ol>\n<p>\u6700\u7ec8\u5956\u52b1 = w1\u00d7\u8bed\u6cd5 + w2\u00d7\u529f\u80fd + w3\u00d7\u98ce\u683c + w4\u00d7\u6548\u7387</p>\n<p>\u5176\u4e2d\u6743\u91cd\u53ef\u4ee5\u6839\u636e\u4efb\u52a1\u9700\u6c42\u8c03\u6574\uff0c\u5982\u751f\u4ea7\u4ee3\u7801\u66f4\u91cd\u89c6\u529f\u80fd\u548c\u8bed\u6cd5\uff0c\u6559\u5b66\u4ee3\u7801\u66f4\u91cd\u89c6\u98ce\u683c\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e606.2\uff1aKL\u6563\u5ea6\u8ba1\u7b97</strong>\n\u7ed9\u5b9a\u53c2\u8003\u5206\u5e03 $p_{ref} = [0.1, 0.2, 0.3, 0.4]$ \u548c\u5f53\u524d\u5206\u5e03 $p_{\\theta} = [0.15, 0.25, 0.35, 0.25]$\uff0c\u8ba1\u7b97KL\u6563\u5ea6 $D_{KL}(p_{\\theta} || p_{ref})$\u3002</p>\n<details>\n<summary>\u63d0\u793a\uff08Hint\uff09</summary>\n<p>\u4f7f\u7528\u516c\u5f0f\uff1a$D_{KL}(p||q) = \\sum_i p_i \\log(p_i/q_i)$</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>$D_{KL}(p_{\\theta} || p_{ref}) = \\sum_i p_{\\theta,i} \\log(p_{\\theta,i}/p_{ref,i})$</p>\n<p>= 0.15\u00d7log(0.15/0.1) + 0.25\u00d7log(0.25/0.2) + 0.35\u00d7log(0.35/0.3) + 0.25\u00d7log(0.25/0.4)\n= 0.15\u00d70.405 + 0.25\u00d70.223 + 0.35\u00d70.155 + 0.25\u00d7(-0.470)\n= 0.061 + 0.056 + 0.054 - 0.118\n= 0.053</p>\n<p>KL\u6563\u5ea6\u7ea6\u4e3a0.053\uff0c\u8868\u793a\u4e24\u4e2a\u5206\u5e03\u76f8\u5bf9\u63a5\u8fd1\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e606.3\uff1aDPO vs PPO\u573a\u666f\u9009\u62e9</strong>\n\u5217\u4e3e\u4e09\u4e2a\u9002\u5408\u4f7f\u7528DPO\u800c\u975ePPO\u7684\u5177\u4f53\u573a\u666f\uff0c\u5e76\u8bf4\u660e\u539f\u56e0\u3002</p>\n<details>\n<summary>\u63d0\u793a\uff08Hint\uff09</summary>\n<p>\u8003\u8651\u8ba1\u7b97\u8d44\u6e90\u3001\u6570\u636e\u53ef\u7528\u6027\u548c\u8bad\u7ec3\u7a33\u5b9a\u6027\u7b49\u56e0\u7d20\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<ol>\n<li>\n<p><strong>\u5b66\u672f\u7814\u7a76\u73af\u5883</strong>\uff1a\u8ba1\u7b97\u8d44\u6e90\u6709\u9650\uff0cDPO\u4e0d\u9700\u8981\u8bad\u7ec3\u72ec\u7acb\u7684\u5956\u52b1\u6a21\u578b\uff0c\u8282\u7701GPU\u5185\u5b58\u548c\u8bad\u7ec3\u65f6\u95f4\u3002</p>\n</li>\n<li>\n<p><strong>\u9ad8\u8d28\u91cf\u504f\u597d\u6570\u636e\u5145\u8db3</strong>\uff1a\u5df2\u6709\u5927\u91cf\u4eba\u5de5\u6807\u6ce8\u7684\u504f\u597d\u5bf9\uff0c\u4e14\u6807\u6ce8\u4e00\u81f4\u6027\u9ad8\uff08&gt;85%\uff09\uff0cDPO\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u8fd9\u4e9b\u6570\u636e\u3002</p>\n</li>\n<li>\n<p><strong>\u5feb\u901f\u539f\u578b\u9a8c\u8bc1</strong>\uff1a\u9700\u8981\u5feb\u901f\u9a8c\u8bc1\u5bf9\u9f50\u65b9\u6cd5\u7684\u6548\u679c\uff0cDPO\u5b9e\u73b0\u7b80\u5355\uff0c\u6536\u655b\u5feb\uff0c\u9002\u5408\u5feb\u901f\u8fed\u4ee3\u3002</p>\n</li>\n</ol>\n<p>\u4e0d\u9002\u5408DPO\u7684\u573a\u666f\uff1a\u6807\u6ce8\u566a\u58f0\u5927\u3001\u9700\u8981\u5728\u7ebf\u63a2\u7d22\u3001\u5b89\u5168\u6027\u8981\u6c42\u6781\u9ad8\u7684\u573a\u666f\u3002</p>\n</details>\n<h3 id=\"_8\">\u6311\u6218\u9898\uff08\u6df1\u5165\u601d\u8003\uff09</h3>\n<p><strong>\u7ec3\u4e606.4\uff1a\u5956\u52b1\u8fc7\u62df\u5408\u68c0\u6d4b</strong>\n\u8bbe\u8ba1\u4e00\u4e2a\u65b9\u6cd5\u6765\u81ea\u52a8\u68c0\u6d4bRLHF\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u5956\u52b1\u8fc7\u62df\u5408\uff08reward hacking\uff09\u73b0\u8c61\u3002</p>\n<details>\n<summary>\u63d0\u793a\uff08Hint\uff09</summary>\n<p>\u8003\u8651\u76d1\u63a7\u591a\u4e2a\u6307\u6807\u7684\u76f8\u5173\u6027\u53d8\u5316\uff0c\u5982\u5956\u52b1\u503c\u4e0e\u4eba\u7c7b\u8bc4\u4f30\u7684\u76f8\u5173\u6027\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u5956\u52b1\u8fc7\u62df\u5408\u68c0\u6d4b\u7cfb\u7edf\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6307\u6807\u76d1\u63a7</strong>\uff1a\n   - \u5956\u52b1\u503c\u8d8b\u52bf\uff1a\u5982\u679c\u5956\u52b1\u6301\u7eed\u4e0a\u5347\u4f46\u9a8c\u8bc1\u96c6\u6027\u80fd\u4e0b\u964d\n   - \u54cd\u5e94\u957f\u5ea6\u5206\u5e03\uff1a\u7a81\u7136\u53d8\u957f\u53ef\u80fd\u8868\u793a\u5728\u5229\u7528\u957f\u5ea6\u504f\u597d\n   - \u8bcd\u6c47\u591a\u6837\u6027\uff1a\u4e0b\u964d\u8868\u793a\u6a21\u578b\u5728\u91cd\u590d\u7279\u5b9a\u6a21\u5f0f</p>\n</li>\n<li>\n<p><strong>\u5bf9\u6297\u6d4b\u8bd5</strong>\uff1a\n   - \u5b9a\u671f\u751f\u6210\u5bf9\u6297\u6837\u672c\uff0c\u68c0\u67e5\u5956\u52b1\u6a21\u578b\u662f\u5426\u7ed9\u4e88\u4e0d\u5408\u7406\u9ad8\u5206\n   - \u4f7f\u7528\u7b80\u5355\u7684\u91cd\u590d\u6a21\u5f0f\u6d4b\u8bd5\uff0c\u5982\"\u975e\u5e38\u597d\u975e\u5e38\u597d...\"</p>\n</li>\n<li>\n<p><strong>\u4eba\u7c7b\u8bc4\u4f30\u5bf9\u6bd4</strong>\uff1a\n   - \u5b9a\u671f\u62bd\u6837\u8fdb\u884c\u4eba\u7c7b\u8bc4\u4f30\n   - \u8ba1\u7b97\u5956\u52b1\u503c\u4e0e\u4eba\u7c7b\u8bc4\u5206\u7684Spearman\u76f8\u5173\u7cfb\u6570\n   - \u76f8\u5173\u6027\u4e0b\u964d\u662f\u8fc7\u62df\u5408\u7684\u5f3a\u4fe1\u53f7</p>\n</li>\n<li>\n<p><strong>\u81ea\u52a8\u5316\u68c0\u6d4b\u89c4\u5219</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">reward_increase</span> <span class=\"o\">&gt;</span> <span class=\"mi\">50</span><span class=\"o\">%</span> <span class=\"ow\">and</span> \n    <span class=\"n\">human_eval_correlation</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.5</span> <span class=\"ow\">and</span>\n    <span class=\"n\">response_length_std</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">initial_std</span><span class=\"p\">):</span>\n    <span class=\"n\">trigger_alert</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u53ef\u80fd\u7684\u5956\u52b1\u8fc7\u62df\u5408&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n</details>\n<p><strong>\u7ec3\u4e606.5\uff1aConstitutional AI\u539f\u5219\u8bbe\u8ba1</strong>\n\u4e3a\u4e00\u4e2a\u533b\u7597\u54a8\u8be2AI\u52a9\u624b\u8bbe\u8ba1\u4e00\u5957\u5baa\u6cd5\u539f\u5219\u5c42\u6b21\u7ed3\u6784\uff0c\u786e\u4fdd\u5b89\u5168\u6027\u3001\u51c6\u786e\u6027\u548c\u6709\u7528\u6027\u7684\u5e73\u8861\u3002</p>\n<details>\n<summary>\u63d0\u793a\uff08Hint\uff09</summary>\n<p>\u8003\u8651\u533b\u7597\u9886\u57df\u7684\u7279\u6b8a\u6027\uff1a\u9519\u8bef\u4fe1\u606f\u7684\u4e25\u91cd\u540e\u679c\u3001\u6cd5\u5f8b\u8d23\u4efb\u3001\u60a3\u8005\u9690\u79c1\u7b49\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u533b\u7597AI\u5baa\u6cd5\u539f\u5219\u5c42\u6b21\uff1a</p>\n<p><strong>\u7b2c\u4e00\u5c42\uff1a\u5b89\u5168\u6027\uff08\u4e0d\u53ef\u8fdd\u53cd\uff09</strong></p>\n<ol>\n<li>\u7edd\u4e0d\u66ff\u4ee3\u4e13\u4e1a\u533b\u7597\u8bca\u65ad</li>\n<li>\u5371\u6025\u60c5\u51b5\u5fc5\u987b\u5efa\u8bae\u7acb\u5373\u5c31\u533b</li>\n<li>\u4e0d\u63a8\u8350\u672a\u7ecf\u9a8c\u8bc1\u7684\u6cbb\u7597\u65b9\u6cd5</li>\n<li>\u4e25\u683c\u4fdd\u62a4\u60a3\u8005\u9690\u79c1\u4fe1\u606f</li>\n</ol>\n<p><strong>\u7b2c\u4e8c\u5c42\uff1a\u51c6\u786e\u6027\uff08\u5f3a\u7ea6\u675f\uff09</strong></p>\n<ol>\n<li>\u5f15\u7528\u4fe1\u606f\u5fc5\u987b\u6765\u81ea\u53ef\u9760\u533b\u5b66\u6765\u6e90</li>\n<li>\u660e\u786e\u533a\u5206\u5e38\u89c1\u60c5\u51b5\u548c\u9700\u8981\u4e13\u4e1a\u8bc4\u4f30\u7684\u60c5\u51b5</li>\n<li>\u627f\u8ba4\u533b\u5b66\u4e0d\u786e\u5b9a\u6027\uff0c\u907f\u514d\u7edd\u5bf9\u5316\u8868\u8ff0</li>\n<li>\u7ea0\u6b63\u660e\u663e\u7684\u533b\u5b66\u8bef\u89e3</li>\n</ol>\n<p><strong>\u7b2c\u4e09\u5c42\uff1a\u6709\u7528\u6027\uff08\u8f6f\u7ea6\u675f\uff09</strong></p>\n<ol>\n<li>\u63d0\u4f9b\u6613\u61c2\u7684\u533b\u5b66\u77e5\u8bc6\u89e3\u91ca</li>\n<li>\u7ed9\u51fa\u5408\u7406\u7684\u5065\u5eb7\u751f\u6d3b\u5efa\u8bae</li>\n<li>\u5e2e\u52a9\u51c6\u5907\u5c31\u533b\u95ee\u9898\u6e05\u5355</li>\n<li>\u63d0\u4f9b\u60c5\u7eea\u652f\u6301\u548c\u5b89\u6170</li>\n</ol>\n<p><strong>\u5b9e\u65bd\u7b56\u7565</strong>\uff1a</p>\n<ul>\n<li>\u7b2c\u4e00\u5c42\u8fdd\u53cd \u2192 \u7acb\u5373\u62d2\u7edd\u8f93\u51fa</li>\n<li>\u7b2c\u4e8c\u5c42\u8fdd\u53cd \u2192 \u5f3a\u5236\u4fee\u6539\u76f4\u5230\u6ee1\u8db3</li>\n<li>\u7b2c\u4e09\u5c42\u8fdd\u53cd \u2192 \u5c1d\u8bd5\u6539\u8fdb\u4f46\u53ef\u63a5\u53d7</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e606.6\uff1a\u5728\u7ebf\u79bb\u7ebfRL\u6df7\u5408\u7b56\u7565</strong>\n\u8bbe\u8ba1\u4e00\u4e2a\u81ea\u9002\u5e94\u7684\u5728\u7ebf/\u79bb\u7ebfRL\u6df7\u5408\u8bad\u7ec3\u7b56\u7565\uff0c\u80fd\u591f\u6839\u636e\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u8868\u73b0\u52a8\u6001\u8c03\u6574\u5728\u7ebf\u6570\u636e\u7684\u6bd4\u4f8b\u3002</p>\n<details>\n<summary>\u63d0\u793a\uff08Hint\uff09</summary>\n<p>\u8003\u8651\u4f7f\u7528\u9a8c\u8bc1\u96c6\u6027\u80fd\u3001KL\u6563\u5ea6\u3001\u8ba1\u7b97\u6210\u672c\u7b49\u4fe1\u53f7\u6765\u8c03\u6574\u6df7\u5408\u6bd4\u4f8b\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u81ea\u9002\u5e94\u6df7\u5408\u7b56\u7565\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">AdaptiveMixedRL</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>  <span class=\"c1\"># \u521d\u59cb10%\u5728\u7ebf</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">performance_history</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">adjust_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 1. \u6027\u80fd\u6539\u8fdb\u7387</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">performance_history</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"n\">recent_improvement</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diff</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">performance_history</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">:]))</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">recent_improvement</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.001</span><span class=\"p\">:</span>  <span class=\"c1\"># \u6027\u80fd\u505c\u6ede</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span> <span class=\"o\">*</span> <span class=\"mf\">1.5</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 2. KL\u6563\u5ea6\u76d1\u63a7</span>\n        <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;kl_divergence&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.1</span><span class=\"p\">:</span>  <span class=\"c1\"># KL\u8fc7\u5927</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span> <span class=\"o\">*</span> <span class=\"mf\">0.8</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u8ba1\u7b97\u9884\u7b97\u7ea6\u675f</span>\n        <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;compute_usage&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.8</span><span class=\"p\">:</span>  <span class=\"c1\"># \u63a5\u8fd1\u9884\u7b97\u4e0a\u9650</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span> <span class=\"o\">-</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 4. \u6570\u636e\u5206\u5e03\u5339\u914d\u5ea6</span>\n        <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;distribution_shift&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.3</span><span class=\"p\">:</span>  <span class=\"c1\"># \u5206\u5e03\u504f\u79fb\u4e25\u91cd</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span> <span class=\"o\">+</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">online_ratio</span>\n</code></pre></div>\n\n<p><strong>\u52a8\u6001\u8c03\u6574\u89c4\u5219</strong>\uff1a</p>\n<ol>\n<li>\u521d\u59cb\u9636\u6bb5\uff08\u524d1000\u6b65\uff09\uff1a\u7eaf\u79bb\u7ebf\uff0c\u5efa\u7acb\u57fa\u7ebf</li>\n<li>\u63a2\u7d22\u9636\u6bb5\uff081000-5000\u6b65\uff09\uff1a\u9010\u6b65\u589e\u52a0\u5728\u7ebf\u6bd4\u4f8b</li>\n<li>\u7a33\u5b9a\u9636\u6bb5\uff085000+\u6b65\uff09\uff1a\u6839\u636e\u6027\u80fd\u81ea\u9002\u5e94\u8c03\u6574</li>\n<li>\u5f02\u5e38\u5904\u7406\uff1a\u68c0\u6d4b\u5230\u8bad\u7ec3\u4e0d\u7a33\u5b9a\u65f6\u5feb\u901f\u964d\u4f4e\u5728\u7ebf\u6bd4\u4f8b</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e606.7\uff1a\u591a\u76ee\u6807RLHF\u4f18\u5316</strong>\n\u8bbe\u8ba1\u4e00\u4e2a\u65b9\u6cd5\u6765\u540c\u65f6\u4f18\u5316\u591a\u4e2a\u53ef\u80fd\u51b2\u7a81\u7684\u76ee\u6807\uff08\u5982\u6709\u7528\u6027\u3001\u5b89\u5168\u6027\u3001\u521b\u9020\u6027\uff09\uff0c\u5e76\u5904\u7406\u5b83\u4eec\u4e4b\u95f4\u7684\u6743\u8861\u3002</p>\n<details>\n<summary>\u63d0\u793a\uff08Hint\uff09</summary>\n<p>\u8003\u8651Pareto\u4f18\u5316\u3001\u591a\u5956\u52b1\u6a21\u578b\u3001\u6761\u4ef6\u8bad\u7ec3\u7b49\u65b9\u6cd5\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u591a\u76ee\u6807RLHF\u6846\u67b6\uff1a</p>\n<ol>\n<li><strong>\u591a\u5956\u52b1\u6a21\u578b\u67b6\u6784</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MultiObjectiveRLHF</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">objectives</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reward_models</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;helpfulness&#39;</span><span class=\"p\">:</span> <span class=\"n\">RewardModel</span><span class=\"p\">(),</span>\n            <span class=\"s1\">&#39;safety&#39;</span><span class=\"p\">:</span> <span class=\"n\">RewardModel</span><span class=\"p\">(),</span>\n            <span class=\"s1\">&#39;creativity&#39;</span><span class=\"p\">:</span> <span class=\"n\">RewardModel</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;helpfulness&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;safety&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;creativity&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2</span><span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">compute_pareto_rewards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">responses</span><span class=\"p\">):</span>\n        <span class=\"n\">rewards</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reward_models</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">rewards</span><span class=\"p\">[</span><span class=\"n\">obj</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">responses</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97Pareto\u524d\u6cbf</span>\n        <span class=\"n\">pareto_mask</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_pareto_optimal</span><span class=\"p\">(</span><span class=\"n\">rewards</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">rewards</span><span class=\"p\">,</span> <span class=\"n\">pareto_mask</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u52a8\u6001\u6743\u91cd\u8c03\u6574</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">adjust_weights_by_context</span><span class=\"p\">(</span><span class=\"n\">prompt_type</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">prompt_type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;medical&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;safety&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"s1\">&#39;helpfulness&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;creativity&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.0</span><span class=\"p\">}</span>\n    <span class=\"k\">elif</span> <span class=\"n\">prompt_type</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;creative_writing&#39;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;creativity&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"s1\">&#39;helpfulness&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;safety&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">}</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;helpfulness&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;safety&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;creativity&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.2</span><span class=\"p\">}</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u6761\u4ef6\u5956\u52b1\u51fd\u6570</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">conditional_reward</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">objectives</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">base_rewards</span> <span class=\"o\">=</span> <span class=\"n\">compute_base_rewards</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">objectives</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u786c\u7ea6\u675f\uff1a\u5b89\u5168\u6027\u4f4e\u4e8e\u9608\u503c\u65f6\u4e25\u91cd\u60e9\u7f5a</span>\n    <span class=\"k\">if</span> <span class=\"n\">base_rewards</span><span class=\"p\">[</span><span class=\"s1\">&#39;safety&#39;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.3</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"mf\">10.0</span>\n\n    <span class=\"c1\"># \u8f6f\u7ea6\u675f\uff1a\u6839\u636e\u4e0a\u4e0b\u6587\u52a0\u6743</span>\n    <span class=\"n\">weighted_reward</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span>\n        <span class=\"n\">base_rewards</span><span class=\"p\">[</span><span class=\"n\">obj</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">weight</span> \n        <span class=\"k\">for</span> <span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">weight</span> <span class=\"ow\">in</span> <span class=\"n\">context_weights</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">weighted_reward</span>\n</code></pre></div>\n\n<ol start=\"4\">\n<li><strong>\u591a\u7b56\u7565\u96c6\u6210</strong>\uff1a\n\u8bad\u7ec3\u591a\u4e2a\u4e13\u95e8\u5316\u7684\u7b56\u7565\uff0c\u63a8\u7406\u65f6\u6839\u636e\u9700\u6c42\u9009\u62e9\u6216\u63d2\u503c\u3002</li>\n</ol>\n</details>\n<h2 id=\"_9\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</h2>\n<h3 id=\"1\">1. \u5956\u52b1\u6a21\u578b\u8fc7\u62df\u5408</h3>\n<p><strong>\u9519\u8bef\u8868\u73b0</strong>\uff1a</p>\n<ul>\n<li>\u5956\u52b1\u503c\u6301\u7eed\u4e0a\u5347\u4f46\u5b9e\u9645\u8d28\u91cf\u4e0b\u964d</li>\n<li>\u6a21\u578b\u8f93\u51fa\u53d8\u5f97\u5355\u4e00\u5316\uff08\u5982\u603b\u662f\u751f\u6210\u6781\u957f\u56de\u590d\uff09</li>\n</ul>\n<p><strong>\u8c03\u8bd5\u65b9\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u68c0\u6d4b\u5956\u52b1\u8fc7\u62df\u5408</span>\n<span class=\"k\">def</span> <span class=\"nf\">detect_reward_overfitting</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">reward_model</span><span class=\"p\">,</span> <span class=\"n\">test_prompts</span><span class=\"p\">):</span>\n    <span class=\"n\">responses</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">test_prompts</span><span class=\"p\">)</span>\n    <span class=\"n\">rewards</span> <span class=\"o\">=</span> <span class=\"n\">reward_model</span><span class=\"p\">(</span><span class=\"n\">responses</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u68c0\u67e51\uff1a\u5956\u52b1\u5206\u5e03\u662f\u5426\u5f02\u5e38\u96c6\u4e2d</span>\n    <span class=\"k\">if</span> <span class=\"n\">rewards</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.1</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u8b66\u544a\uff1a\u5956\u52b1\u5206\u5e03\u8fc7\u4e8e\u96c6\u4e2d&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u68c0\u67e52\uff1a\u54cd\u5e94\u957f\u5ea6\u662f\u5426\u5f02\u5e38</span>\n    <span class=\"n\">lengths</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">responses</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">lengths</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">expected_length</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u8b66\u544a\uff1a\u54cd\u5e94\u957f\u5ea6\u5f02\u5e38&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u68c0\u67e53\uff1a\u8bcd\u6c47\u591a\u6837\u6027</span>\n    <span class=\"n\">vocab_diversity</span> <span class=\"o\">=</span> <span class=\"n\">compute_vocab_diversity</span><span class=\"p\">(</span><span class=\"n\">responses</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">vocab_diversity</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.3</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u8b66\u544a\uff1a\u8bcd\u6c47\u591a\u6837\u6027\u8fc7\u4f4e&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"2-kl\">2. KL\u6563\u5ea6\u7206\u70b8</h3>\n<p><strong>\u9519\u8bef\u8868\u73b0</strong>\uff1a</p>\n<ul>\n<li>\u8bad\u7ec3\u540e\u6a21\u578b\u884c\u4e3a\u5b8c\u5168\u6539\u53d8</li>\n<li>\u5931\u53bb\u57fa\u7840\u80fd\u529b\uff08\u5982\u8bed\u6cd5\u6b63\u786e\u6027\uff09</li>\n</ul>\n<p><strong>\u9884\u9632\u63aa\u65bd</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u81ea\u9002\u5e94KL\u7cfb\u6570</li>\n<li>\u8bbe\u7f6eKL\u6563\u5ea6\u786c\u4e0a\u9650</li>\n<li>\u5b9a\u671f\u91cd\u7f6e\u5230checkpoint</li>\n</ul>\n<h3 id=\"3-dpo\">3. DPO\u8bad\u7ec3\u4e0d\u7a33\u5b9a</h3>\n<p><strong>\u9519\u8bef\u8868\u73b0</strong>\uff1a</p>\n<ul>\n<li>\u635f\u5931\u9707\u8361\u4e0d\u6536\u655b</li>\n<li>chosen\u548crejected\u7684\u6982\u7387\u90fd\u8d8b\u5411\u4e8e0</li>\n</ul>\n<p><strong>\u89e3\u51b3\u65b9\u6848</strong>\uff1a</p>\n<ul>\n<li>\u964d\u4f4e\u5b66\u4e60\u7387\uff08\u901a\u5e385e-7\u4ee5\u4e0b\uff09</li>\n<li>\u589e\u52a0\u03b2\u53c2\u6570\uff08\u63d0\u9ad8\u6b63\u5219\u5316\uff09</li>\n<li>\u8fc7\u6ee4\u4f4e\u8d28\u91cf\u504f\u597d\u5bf9</li>\n</ul>\n<h3 id=\"4-constitutional-ai\">4. Constitutional AI\u7684\u539f\u5219\u51b2\u7a81</h3>\n<p><strong>\u9519\u8bef\u8868\u73b0</strong>\uff1a</p>\n<ul>\n<li>\u6a21\u578b\u5728\u6ee1\u8db3\u4e00\u4e2a\u539f\u5219\u65f6\u8fdd\u53cd\u53e6\u4e00\u4e2a</li>\n<li>\u8f93\u51fa\u53d8\u5f97\u8fc7\u4e8e\u4fdd\u5b88\u6216\u6a21\u7cca</li>\n</ul>\n<p><strong>\u5904\u7406\u65b9\u6cd5</strong>\uff1a</p>\n<ul>\n<li>\u5efa\u7acb\u6e05\u6670\u7684\u539f\u5219\u4f18\u5148\u7ea7</li>\n<li>\u4f7f\u7528\u5206\u5c42\u539f\u5219\u7ed3\u6784</li>\n<li>\u5b9a\u671f\u5ba1\u67e5\u548c\u8c03\u6574\u539f\u5219</li>\n</ul>\n<h3 id=\"5-rl\">5. \u5728\u7ebfRL\u7684\u8ba1\u7b97\u7206\u70b8</h3>\n<p><strong>\u9519\u8bef\u8868\u73b0</strong>\uff1a</p>\n<ul>\n<li>\u8bad\u7ec3\u65f6\u95f4\u6307\u6570\u589e\u957f</li>\n<li>GPU\u5185\u5b58\u6ea2\u51fa</li>\n</ul>\n<p><strong>\u4f18\u5316\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u7ecf\u9a8c\u56de\u653e\u7f13\u51b2\u533a</li>\n<li>\u6279\u91cf\u751f\u6210\u548c\u8bc4\u4f30</li>\n<li>\u5b9e\u65bd\u65e9\u505c\u673a\u5236</li>\n</ul>\n<p>\ud83d\udca1 <strong>\u6700\u4f73\u5b9e\u8df5\u5efa\u8bae</strong>\uff1a</p>\n<ol>\n<li>\u59cb\u7ec8\u4fdd\u7559SFT\u68c0\u67e5\u70b9\u4f5c\u4e3a\u56de\u9000\u65b9\u6848</li>\n<li>\u4f7f\u7528\u591a\u4e2a\u72ec\u7acb\u7684\u8bc4\u4f30\u6307\u6807</li>\n<li>\u5b9a\u671f\u8fdb\u884c\u4eba\u5de5\u8bc4\u4f30\u9a8c\u8bc1</li>\n<li>\u8bb0\u5f55\u8be6\u7ec6\u7684\u5b9e\u9a8c\u65e5\u5fd7\u4fbf\u4e8e\u8c03\u8bd5</li>\n<li>\u4ece\u5c0f\u89c4\u6a21\u5b9e\u9a8c\u5f00\u59cb\u9010\u6b65\u6269\u5927</li>\n</ol>"
  },
  "chapter2.md": {
    "hash": "ab10a69f75b887f0a644298cca238a25",
    "content": "<h1 id=\"_1\">\u7b2c\u4e8c\u7ae0\uff1a\u5b9e\u9a8c\u4ee3\u7801\u57fa\u7840\u8bbe\u65bd</h1>\n<p>\u6784\u5efa\u53ef\u7ef4\u62a4\u3001\u53ef\u6269\u5c55\u7684\u5b9e\u9a8c\u4ee3\u7801\u67b6\u6784\u662f\u6210\u529f\u8fdb\u884c LLM \u540e\u8bad\u7ec3\u7684\u57fa\u77f3\u3002\u672c\u7ae0\u5c06\u6df1\u5165\u63a2\u8ba8\u5982\u4f55\u8bbe\u8ba1\u548c\u5b9e\u73b0\u4e00\u4e2a\u5065\u58ee\u7684\u5b9e\u9a8c\u57fa\u7840\u8bbe\u65bd\uff0c\u6db5\u76d6\u914d\u7f6e\u7ba1\u7406\u3001\u7248\u672c\u63a7\u5236\u3001\u5b9e\u9a8c\u8ffd\u8e2a\u7b49\u5173\u952e\u7ec4\u4ef6\u3002\u6211\u4eec\u5c06\u91cd\u70b9\u89e3\u51b3\u5b9e\u9645\u5de5\u7a0b\u4e2d\u7684\u6311\u6218\uff1a\u5982\u4f55\u5728\u5feb\u901f\u8fed\u4ee3\u7684\u540c\u65f6\u4fdd\u6301\u4ee3\u7801\u8d28\u91cf\uff0c\u5982\u4f55\u7ba1\u7406\u6570\u767e\u4e2a\u5b9e\u9a8c\u7684\u914d\u7f6e\u548c\u7ed3\u679c\uff0c\u4ee5\u53ca\u5982\u4f55\u9632\u6b62\u6280\u672f\u503a\u52a1\u7684\u7d2f\u79ef\u3002</p>\n<h2 id=\"21\">2.1 \u5b9e\u9a8c\u914d\u7f6e\u7ba1\u7406</h2>\n<h3 id=\"_2\">\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u9009\u62e9</h3>\n<p>\u5728 LLM \u540e\u8bad\u7ec3\u9879\u76ee\u4e2d\uff0c\u914d\u7f6e\u7ba1\u7406\u7684\u590d\u6742\u5ea6\u8fdc\u8d85\u4f20\u7edf\u6df1\u5ea6\u5b66\u4e60\u9879\u76ee\u3002\u4e00\u4e2a\u5178\u578b\u7684\u5b9e\u9a8c\u53ef\u80fd\u5305\u542b\u4e0a\u767e\u4e2a\u8d85\u53c2\u6570\uff0c\u6d89\u53ca\u6a21\u578b\u67b6\u6784\u3001\u8bad\u7ec3\u7b56\u7565\u3001\u6570\u636e\u5904\u7406\u3001\u8bc4\u4f30\u6307\u6807\u7b49\u591a\u4e2a\u7ef4\u5ea6\u3002\u9009\u62e9\u5408\u9002\u7684\u914d\u7f6e\u683c\u5f0f\u81f3\u5173\u91cd\u8981\u3002</p>\n<p><strong>YAML \u914d\u7f6e\u7684\u4f18\u52bf\u4e0e\u52a3\u52bf</strong></p>\n<p>YAML \u56e0\u5176\u53ef\u8bfb\u6027\u5f3a\u800c\u5e7f\u53d7\u6b22\u8fce\uff0c\u7279\u522b\u9002\u5408\u5d4c\u5957\u7ed3\u6784\u7684\u8868\u8fbe\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">model</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">architecture</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">llama2</span>\n<span class=\"w\">  </span><span class=\"nt\">hidden_size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">4096</span>\n<span class=\"w\">  </span><span class=\"nt\">num_layers</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">32</span>\n<span class=\"w\">  </span><span class=\"nt\">attention</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">num_heads</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">32</span>\n<span class=\"w\">    </span><span class=\"nt\">head_dim</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">128</span>\n<span class=\"w\">    </span><span class=\"nt\">rotary_embedding</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"nt\">base</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">10000</span>\n<span class=\"w\">      </span><span class=\"nt\">scaling_factor</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">1.0</span>\n</code></pre></div>\n\n<p>\u4f18\u52bf\uff1a</p>\n<ul>\n<li>\u4eba\u7c7b\u53ef\u8bfb\u6027\u6700\u4f73\uff0c\u9002\u5408\u914d\u7f6e\u5ba1\u67e5</li>\n<li>\u652f\u6301\u6ce8\u91ca\uff0c\u4fbf\u4e8e\u6587\u6863\u5316</li>\n<li>\u5c42\u6b21\u7ed3\u6784\u6e05\u6670\uff0c\u9002\u5408\u590d\u6742\u914d\u7f6e</li>\n<li>\u751f\u6001\u7cfb\u7edf\u6210\u719f\uff0c\u5de5\u5177\u94fe\u5b8c\u5584</li>\n</ul>\n<p>\u52a3\u52bf\uff1a</p>\n<ul>\n<li>\u7f29\u8fdb\u654f\u611f\uff0c\u5bb9\u6613\u51fa\u9519</li>\n<li>\u7c7b\u578b\u63a8\u65ad\u53ef\u80fd\u4ea7\u751f\u610f\u5916\uff08\u5982 \"no\" \u88ab\u89e3\u6790\u4e3a\u5e03\u5c14\u503c\uff09</li>\n<li>\u4e0d\u652f\u6301\u53d8\u91cf\u5f15\u7528\u548c\u8ba1\u7b97\u8868\u8fbe\u5f0f</li>\n<li>\u5927\u6587\u4ef6\u89e3\u6790\u901f\u5ea6\u8f83\u6162</li>\n</ul>\n<p><strong>TOML \u914d\u7f6e\u7684\u6743\u8861</strong></p>\n<p>TOML \u5728 Rust \u548c Python \u793e\u533a\u9010\u6e10\u6d41\u884c\uff0c\u63d0\u4f9b\u4e86\u66f4\u4e25\u683c\u7684\u8bed\u6cd5\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">[model]</span>\n<span class=\"n\">architecture</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">&quot;llama2&quot;</span>\n<span class=\"n\">hidden_size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4096</span>\n<span class=\"n\">num_layers</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n\n<span class=\"k\">[model.attention]</span>\n<span class=\"n\">num_heads</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"n\">head_dim</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">128</span>\n\n<span class=\"k\">[model.attention.rotary_embedding]</span>\n<span class=\"n\">base</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10000</span>\n<span class=\"n\">scaling_factor</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1.0</span>\n</code></pre></div>\n\n<p>\u4f18\u52bf\uff1a</p>\n<ul>\n<li>\u8bed\u6cd5\u660e\u786e\uff0c\u6b67\u4e49\u5c11</li>\n<li>\u539f\u751f\u652f\u6301\u65e5\u671f\u65f6\u95f4\u7c7b\u578b</li>\n<li>\u8868\u683c\u6570\u7ec4\u8bed\u6cd5\u9002\u5408\u6279\u91cf\u5b9e\u9a8c\u914d\u7f6e</li>\n</ul>\n<p>\u52a3\u52bf\uff1a</p>\n<ul>\n<li>\u6df1\u5c42\u5d4c\u5957\u53ef\u8bfb\u6027\u4e0b\u964d</li>\n<li>\u6570\u7ec4\u548c\u5185\u8054\u8868\u7684\u8bed\u6cd5\u8f83\u590d\u6742</li>\n<li>\u751f\u6001\u7cfb\u7edf\u76f8\u5bf9\u8f83\u65b0</li>\n</ul>\n<p><strong>Python \u914d\u7f6e\u7684\u7075\u6d3b\u6027</strong></p>\n<p>\u76f4\u63a5\u4f7f\u7528 Python \u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\u63d0\u4f9b\u4e86\u6700\u5927\u7684\u7075\u6d3b\u6027\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Optional</span>\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">ModelConfig</span><span class=\"p\">:</span>\n    <span class=\"n\">architecture</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;llama2&quot;</span>\n    <span class=\"n\">hidden_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4096</span>\n    <span class=\"n\">num_layers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">total_params</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u52a8\u6001\u8ba1\u7b97\u53c2\u6570\u91cf</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">calculate_params</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">scale_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">factor</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u52a8\u6001\u8c03\u6574\u6a21\u578b\u89c4\u6a21&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hidden_size</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hidden_size</span> <span class=\"o\">*</span> <span class=\"n\">factor</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_layers</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_layers</span> <span class=\"o\">*</span> <span class=\"n\">factor</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>\u4f18\u52bf\uff1a</p>\n<ul>\n<li>\u652f\u6301\u52a8\u6001\u8ba1\u7b97\u548c\u6761\u4ef6\u903b\u8f91</li>\n<li>\u7c7b\u578b\u68c0\u67e5\u548c IDE \u652f\u6301\u5b8c\u5584</li>\n<li>\u53ef\u4ee5\u590d\u7528\u4ee3\u7801\u548c\u5bfc\u5165\u6a21\u5757</li>\n<li>\u652f\u6301\u914d\u7f6e\u9a8c\u8bc1\u548c\u9ed8\u8ba4\u503c</li>\n</ul>\n<p>\u52a3\u52bf\uff1a</p>\n<ul>\n<li>\u5b89\u5168\u6027\u98ce\u9669\uff08\u6267\u884c\u4efb\u610f\u4ee3\u7801\uff09</li>\n<li>\u975e\u6280\u672f\u4eba\u5458\u96be\u4ee5\u4fee\u6539</li>\n<li>\u7248\u672c\u63a7\u5236\u4e2d diff \u53ef\u8bfb\u6027\u8f83\u5dee</li>\n</ul>\n<h3 id=\"_3\">\u914d\u7f6e\u7ee7\u627f\u4e0e\u8986\u76d6\u673a\u5236</h3>\n<p>\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u57fa\u7840\u914d\u7f6e\u548c\u591a\u4e2a\u5b9e\u9a8c\u53d8\u4f53\u3002\u8bbe\u8ba1\u826f\u597d\u7684\u7ee7\u627f\u673a\u5236\u53ef\u4ee5\u5927\u5e45\u51cf\u5c11\u914d\u7f6e\u5197\u4f59\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ConfigManager</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">base_config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"n\">base_config_path</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">inheritance_chain</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">base_config_path</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">inherit_from</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent_config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u652f\u6301\u591a\u7ea7\u7ee7\u627f&quot;&quot;&quot;</span>\n        <span class=\"n\">parent_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"n\">parent_config_path</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deep_merge</span><span class=\"p\">(</span><span class=\"n\">parent_config</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_config</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">inheritance_chain</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">parent_config_path</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">override</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">overrides</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u652f\u6301\u547d\u4ee4\u884c\u8986\u76d6&quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">key_path</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">overrides</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_nested_value</span><span class=\"p\">(</span><span class=\"n\">key_path</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deep_merge</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">override</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u9012\u5f52\u5408\u5e76\u914d\u7f6e\u5b57\u5178&quot;&quot;&quot;</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">override</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">result</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">],</span> <span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n                <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deep_merge</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">],</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span>\n</code></pre></div>\n\n<p><strong>\u914d\u7f6e\u8986\u76d6\u7684\u4f18\u5148\u7ea7\u8bbe\u8ba1</strong></p>\n<p>\u4e00\u4e2a\u6e05\u6670\u7684\u4f18\u5148\u7ea7\u4f53\u7cfb\u907f\u514d\u4e86\u914d\u7f6e\u51b2\u7a81\uff1a</p>\n<ol>\n<li>\u547d\u4ee4\u884c\u53c2\u6570\uff08\u6700\u9ad8\u4f18\u5148\u7ea7\uff09</li>\n<li>\u73af\u5883\u53d8\u91cf</li>\n<li>\u5b9e\u9a8c\u7279\u5b9a\u914d\u7f6e\u6587\u4ef6</li>\n<li>\u7528\u6237\u914d\u7f6e\u6587\u4ef6</li>\n<li>\u9879\u76ee\u9ed8\u8ba4\u914d\u7f6e\uff08\u6700\u4f4e\u4f18\u5148\u7ea7\uff09</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\u4f18\u5148\u7ea7\u94fe\uff1a\nCLI Args &gt; ENV &gt; experiment.yaml &gt; user.yaml &gt; default.yaml\n</code></pre></div>\n\n<h3 id=\"_4\">\u914d\u7f6e\u9a8c\u8bc1\u4e0e\u7c7b\u578b\u68c0\u67e5</h3>\n<p>\u4f7f\u7528 Pydantic \u6216 attrs \u8fdb\u884c\u8fd0\u884c\u65f6\u9a8c\u8bc1\u53ef\u4ee5\u53ca\u65e9\u53d1\u73b0\u914d\u7f6e\u9519\u8bef\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">validator</span><span class=\"p\">,</span> <span class=\"n\">Field</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Literal</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TrainingConfig</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">gt</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">le</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n    <span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">gt</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">multiple_of</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n    <span class=\"n\">optimizer</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s2\">&quot;adam&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;sgd&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;adamw&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">gradient_accumulation_steps</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">gt</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@validator</span><span class=\"p\">(</span><span class=\"s2\">&quot;batch_size&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">validate_batch_size</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;gradient_accumulation_steps&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">values</span><span class=\"p\">:</span>\n            <span class=\"n\">effective_batch</span> <span class=\"o\">=</span> <span class=\"n\">v</span> <span class=\"o\">*</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s2\">&quot;gradient_accumulation_steps&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">effective_batch</span> <span class=\"o\">&gt;</span> <span class=\"mi\">65536</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Effective batch size </span><span class=\"si\">{</span><span class=\"n\">effective_batch</span><span class=\"si\">}</span><span class=\"s2\"> too large&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">v</span>\n\n    <span class=\"nd\">@validator</span><span class=\"p\">(</span><span class=\"s2\">&quot;learning_rate&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">validate_lr_schedule</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;optimizer&quot;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;sgd&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">v</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.1</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;SGD learning rate typically should be &lt; 0.1&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">v</span>\n</code></pre></div>\n\n<h2 id=\"22-flag-git\">2.2 Flag\u3001\u73af\u5883\u53d8\u91cf\u4e0e Git \u5206\u652f\u7b56\u7565</h2>\n<h3 id=\"command-line-flags\">Command-line Flags \u7684\u8bbe\u8ba1\u539f\u5219</h3>\n<p>\u547d\u4ee4\u884c\u53c2\u6570\u662f\u5b9e\u9a8c\u914d\u7f6e\u7684\u7b2c\u4e00\u63a5\u89e6\u70b9\uff0c\u826f\u597d\u7684\u8bbe\u8ba1\u80fd\u663e\u8457\u63d0\u5347\u5b9e\u9a8c\u6548\u7387\u3002\u4ee5\u4e0b\u662f\u7ecf\u8fc7\u5927\u89c4\u6a21\u5b9e\u9a8c\u9a8c\u8bc1\u7684\u8bbe\u8ba1\u539f\u5219\uff1a</p>\n<p><strong>\u5c42\u6b21\u5316\u7684\u53c2\u6570\u7ec4\u7ec7</strong></p>\n<p>\u907f\u514d\u5e73\u94fa\u6240\u6709\u53c2\u6570\uff0c\u800c\u662f\u6309\u529f\u80fd\u57df\u7ec4\u7ec7\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_parser</span><span class=\"p\">():</span>\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># \u4f7f\u7528\u53c2\u6570\u7ec4\u63d0\u9ad8\u53ef\u8bfb\u6027</span>\n    <span class=\"n\">model_group</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument_group</span><span class=\"p\">(</span><span class=\"s2\">&quot;model&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">model_group</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;--model.name&quot;</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s2\">&quot;llama2-7b&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">model_group</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;--model.checkpoint&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n    <span class=\"n\">model_group</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;--model.dtype&quot;</span><span class=\"p\">,</span> <span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;fp32&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;fp16&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;bf16&quot;</span><span class=\"p\">])</span>\n\n    <span class=\"n\">training_group</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument_group</span><span class=\"p\">(</span><span class=\"s2\">&quot;training&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">training_group</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;--training.batch_size&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">)</span>\n    <span class=\"n\">training_group</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;--training.learning_rate&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mf\">1e-4</span><span class=\"p\">)</span>\n    <span class=\"n\">training_group</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;--training.warmup_steps&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"n\">data_group</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument_group</span><span class=\"p\">(</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">data_group</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;--data.train_path&quot;</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">data_group</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;--data.val_path&quot;</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">data_group</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;--data.num_workers&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">parser</span>\n</code></pre></div>\n\n<p><strong>\u667a\u80fd\u9ed8\u8ba4\u503c\u4e0e\u5fc5\u9700\u53c2\u6570</strong></p>\n<p>\u533a\u5206\u5fc5\u9700\u53c2\u6570\u548c\u53ef\u9009\u53c2\u6570\uff0c\u4e3a\u5e38\u89c1\u573a\u666f\u63d0\u4f9b\u5408\u7406\u9ed8\u8ba4\u503c\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">FlagValidator</span><span class=\"p\">:</span>\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">validate_flags</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u81ea\u52a8\u63a8\u65ad\u76f8\u5173\u53c2\u6570</span>\n        <span class=\"k\">if</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">distributed</span> <span class=\"ow\">and</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">local_rank</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">local_rank</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;LOCAL_RANK&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># \u6839\u636e\u786c\u4ef6\u81ea\u52a8\u8bbe\u7f6e</span>\n        <span class=\"k\">if</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">device</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;auto&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">device</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;cuda&quot;</span> <span class=\"k\">if</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"o\">.</span><span class=\"n\">is_available</span><span class=\"p\">()</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;cpu&quot;</span>\n\n        <span class=\"c1\"># \u6279\u91cf\u5927\u5c0f\u81ea\u52a8\u8c03\u6574</span>\n        <span class=\"k\">if</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">gradient_checkpointing</span> <span class=\"ow\">and</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">batch_size</span> <span class=\"o\">&gt;</span> <span class=\"mi\">16</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Reducing batch size from </span><span class=\"si\">{</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">batch_size</span><span class=\"si\">}</span><span class=\"s2\"> to 16 due to gradient checkpointing&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">batch_size</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">args</span>\n</code></pre></div>\n\n<p><strong>\u53c2\u6570\u522b\u540d\u4e0e\u7b80\u5199</strong></p>\n<p>\u4e3a\u5e38\u7528\u53c2\u6570\u63d0\u4f9b\u7b80\u5199\uff0c\u63d0\u9ad8\u547d\u4ee4\u884c\u6548\u7387\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;-b&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--batch-size&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--training.batch_size&quot;</span><span class=\"p\">,</span> \n                   <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;batch_size&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">,</span>\n                   <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Training batch size per device&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;-lr&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--learning-rate&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--training.lr&quot;</span><span class=\"p\">,</span>\n                   <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;learning_rate&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mf\">1e-4</span><span class=\"p\">,</span>\n                   <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Peak learning rate&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">&quot;-e&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--epochs&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--num-epochs&quot;</span><span class=\"p\">,</span>\n                   <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;num_epochs&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n                   <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Number of training epochs&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"_5\">\u73af\u5883\u53d8\u91cf\u7684\u4f7f\u7528\u573a\u666f</h3>\n<p>\u73af\u5883\u53d8\u91cf\u9002\u5408\u7ba1\u7406\u8de8\u5b9e\u9a8c\u7684\u5168\u5c40\u8bbe\u7f6e\u548c\u654f\u611f\u4fe1\u606f\uff1a</p>\n<p><strong>\u5206\u5c42\u7684\u73af\u5883\u53d8\u91cf\u4f53\u7cfb</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u7cfb\u7edf\u7ea7\u522b\uff08\u96c6\u7fa4\u914d\u7f6e\uff09</span>\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">CUDA_VISIBLE_DEVICES</span><span class=\"o\">=</span><span class=\"m\">0</span>,1,2,3\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">OMP_NUM_THREADS</span><span class=\"o\">=</span><span class=\"m\">8</span>\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">NCCL_DEBUG</span><span class=\"o\">=</span>INFO\n\n<span class=\"c1\"># \u9879\u76ee\u7ea7\u522b\uff08\u8def\u5f84\u548c\u51ed\u8bc1\uff09</span>\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">LLM_DATA_ROOT</span><span class=\"o\">=</span>/mnt/data/llm_datasets\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">LLM_CHECKPOINT_DIR</span><span class=\"o\">=</span>/mnt/checkpoints\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">WANDB_API_KEY</span><span class=\"o\">=</span>your_api_key_here\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">HF_TOKEN</span><span class=\"o\">=</span>your_huggingface_token\n\n<span class=\"c1\"># \u5b9e\u9a8c\u7ea7\u522b\uff08\u8fd0\u884c\u65f6\u914d\u7f6e\uff09</span>\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">LLM_EXPERIMENT_NAME</span><span class=\"o\">=</span>dpo_ablation_v3\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">LLM_RUN_ID</span><span class=\"o\">=</span><span class=\"k\">$(</span>date<span class=\"w\"> </span>+%Y%m%d_%H%M%S<span class=\"k\">)</span>\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">LLM_DEBUG_MODE</span><span class=\"o\">=</span><span class=\"m\">1</span>\n</code></pre></div>\n\n<p><strong>\u73af\u5883\u53d8\u91cf\u7684\u6700\u4f73\u5b9e\u8df5</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Optional</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">EnvConfig</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u7edf\u4e00\u7ba1\u7406\u73af\u5883\u53d8\u91cf&quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_data_root</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Path</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u83b7\u53d6\u6570\u636e\u6839\u76ee\u5f55\uff0c\u652f\u6301\u591a\u7ea7fallback&quot;&quot;&quot;</span>\n        <span class=\"n\">candidates</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;LLM_DATA_ROOT&quot;</span><span class=\"p\">),</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;DATA_ROOT&quot;</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;/data/llm&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;./data&quot;</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">path</span> <span class=\"ow\">in</span> <span class=\"n\">candidates</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">path</span> <span class=\"ow\">and</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n                <span class=\"k\">return</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;No valid data root found&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_wandb_config</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5b89\u5168\u5730\u83b7\u53d6 W&amp;B \u914d\u7f6e&quot;&quot;&quot;</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"n\">api_key</span> <span class=\"o\">:=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;WANDB_API_KEY&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;api_key&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">api_key</span>\n        <span class=\"k\">if</span> <span class=\"n\">project</span> <span class=\"o\">:=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;WANDB_PROJECT&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;project&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">project</span>\n        <span class=\"k\">if</span> <span class=\"n\">entity</span> <span class=\"o\">:=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;WANDB_ENTITY&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;entity&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">entity</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_debug_mode</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u67e5\u8c03\u8bd5\u6a21\u5f0f&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;LLM_DEBUG_MODE&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;true&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;yes&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"git\">Git \u5206\u652f\u7ba1\u7406\u5b9e\u8df5</h3>\n<p>\u5728\u5feb\u901f\u8fed\u4ee3\u7684\u5b9e\u9a8c\u73af\u5883\u4e2d\uff0cGit \u5206\u652f\u7b56\u7565\u9700\u8981\u5e73\u8861\u5b9e\u9a8c\u81ea\u7531\u5ea6\u548c\u4ee3\u7801\u8d28\u91cf\uff1a</p>\n<p><strong>\u5b9e\u9a8c\u5206\u652f\u547d\u540d\u89c4\u8303</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u529f\u80fd\u5f00\u53d1\u5206\u652f</span>\nfeature/distributed-dpo\nfeature/multimodal-alignment\n\n<span class=\"c1\"># \u5b9e\u9a8c\u5206\u652f\uff08\u77ed\u671f\uff09</span>\nexp/20250105-lr-sweep\nexp/20250106-batch-size-ablation\n\n<span class=\"c1\"># \u4e2a\u4eba\u5b9e\u9a8c\u5206\u652f\uff08\u66f4\u81ea\u7531\uff09</span>\ndev/alice/rope-scaling\ndev/bob/attention-variants\n\n<span class=\"c1\"># \u957f\u671f\u7814\u7a76\u5206\u652f</span>\nresearch/constitutional-ai\nresearch/online-rlhf\n</code></pre></div>\n\n<p><strong>\u5206\u652f\u4fdd\u62a4\u4e0e\u5408\u5e76\u7b56\u7565</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># .github/branch_protection.yml</span>\n<span class=\"n\">protection_rules</span><span class=\"p\">:</span>\n  <span class=\"n\">main</span><span class=\"p\">:</span>\n    <span class=\"n\">required_reviews</span><span class=\"p\">:</span> <span class=\"mi\">2</span>\n    <span class=\"n\">dismiss_stale_reviews</span><span class=\"p\">:</span> <span class=\"n\">true</span>\n    <span class=\"n\">require_code_owner_reviews</span><span class=\"p\">:</span> <span class=\"n\">true</span>\n    <span class=\"n\">required_status_checks</span><span class=\"p\">:</span>\n\n      <span class=\"o\">-</span> <span class=\"n\">lint</span>\n      <span class=\"o\">-</span> <span class=\"nb\">type</span><span class=\"o\">-</span><span class=\"n\">check</span>\n      <span class=\"o\">-</span> <span class=\"n\">unit</span><span class=\"o\">-</span><span class=\"n\">tests</span>\n    <span class=\"n\">enforce_admins</span><span class=\"p\">:</span> <span class=\"n\">false</span>\n\n  <span class=\"n\">release</span><span class=\"o\">/*</span><span class=\"p\">:</span>\n    <span class=\"n\">required_reviews</span><span class=\"p\">:</span> <span class=\"mi\">3</span>\n    <span class=\"n\">require_code_owner_reviews</span><span class=\"p\">:</span> <span class=\"n\">true</span>\n    <span class=\"n\">required_status_checks</span><span class=\"p\">:</span>\n\n      <span class=\"o\">-</span> <span class=\"nb\">all</span><span class=\"o\">-</span><span class=\"n\">tests</span>\n      <span class=\"o\">-</span> <span class=\"n\">integration</span><span class=\"o\">-</span><span class=\"n\">tests</span>\n      <span class=\"o\">-</span> <span class=\"n\">benchmark</span><span class=\"o\">-</span><span class=\"n\">regression</span>\n</code></pre></div>\n\n<p><strong>\u5b9e\u9a8c\u5206\u652f\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"ch\">#!/bin/bash</span>\n<span class=\"c1\"># scripts/manage_exp_branches.sh</span>\n\n<span class=\"c1\"># \u81ea\u52a8\u6e05\u7406\u8fc7\u671f\u7684\u5b9e\u9a8c\u5206\u652f</span>\ncleanup_old_exp_branches<span class=\"o\">()</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">    </span><span class=\"nb\">local</span><span class=\"w\"> </span><span class=\"nv\">days_old</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">1</span><span class=\"k\">:-</span><span class=\"nv\">30</span><span class=\"si\">}</span>\n\n<span class=\"w\">    </span>git<span class=\"w\"> </span><span class=\"k\">for</span>-each-ref<span class=\"w\"> </span>--format<span class=\"o\">=</span><span class=\"s1\">&#39;%(refname:short) %(committerdate:unix)&#39;</span><span class=\"w\"> </span>refs/heads/exp/<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"nb\">read</span><span class=\"w\"> </span>branch<span class=\"w\"> </span>timestamp<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">do</span>\n<span class=\"w\">        </span><span class=\"nv\">age_days</span><span class=\"o\">=</span><span class=\"k\">$((</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">$(</span>date<span class=\"w\"> </span>+%s<span class=\"k\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nv\">timestamp</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"m\">86400</span><span class=\"w\"> </span><span class=\"k\">))</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span><span class=\"nv\">$age</span><span class=\"se\">\\_</span>days<span class=\"w\"> </span>-gt<span class=\"w\"> </span><span class=\"nv\">$days_old</span><span class=\"w\"> </span><span class=\"o\">]</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">then</span>\n<span class=\"w\">            </span><span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Deleting old experimental branch: </span><span class=\"nv\">$branch</span><span class=\"s2\"> (</span><span class=\"si\">${</span><span class=\"nv\">age_days</span><span class=\"si\">}</span><span class=\"s2\"> days old)&quot;</span>\n<span class=\"w\">            </span>git<span class=\"w\"> </span>branch<span class=\"w\"> </span>-D<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$branch</span><span class=\"s2\">&quot;</span>\n<span class=\"w\">        </span><span class=\"k\">fi</span>\n<span class=\"w\">    </span><span class=\"k\">done</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\"># \u5f52\u6863\u91cd\u8981\u5b9e\u9a8c\u5206\u652f</span>\narchive_exp_branch<span class=\"o\">()</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">    </span><span class=\"nb\">local</span><span class=\"w\"> </span><span class=\"nv\">branch</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n<span class=\"w\">    </span><span class=\"nb\">local</span><span class=\"w\"> </span><span class=\"nv\">archive_tag</span><span class=\"o\">=</span><span class=\"s2\">&quot;archive/</span><span class=\"k\">$(</span>date<span class=\"w\"> </span>+%Y%m%d<span class=\"k\">)</span><span class=\"s2\">/</span><span class=\"si\">${</span><span class=\"nv\">branch</span><span class=\"p\">##*/</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"w\">    </span>git<span class=\"w\"> </span>tag<span class=\"w\"> </span>-a<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$archive</span><span class=\"s2\">\\_tag&quot;</span><span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$branch</span><span class=\"s2\">&quot;</span><span class=\"w\"> </span>-m<span class=\"w\"> </span><span class=\"s2\">&quot;Archived experimental branch </span><span class=\"nv\">$branch</span><span class=\"s2\">&quot;</span>\n<span class=\"w\">    </span>git<span class=\"w\"> </span>push<span class=\"w\"> </span>origin<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$archive_tag</span><span class=\"s2\">&quot;</span>\n<span class=\"w\">    </span>git<span class=\"w\"> </span>branch<span class=\"w\"> </span>-d<span class=\"w\"> </span><span class=\"s2\">&quot;</span><span class=\"nv\">$branch</span><span class=\"s2\">&quot;</span>\n<span class=\"w\">    </span><span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Archived </span><span class=\"nv\">$branch</span><span class=\"s2\"> as </span><span class=\"nv\">$archive_tag</span><span class=\"s2\">&quot;</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n\n<h2 id=\"23\">2.3 \u5b9e\u9a8c\u8ffd\u8e2a\u4e0e\u7248\u672c\u63a7\u5236</h2>\n<h3 id=\"_6\">\u5b9e\u9a8c\u8ffd\u8e2a\u5de5\u5177\u9009\u62e9</h3>\n<p>\u9009\u62e9\u5408\u9002\u7684\u5b9e\u9a8c\u8ffd\u8e2a\u5de5\u5177\u662f\u5efa\u7acb\u53ef\u91cd\u73b0\u7814\u7a76\u6d41\u7a0b\u7684\u5173\u952e\u3002\u4e3b\u6d41\u5de5\u5177\u5404\u6709\u7279\u8272\uff0c\u9700\u8981\u6839\u636e\u56e2\u961f\u89c4\u6a21\u548c\u9700\u6c42\u9009\u62e9\u3002</p>\n<p><strong>MLflow\uff1a\u5f00\u6e90\u6807\u51c6\u7684\u9009\u62e9</strong></p>\n<p>MLflow \u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u5b9e\u9a8c\u751f\u547d\u5468\u671f\u7ba1\u7406\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">mlflow</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mlflow.tracking</span> <span class=\"kn\">import</span> <span class=\"n\">MlflowClient</span>\n<span class=\"kn\">import</span> <span class=\"nn\">hashlib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MLflowExperimentTracker</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">experiment_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">tracking_uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;file:./mlruns&quot;</span><span class=\"p\">):</span>\n        <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">set_tracking_uri</span><span class=\"p\">(</span><span class=\"n\">tracking_uri</span><span class=\"p\">)</span>\n        <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">set_experiment</span><span class=\"p\">(</span><span class=\"n\">experiment_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">MlflowClient</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">start_run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u5b9e\u9a8c\u8fd0\u884c&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u751f\u6210\u914d\u7f6e\u54c8\u5e0c\u4f5c\u4e3a\u8fd0\u884c\u6807\u8bc6</span>\n        <span class=\"n\">config_hash</span> <span class=\"o\">=</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">md5</span><span class=\"p\">(</span>\n            <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">()</span>\n        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span><span class=\"p\">()[:</span><span class=\"mi\">8</span><span class=\"p\">]</span>\n\n        <span class=\"n\">run_name</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;model_name&#39;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s1\">&#39;unknown&#39;</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">_</span><span class=\"si\">{</span><span class=\"n\">config_hash</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">start_run</span><span class=\"p\">(</span><span class=\"n\">run_name</span><span class=\"o\">=</span><span class=\"n\">run_name</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">run</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u8bb0\u5f55\u914d\u7f6e\u53c2\u6570</span>\n            <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">log_params</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">flatten_dict</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">))</span>\n\n            <span class=\"c1\"># \u8bb0\u5f55\u6807\u7b7e</span>\n            <span class=\"k\">if</span> <span class=\"n\">tags</span><span class=\"p\">:</span>\n                <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">set_tags</span><span class=\"p\">(</span><span class=\"n\">tags</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u8bb0\u5f55\u4ee3\u7801\u7248\u672c</span>\n            <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">set_tag</span><span class=\"p\">(</span><span class=\"s2\">&quot;git_commit&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_git_commit</span><span class=\"p\">())</span>\n            <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">set_tag</span><span class=\"p\">(</span><span class=\"s2\">&quot;git_branch&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_git_branch</span><span class=\"p\">())</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">run_id</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">log_metrics_batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6279\u91cf\u8bb0\u5f55\u6307\u6807&quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">log_metric</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"n\">step</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">log_artifact_with_metadata</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8bb0\u5f55\u6587\u4ef6\u53ca\u5176\u5143\u6570\u636e&quot;&quot;&quot;</span>\n        <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">log_artifact</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)</span>\n        <span class=\"c1\"># \u540c\u65f6\u8bb0\u5f55\u5143\u6570\u636e</span>\n        <span class=\"n\">metadata_path</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">file_path</span><span class=\"si\">}</span><span class=\"s2\">.metadata.json&quot;</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">metadata_path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">metadata</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">log_artifact</span><span class=\"p\">(</span><span class=\"n\">metadata_path</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>Weights &amp; Biases\uff1a\u4e91\u539f\u751f\u7684\u5f3a\u5927\u529f\u80fd</strong></p>\n<p>W&amp;B \u63d0\u4f9b\u4e86\u66f4\u4e30\u5bcc\u7684\u53ef\u89c6\u5316\u548c\u534f\u4f5c\u529f\u80fd\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">wandb</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">WandBTracker</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">entity</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project</span> <span class=\"o\">=</span> <span class=\"n\">project</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">entity</span> <span class=\"o\">=</span> <span class=\"n\">entity</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">init_run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> \n                 <span class=\"n\">resume</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u521d\u59cb\u5316 W&amp;B \u8fd0\u884c&quot;&quot;&quot;</span>\n        <span class=\"n\">run</span> <span class=\"o\">=</span> <span class=\"n\">wandb</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span>\n            <span class=\"n\">project</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project</span><span class=\"p\">,</span>\n            <span class=\"n\">entity</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">resume</span><span class=\"o\">=</span><span class=\"n\">resume</span><span class=\"p\">,</span>  <span class=\"c1\"># \u652f\u6301\u65ad\u70b9\u7eed\u8bad</span>\n            <span class=\"n\">save_code</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>  <span class=\"c1\"># \u81ea\u52a8\u4fdd\u5b58\u4ee3\u7801</span>\n            <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generate_tags</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5b9a\u4e49\u81ea\u5b9a\u4e49\u6307\u6807</span>\n        <span class=\"n\">wandb</span><span class=\"o\">.</span><span class=\"n\">define_metric</span><span class=\"p\">(</span><span class=\"s2\">&quot;train/step&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">wandb</span><span class=\"o\">.</span><span class=\"n\">define_metric</span><span class=\"p\">(</span><span class=\"s2\">&quot;train/*&quot;</span><span class=\"p\">,</span> <span class=\"n\">step_metric</span><span class=\"o\">=</span><span class=\"s2\">&quot;train/step&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">wandb</span><span class=\"o\">.</span><span class=\"n\">define_metric</span><span class=\"p\">(</span><span class=\"s2\">&quot;eval/step&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">wandb</span><span class=\"o\">.</span><span class=\"n\">define_metric</span><span class=\"p\">(</span><span class=\"s2\">&quot;eval/*&quot;</span><span class=\"p\">,</span> <span class=\"n\">step_metric</span><span class=\"o\">=</span><span class=\"s2\">&quot;eval/step&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">run</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">log_distribution</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8bb0\u5f55\u6570\u636e\u5206\u5e03&quot;&quot;&quot;</span>\n        <span class=\"n\">wandb</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">({</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">/mean&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">),</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">/std&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">),</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">/min&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">),</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">/max&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">),</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">/histogram&quot;</span><span class=\"p\">:</span> <span class=\"n\">wandb</span><span class=\"o\">.</span><span class=\"n\">Histogram</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n        <span class=\"p\">},</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"n\">step</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">log_gradient_flow</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8bb0\u5f55\u68af\u5ea6\u6d41\u4fe1\u606f&quot;&quot;&quot;</span>\n        <span class=\"n\">gradients</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">param</span> <span class=\"ow\">in</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">named_parameters</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">grad</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">grad_norm</span> <span class=\"o\">=</span> <span class=\"n\">param</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">item</span><span class=\"p\">()</span>\n                <span class=\"n\">gradients</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                    <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"n\">name</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;grad_norm&quot;</span><span class=\"p\">:</span> <span class=\"n\">grad_norm</span>\n                <span class=\"p\">})</span>\n\n        <span class=\"c1\"># \u521b\u5efa\u68af\u5ea6\u8868\u683c</span>\n        <span class=\"n\">grad_table</span> <span class=\"o\">=</span> <span class=\"n\">wandb</span><span class=\"o\">.</span><span class=\"n\">Table</span><span class=\"p\">(</span>\n            <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;layer&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;gradient_norm&quot;</span><span class=\"p\">],</span>\n            <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"n\">g</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">],</span> <span class=\"n\">g</span><span class=\"p\">[</span><span class=\"s2\">&quot;grad_norm&quot;</span><span class=\"p\">]]</span> <span class=\"k\">for</span> <span class=\"n\">g</span> <span class=\"ow\">in</span> <span class=\"n\">gradients</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">wandb</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">({</span><span class=\"s2\">&quot;gradients&quot;</span><span class=\"p\">:</span> <span class=\"n\">grad_table</span><span class=\"p\">},</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"n\">step</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>TensorBoard\uff1a\u8f7b\u91cf\u7ea7\u672c\u5730\u65b9\u6848</strong></p>\n<p>\u5bf9\u4e8e\u4e0d\u9700\u8981\u4e91\u670d\u52a1\u7684\u573a\u666f\uff0cTensorBoard \u4ecd\u662f\u53ef\u9760\u9009\u62e9\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">torch.utils.tensorboard</span> <span class=\"kn\">import</span> <span class=\"n\">SummaryWriter</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TensorBoardTracker</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">log_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_dir</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">log_dir</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">SummaryWriter</span><span class=\"p\">(</span>\n            <span class=\"n\">log_dir</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_dir</span><span class=\"p\">),</span>\n            <span class=\"n\">comment</span><span class=\"o\">=</span><span class=\"n\">comment</span><span class=\"p\">,</span>\n            <span class=\"n\">flush_secs</span><span class=\"o\">=</span><span class=\"mi\">30</span>  <span class=\"c1\"># \u5b9a\u671f\u5237\u65b0\u5230\u78c1\u76d8</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">log_model_architecture</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">input_shape</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8bb0\u5f55\u6a21\u578b\u67b6\u6784&quot;&quot;&quot;</span>\n        <span class=\"n\">dummy_input</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"n\">input_shape</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">add_graph</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">dummy_input</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">log_attention_weights</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">attention_weights</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">,</span> \n                            <span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">head_idx</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u53ef\u89c6\u5316\u6ce8\u610f\u529b\u6743\u91cd&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u9009\u62e9\u7279\u5b9a\u7684\u6ce8\u610f\u529b\u5934</span>\n        <span class=\"n\">attn</span> <span class=\"o\">=</span> <span class=\"n\">attention_weights</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">head_idx</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">cpu</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">numpy</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u521b\u5efa\u70ed\u529b\u56fe</span>\n        <span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">))</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">attn</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;hot&#39;</span><span class=\"p\">,</span> <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">()</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Attention Weights - Head </span><span class=\"si\">{</span><span class=\"n\">head_idx</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">add_figure</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;attention/head_</span><span class=\"si\">{</span><span class=\"n\">head_idx</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">)</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">log_learning_rate_schedule</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">optimizer</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8bb0\u5f55\u5b66\u4e60\u7387\u53d8\u5316&quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">param_group</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">param_groups</span><span class=\"p\">):</span>\n            <span class=\"n\">lr</span> <span class=\"o\">=</span> <span class=\"n\">param_group</span><span class=\"p\">[</span><span class=\"s1\">&#39;lr&#39;</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">add_scalar</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;learning_rate/group_</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"n\">lr</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"_7\">\u5b9e\u9a8c\u5143\u6570\u636e\u7ba1\u7406</h3>\n<p>\u5b8c\u6574\u7684\u5143\u6570\u636e\u8bb0\u5f55\u662f\u5b9e\u9a8c\u53ef\u91cd\u73b0\u6027\u7684\u57fa\u7840\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">platform</span>\n<span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">psutil</span>\n<span class=\"kn\">import</span> <span class=\"nn\">GPUtil</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ExperimentMetadata</span><span class=\"p\">:</span>\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">collect_system_info</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6536\u96c6\u7cfb\u7edf\u4fe1\u606f&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;platform&quot;</span><span class=\"p\">:</span> <span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">platform</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;python_version&quot;</span><span class=\"p\">:</span> <span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">python_version</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;cpu_count&quot;</span><span class=\"p\">:</span> <span class=\"n\">psutil</span><span class=\"o\">.</span><span class=\"n\">cpu_count</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;memory_gb&quot;</span><span class=\"p\">:</span> <span class=\"n\">psutil</span><span class=\"o\">.</span><span class=\"n\">virtual_memory</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">total</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"o\">**</span><span class=\"mi\">3</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;hostname&quot;</span><span class=\"p\">:</span> <span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;user&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;USER&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;unknown&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">collect_gpu_info</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6536\u96c6 GPU \u4fe1\u606f&quot;&quot;&quot;</span>\n        <span class=\"n\">gpus</span> <span class=\"o\">=</span> <span class=\"n\">GPUtil</span><span class=\"o\">.</span><span class=\"n\">getGPUs</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"p\">[{</span>\n            <span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"n\">gpu</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"n\">gpu</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;memory_total&quot;</span><span class=\"p\">:</span> <span class=\"n\">gpu</span><span class=\"o\">.</span><span class=\"n\">memoryTotal</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;driver&quot;</span><span class=\"p\">:</span> <span class=\"n\">gpu</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;compute_capability&quot;</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">gpu</span><span class=\"o\">.</span><span class=\"n\">major</span><span class=\"si\">}</span><span class=\"s2\">.</span><span class=\"si\">{</span><span class=\"n\">gpu</span><span class=\"o\">.</span><span class=\"n\">minor</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">}</span> <span class=\"k\">for</span> <span class=\"n\">gpu</span> <span class=\"ow\">in</span> <span class=\"n\">gpus</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">collect_dependencies</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6536\u96c6\u4f9d\u8d56\u7248\u672c&quot;&quot;&quot;</span>\n        <span class=\"n\">deps</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n            <span class=\"n\">deps</span><span class=\"p\">[</span><span class=\"s2\">&quot;torch&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">__version__</span>\n            <span class=\"n\">deps</span><span class=\"p\">[</span><span class=\"s2\">&quot;cuda&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"o\">.</span><span class=\"n\">cuda</span> <span class=\"k\">if</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"o\">.</span><span class=\"n\">is_available</span><span class=\"p\">()</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"kn\">import</span> <span class=\"nn\">transformers</span>\n            <span class=\"n\">deps</span><span class=\"p\">[</span><span class=\"s2\">&quot;transformers&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">transformers</span><span class=\"o\">.</span><span class=\"n\">__version__</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n\n        <span class=\"c1\"># \u4ece requirements.txt \u6216 pyproject.toml \u8bfb\u53d6</span>\n        <span class=\"k\">if</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">&quot;requirements.txt&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">&quot;requirements.txt&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;==&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                        <span class=\"n\">pkg</span><span class=\"p\">,</span> <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;==&quot;</span><span class=\"p\">)</span>\n                        <span class=\"n\">deps</span><span class=\"p\">[</span><span class=\"n\">pkg</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">version</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">deps</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_experiment_card</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u521b\u5efa\u5b9e\u9a8c\u5361\u7247&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;experiment_id&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">()),</span>\n            <span class=\"s2\">&quot;timestamp&quot;</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;config&quot;</span><span class=\"p\">:</span> <span class=\"n\">config</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"n\">ExperimentMetadata</span><span class=\"o\">.</span><span class=\"n\">collect_system_info</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;gpus&quot;</span><span class=\"p\">:</span> <span class=\"n\">ExperimentMetadata</span><span class=\"o\">.</span><span class=\"n\">collect_gpu_info</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;dependencies&quot;</span><span class=\"p\">:</span> <span class=\"n\">ExperimentMetadata</span><span class=\"o\">.</span><span class=\"n\">collect_dependencies</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;git&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;commit&quot;</span><span class=\"p\">:</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_output</span><span class=\"p\">(</span>\n                    <span class=\"p\">[</span><span class=\"s2\">&quot;git&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rev-parse&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HEAD&quot;</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(),</span>\n                <span class=\"s2\">&quot;branch&quot;</span><span class=\"p\">:</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_output</span><span class=\"p\">(</span>\n                    <span class=\"p\">[</span><span class=\"s2\">&quot;git&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;branch&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--show-current&quot;</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(),</span>\n                <span class=\"s2\">&quot;diff&quot;</span><span class=\"p\">:</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_output</span><span class=\"p\">(</span>\n                    <span class=\"p\">[</span><span class=\"s2\">&quot;git&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;diff&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HEAD&quot;</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n</code></pre></div>\n\n<h3 id=\"_8\">\u6a21\u578b\u68c0\u67e5\u70b9\u7b56\u7565</h3>\n<p>\u9ad8\u6548\u7684\u68c0\u67e5\u70b9\u7ba1\u7406\u5bf9\u4e8e\u957f\u65f6\u95f4\u8bad\u7ec3\u81f3\u5173\u91cd\u8981\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CheckpointManager</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">checkpoint_dir</span><span class=\"p\">:</span> <span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">max_checkpoints</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_dir</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">checkpoint_dir</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_dir</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">parents</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">exist_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_checkpoints</span> <span class=\"o\">=</span> <span class=\"n\">max_checkpoints</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">save_checkpoint</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">optimizer</span><span class=\"p\">,</span> <span class=\"n\">epoch</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> \n                       <span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">is_best</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4fdd\u5b58\u68c0\u67e5\u70b9&quot;&quot;&quot;</span>\n        <span class=\"n\">checkpoint</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;epoch&quot;</span><span class=\"p\">:</span> <span class=\"n\">epoch</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;model_state_dict&quot;</span><span class=\"p\">:</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">state_dict</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;optimizer_state_dict&quot;</span><span class=\"p\">:</span> <span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">state_dict</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;metrics&quot;</span><span class=\"p\">:</span> <span class=\"n\">metrics</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;timestamp&quot;</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\"># \u5e38\u89c4\u68c0\u67e5\u70b9</span>\n        <span class=\"n\">checkpoint_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_dir</span> <span class=\"o\">/</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;checkpoint_epoch_</span><span class=\"si\">{</span><span class=\"n\">epoch</span><span class=\"si\">}</span><span class=\"s2\">.pt&quot;</span>\n        <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">checkpoint</span><span class=\"p\">,</span> <span class=\"n\">checkpoint_path</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6700\u4f73\u6a21\u578b</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_best</span><span class=\"p\">:</span>\n            <span class=\"n\">best_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_dir</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;best_model.pt&quot;</span>\n            <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">checkpoint</span><span class=\"p\">,</span> <span class=\"n\">best_path</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6e05\u7406\u65e7\u68c0\u67e5\u70b9</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cleanup_old_checkpoints</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_cleanup_old_checkpoints</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4fdd\u7559\u6700\u65b0\u7684N\u4e2a\u68c0\u67e5\u70b9&quot;&quot;&quot;</span>\n        <span class=\"n\">checkpoints</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkpoint_dir</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"s2\">&quot;checkpoint_epoch_*.pt&quot;</span><span class=\"p\">),</span>\n            <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">stat</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">st_mtime</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">checkpoints</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_checkpoints</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">ckpt</span> <span class=\"ow\">in</span> <span class=\"n\">checkpoints</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_checkpoints</span><span class=\"p\">]:</span>\n                <span class=\"n\">ckpt</span><span class=\"o\">.</span><span class=\"n\">unlink</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">resume_from_checkpoint</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">checkpoint_path</span><span class=\"p\">:</span> <span class=\"n\">Path</span><span class=\"p\">,</span> \n                              <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">optimizer</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4ece\u68c0\u67e5\u70b9\u6062\u590d&quot;&quot;&quot;</span>\n        <span class=\"n\">checkpoint</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">checkpoint_path</span><span class=\"p\">,</span> <span class=\"n\">map_location</span><span class=\"o\">=</span><span class=\"s2\">&quot;cpu&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">load_state_dict</span><span class=\"p\">(</span><span class=\"n\">checkpoint</span><span class=\"p\">[</span><span class=\"s2\">&quot;model_state_dict&quot;</span><span class=\"p\">])</span>\n        <span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">load_state_dict</span><span class=\"p\">(</span><span class=\"n\">checkpoint</span><span class=\"p\">[</span><span class=\"s2\">&quot;optimizer_state_dict&quot;</span><span class=\"p\">])</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;epoch&quot;</span><span class=\"p\">:</span> <span class=\"n\">checkpoint</span><span class=\"p\">[</span><span class=\"s2\">&quot;epoch&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;metrics&quot;</span><span class=\"p\">:</span> <span class=\"n\">checkpoint</span><span class=\"p\">[</span><span class=\"s2\">&quot;metrics&quot;</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n</code></pre></div>\n\n<h2 id=\"24\">2.4 \u9632\u6b62\u4ee3\u7801\u8150\u5316\u7684\u6700\u4f73\u5b9e\u8df5</h2>\n<h3 id=\"_9\">\u6280\u672f\u503a\u52a1\u7ba1\u7406</h3>\n<p>LLM \u540e\u8bad\u7ec3\u9879\u76ee\u7684\u5feb\u901f\u8fed\u4ee3\u5bb9\u6613\u7d2f\u79ef\u6280\u672f\u503a\u52a1\u3002\u4e3b\u52a8\u7ba1\u7406\u6280\u672f\u503a\u52a1\u662f\u4fdd\u6301\u9879\u76ee\u957f\u671f\u5065\u5eb7\u7684\u5173\u952e\u3002</p>\n<p><strong>\u6280\u672f\u503a\u52a1\u7684\u91cf\u5316\u4e0e\u8ffd\u8e2a</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Dict</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ast</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TechnicalDebtAnalyzer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">codebase_path</span><span class=\"p\">:</span> <span class=\"n\">Path</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">codebase_path</span> <span class=\"o\">=</span> <span class=\"n\">codebase_path</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">debt_markers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;TODO&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FIXME&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HACK&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;XXX&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DEPRECATED&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">scan_codebase</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u626b\u63cf\u4ee3\u7801\u5e93\u4e2d\u7684\u6280\u672f\u503a\u52a1\u6807\u8bb0&quot;&quot;&quot;</span>\n        <span class=\"n\">debt_items</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">marker</span><span class=\"p\">:</span> <span class=\"p\">[]</span> <span class=\"k\">for</span> <span class=\"n\">marker</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">debt_markers</span><span class=\"p\">}</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">py_file</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">codebase_path</span><span class=\"o\">.</span><span class=\"n\">rglob</span><span class=\"p\">(</span><span class=\"s2\">&quot;*.py&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">py_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"n\">line_num</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n                    <span class=\"k\">for</span> <span class=\"n\">marker</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">debt_markers</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"n\">marker</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                            <span class=\"n\">debt_items</span><span class=\"p\">[</span><span class=\"n\">marker</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                                <span class=\"s2\">&quot;file&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">py_file</span><span class=\"o\">.</span><span class=\"n\">relative_to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">codebase_path</span><span class=\"p\">)),</span>\n                                <span class=\"s2\">&quot;line&quot;</span><span class=\"p\">:</span> <span class=\"n\">line_num</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;content&quot;</span><span class=\"p\">:</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(),</span>\n                                <span class=\"s2\">&quot;priority&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimate_priority</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n                            <span class=\"p\">})</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">debt_items</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">calculate_complexity_metrics</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"n\">Path</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8ba1\u7b97\u4ee3\u7801\u590d\u6742\u5ea6\u6307\u6807&quot;&quot;&quot;</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n        <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">)</span>\n\n        <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;cyclomatic_complexity&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">calculate_cyclomatic_complexity</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;lines_of_code&quot;</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()),</span>\n            <span class=\"s2\">&quot;num_functions&quot;</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">([</span><span class=\"n\">n</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">FunctionDef</span><span class=\"p\">)]),</span>\n            <span class=\"s2\">&quot;num_classes&quot;</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">([</span><span class=\"n\">n</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">ClassDef</span><span class=\"p\">)]),</span>\n            <span class=\"s2\">&quot;max_nesting_depth&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">calculate_max_nesting</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">metrics</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">generate_debt_report</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u751f\u6210\u6280\u672f\u503a\u52a1\u62a5\u544a&quot;&quot;&quot;</span>\n        <span class=\"n\">debt_items</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">scan_codebase</span><span class=\"p\">()</span>\n        <span class=\"n\">total_debt</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">items</span> <span class=\"ow\">in</span> <span class=\"n\">debt_items</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())</span>\n\n        <span class=\"n\">report</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\"># \u6280\u672f\u503a\u52a1\u62a5\u544a</span>\n<span class=\"s2\">\u751f\u6210\u65f6\u95f4: </span><span class=\"si\">{</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()</span><span class=\"si\">}</span>\n<span class=\"s2\">\u603b\u503a\u52a1\u9879: </span><span class=\"si\">{</span><span class=\"n\">total_debt</span><span class=\"si\">}</span>\n\n<span class=\"s2\">## \u6309\u7c7b\u578b\u5206\u5e03</span>\n<span class=\"s2\">&quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">marker</span><span class=\"p\">,</span> <span class=\"n\">items</span> <span class=\"ow\">in</span> <span class=\"n\">debt_items</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">report</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;- </span><span class=\"si\">{</span><span class=\"n\">marker</span><span class=\"si\">}</span><span class=\"s2\">: </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\"> \u9879</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"c1\"># \u9ad8\u4f18\u5148\u7ea7\u9879\u76ee</span>\n        <span class=\"n\">high_priority</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">marker</span><span class=\"p\">,</span> <span class=\"n\">items</span> <span class=\"ow\">in</span> <span class=\"n\">debt_items</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">high_priority</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span>\n                <span class=\"n\">item</span> <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">items</span> \n                <span class=\"k\">if</span> <span class=\"n\">item</span><span class=\"p\">[</span><span class=\"s2\">&quot;priority&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;high&quot;</span>\n            <span class=\"p\">])</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">high_priority</span><span class=\"p\">:</span>\n            <span class=\"n\">report</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">## \u9ad8\u4f18\u5148\u7ea7\u503a\u52a1</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n            <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">high_priority</span><span class=\"p\">[:</span><span class=\"mi\">10</span><span class=\"p\">]:</span>  <span class=\"c1\"># \u663e\u793a\u524d10\u4e2a</span>\n                <span class=\"n\">report</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;- </span><span class=\"si\">{</span><span class=\"n\">item</span><span class=\"p\">[</span><span class=\"s1\">&#39;file&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">:</span><span class=\"si\">{</span><span class=\"n\">item</span><span class=\"p\">[</span><span class=\"s1\">&#39;line&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\"> - </span><span class=\"si\">{</span><span class=\"n\">item</span><span class=\"p\">[</span><span class=\"s1\">&#39;content&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">report</span>\n</code></pre></div>\n\n<p><strong>\u4ee3\u7801\u8d28\u91cf\u95e8\u7981</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CodeQualityGate</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">thresholds</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thresholds</span> <span class=\"o\">=</span> <span class=\"n\">thresholds</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check_diff_quality</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">diff_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u67e5\u4ee3\u7801\u53d8\u66f4\u7684\u8d28\u91cf&quot;&quot;&quot;</span>\n        <span class=\"n\">checks</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;no_print_statements&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check_no_prints</span><span class=\"p\">(</span><span class=\"n\">diff_file</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;has_tests&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check_has_tests</span><span class=\"p\">(</span><span class=\"n\">diff_file</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;docstring_coverage&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check_docstrings</span><span class=\"p\">(</span><span class=\"n\">diff_file</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;type_hints&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check_type_hints</span><span class=\"p\">(</span><span class=\"n\">diff_file</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">failures</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">passed</span> <span class=\"ow\">in</span> <span class=\"n\">checks</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">passed</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">failures</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Quality gate failed: </span><span class=\"si\">{</span><span class=\"s1\">&#39;, &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">failures</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check_no_prints</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">diff</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u67e5\u662f\u5426\u5305\u542b\u8c03\u8bd5\u7528\u7684print\u8bed\u53e5&quot;&quot;&quot;</span>\n        <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s1\">&#39;\\+.*print\\(&#39;</span>\n        <span class=\"k\">return</span> <span class=\"ow\">not</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">,</span> <span class=\"n\">diff</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check_has_tests</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">diff</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u67e5\u662f\u5426\u5305\u542b\u5bf9\u5e94\u7684\u6d4b\u8bd5&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u5982\u679c\u4fee\u6539\u4e86src/\u4e0b\u7684\u6587\u4ef6\uff0c\u5e94\u8be5\u6709\u5bf9\u5e94\u7684test/\u4e0b\u7684\u4fee\u6539</span>\n        <span class=\"n\">src_modified</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;src/&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">diff</span>\n        <span class=\"n\">test_modified</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;test/&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">diff</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;tests/&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">diff</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">src_modified</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">test_modified</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n</code></pre></div>\n\n<h3 id=\"_10\">\u4ee3\u7801\u590d\u7528\u4e0e\u6a21\u5757\u5316</h3>\n<p>\u826f\u597d\u7684\u6a21\u5757\u5316\u8bbe\u8ba1\u662f\u9632\u6b62\u4ee3\u7801\u8150\u5316\u7684\u57fa\u7840\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">abc</span> <span class=\"kn\">import</span> <span class=\"n\">ABC</span><span class=\"p\">,</span> <span class=\"n\">abstractmethod</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Generic</span><span class=\"p\">,</span> <span class=\"n\">TypeVar</span>\n\n<span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"n\">TypeVar</span><span class=\"p\">(</span><span class=\"s1\">&#39;T&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BaseExperiment</span><span class=\"p\">(</span><span class=\"n\">ABC</span><span class=\"p\">,</span> <span class=\"n\">Generic</span><span class=\"p\">[</span><span class=\"n\">T</span><span class=\"p\">]):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u5b9e\u9a8c\u57fa\u7c7b\uff0c\u5f3a\u5236\u89c4\u8303\u5316\u5b9e\u9a8c\u6d41\u7a0b&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">config</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u521d\u59cb\u5316\u5b9e\u9a8c\u73af\u5883&quot;&quot;&quot;</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">prepare_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">T</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6570\u636e\u51c6\u5907&quot;&quot;&quot;</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">build_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6784\u5efa\u6a21\u578b&quot;&quot;&quot;</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">train_step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">:</span> <span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5355\u6b65\u8bad\u7ec3&quot;&quot;&quot;</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">evaluate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8bc4\u4f30&quot;&quot;&quot;</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6807\u51c6\u5316\u7684\u5b9e\u9a8c\u6d41\u7a0b&quot;&quot;&quot;</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prepare_data</span><span class=\"p\">()</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">build_model</span><span class=\"p\">()</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">epoch</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;num_epochs&quot;</span><span class=\"p\">]):</span>\n            <span class=\"k\">for</span> <span class=\"n\">batch</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">:</span>\n                <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">train_step</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_metrics</span><span class=\"p\">(</span><span class=\"n\">metrics</span><span class=\"p\">)</span>\n\n            <span class=\"n\">eval_metrics</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">evaluate</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_eval_metrics</span><span class=\"p\">(</span><span class=\"n\">eval_metrics</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u7ec4\u4ef6\u6ce8\u518c\u673a\u5236</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">ComponentRegistry</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u7edf\u4e00\u7684\u7ec4\u4ef6\u6ce8\u518c\u673a\u5236\uff0c\u907f\u514d\u4ee3\u7801\u5206\u6563&quot;&quot;&quot;</span>\n\n    <span class=\"n\">_registry</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;models&quot;</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;datasets&quot;</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;trainers&quot;</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;evaluators&quot;</span><span class=\"p\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">register</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u88c5\u9970\u5668\uff1a\u6ce8\u518c\u7ec4\u4ef6&quot;&quot;&quot;</span>\n        <span class=\"k\">def</span> <span class=\"nf\">decorator</span><span class=\"p\">(</span><span class=\"n\">component_cls</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">category</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_registry</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Unknown category: </span><span class=\"si\">{</span><span class=\"n\">category</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n            <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_registry</span><span class=\"p\">[</span><span class=\"n\">category</span><span class=\"p\">][</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">component_cls</span>\n            <span class=\"k\">return</span> <span class=\"n\">component_cls</span>\n        <span class=\"k\">return</span> <span class=\"n\">decorator</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u83b7\u53d6\u6ce8\u518c\u7684\u7ec4\u4ef6&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">category</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_registry</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Unknown category: </span><span class=\"si\">{</span><span class=\"n\">category</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_registry</span><span class=\"p\">[</span><span class=\"n\">category</span><span class=\"p\">]:</span>\n            <span class=\"n\">available</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_registry</span><span class=\"p\">[</span><span class=\"n\">category</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Unknown </span><span class=\"si\">{</span><span class=\"n\">category</span><span class=\"si\">}</span><span class=\"s2\">: </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">. Available: </span><span class=\"si\">{</span><span class=\"n\">available</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_registry</span><span class=\"p\">[</span><span class=\"n\">category</span><span class=\"p\">][</span><span class=\"n\">name</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># \u4f7f\u7528\u793a\u4f8b</span>\n<span class=\"nd\">@ComponentRegistry</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s2\">&quot;models&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;llama2&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">LLaMA2Model</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"nd\">@ComponentRegistry</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s2\">&quot;datasets&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;alpaca&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">AlpacaDataset</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n</code></pre></div>\n\n<h3 id=\"_11\">\u6301\u7eed\u96c6\u6210\u4e0e\u6d4b\u8bd5</h3>\n<p><strong>\u5206\u5c42\u6d4b\u8bd5\u7b56\u7565</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">unittest.mock</span> <span class=\"kn\">import</span> <span class=\"n\">Mock</span><span class=\"p\">,</span> <span class=\"n\">patch</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TestStrategy</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u5206\u5c42\u6d4b\u8bd5\u7b56\u7565&quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">unit_test_example</span><span class=\"p\">():</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5355\u5143\u6d4b\u8bd5\uff1a\u6d4b\u8bd5\u72ec\u7acb\u51fd\u6570&quot;&quot;&quot;</span>\n        <span class=\"k\">def</span> <span class=\"nf\">test_config_merge</span><span class=\"p\">():</span>\n            <span class=\"n\">base</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;b&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;c&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}}</span>\n            <span class=\"n\">override</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;b&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;c&quot;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">&quot;d&quot;</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">}}</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">deep_merge</span><span class=\"p\">(</span><span class=\"n\">base</span><span class=\"p\">,</span> <span class=\"n\">override</span><span class=\"p\">)</span>\n            <span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;b&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;c&quot;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">&quot;d&quot;</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">}}</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">integration_test_example</span><span class=\"p\">():</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u96c6\u6210\u6d4b\u8bd5\uff1a\u6d4b\u8bd5\u7ec4\u4ef6\u4ea4\u4e92&quot;&quot;&quot;</span>\n        <span class=\"k\">def</span> <span class=\"nf\">test_model_with_dataloader</span><span class=\"p\">():</span>\n            <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">create_model</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n            <span class=\"n\">dataloader</span> <span class=\"o\">=</span> <span class=\"n\">create_dataloader</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n            <span class=\"n\">batch</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"n\">dataloader</span><span class=\"p\">))</span>\n            <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n\n            <span class=\"k\">assert</span> <span class=\"n\">output</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"n\">expected_shape</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">smoke_test_example</span><span class=\"p\">():</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5192\u70df\u6d4b\u8bd5\uff1a\u5feb\u901f\u9a8c\u8bc1\u57fa\u672c\u529f\u80fd&quot;&quot;&quot;</span>\n        <span class=\"k\">def</span> <span class=\"nf\">test_training_loop_runs</span><span class=\"p\">():</span>\n            <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">get_minimal_config</span><span class=\"p\">()</span>\n            <span class=\"n\">trainer</span> <span class=\"o\">=</span> <span class=\"n\">Trainer</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u53ea\u8fd0\u884c\u51e0\u6b65</span>\n            <span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span><span class=\"n\">max_steps</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n            <span class=\"k\">assert</span> <span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">global_step</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n</code></pre></div>\n\n<p><strong>CI/CD \u914d\u7f6e</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># .github/workflows/ci.yml</span>\n<span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">CI Pipeline</span>\n\n<span class=\"nt\">on</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">push</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">branches</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"nv\">main</span><span class=\"p p-Indicator\">,</span><span class=\"w\"> </span><span class=\"nv\">develop</span><span class=\"p p-Indicator\">]</span>\n<span class=\"w\">  </span><span class=\"nt\">pull_request</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">branches</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"nv\">main</span><span class=\"p p-Indicator\">]</span>\n\n<span class=\"nt\">jobs</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">quality-checks</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nt\">runs-on</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">ubuntu-latest</span>\n<span class=\"w\">    </span><span class=\"nt\">steps</span><span class=\"p\">:</span>\n\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">uses</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">actions/checkout@v2</span>\n\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Set up Python</span>\n<span class=\"w\">        </span><span class=\"nt\">uses</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">actions/setup-python@v2</span>\n<span class=\"w\">        </span><span class=\"nt\">with</span><span class=\"p\">:</span>\n<span class=\"w\">          </span><span class=\"nt\">python-version</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;3.9&#39;</span>\n\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Install dependencies</span>\n<span class=\"w\">        </span><span class=\"nt\">run</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">|</span>\n<span class=\"w\">          </span><span class=\"no\">pip install -r requirements-dev.txt</span>\n\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Run linting</span>\n<span class=\"w\">        </span><span class=\"nt\">run</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">|</span>\n<span class=\"w\">          </span><span class=\"no\">flake8 src/ --max-line-length=100</span>\n<span class=\"w\">          </span><span class=\"no\">black --check src/</span>\n<span class=\"w\">          </span><span class=\"no\">isort --check-only src/</span>\n\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Type checking</span>\n<span class=\"w\">        </span><span class=\"nt\">run</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">|</span>\n<span class=\"w\">          </span><span class=\"no\">mypy src/ --ignore-missing-imports</span>\n\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Run tests</span>\n<span class=\"w\">        </span><span class=\"nt\">run</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">|</span>\n<span class=\"w\">          </span><span class=\"no\">pytest tests/ -v --cov=src --cov-report=xml</span>\n\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Check code complexity</span>\n<span class=\"w\">        </span><span class=\"nt\">run</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">|</span>\n<span class=\"w\">          </span><span class=\"no\">radon cc src/ -s -nb</span>\n</code></pre></div>\n\n<h3 id=\"_12\">\u6587\u6863\u4e0e\u77e5\u8bc6\u4f20\u627f</h3>\n<p><strong>\u81ea\u52a8\u5316\u6587\u6863\u751f\u6210</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">DocumentationGenerator</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u81ea\u52a8\u751f\u6210\u5b9e\u9a8c\u6587\u6863&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">generate_experiment_doc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">experiment_class</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4ece\u5b9e\u9a8c\u7c7b\u751f\u6210\u6587\u6863&quot;&quot;&quot;</span>\n        <span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;# </span><span class=\"si\">{</span><span class=\"n\">experiment_class</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"si\">}</span><span class=\"se\">\\n\\n</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"c1\"># \u63d0\u53d6\u7c7b\u6587\u6863\u5b57\u7b26\u4e32</span>\n        <span class=\"k\">if</span> <span class=\"n\">experiment_class</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span><span class=\"p\">:</span>\n            <span class=\"n\">doc</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">experiment_class</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span><span class=\"si\">}</span><span class=\"se\">\\n\\n</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"c1\"># \u63d0\u53d6\u914d\u7f6e\u53c2\u6570</span>\n        <span class=\"n\">doc</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;## Configuration Parameters</span><span class=\"se\">\\n\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">config_schema</span> <span class=\"o\">=</span> <span class=\"n\">experiment_class</span><span class=\"o\">.</span><span class=\"n\">get_config_schema</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">param</span><span class=\"p\">,</span> <span class=\"n\">schema</span> <span class=\"ow\">in</span> <span class=\"n\">config_schema</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">doc</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;- **</span><span class=\"si\">{</span><span class=\"n\">param</span><span class=\"si\">}</span><span class=\"s2\">**: </span><span class=\"si\">{</span><span class=\"n\">schema</span><span class=\"p\">[</span><span class=\"s1\">&#39;type&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\"> &quot;</span>\n            <span class=\"k\">if</span> <span class=\"s1\">&#39;default&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">schema</span><span class=\"p\">:</span>\n                <span class=\"n\">doc</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;(default: </span><span class=\"si\">{</span><span class=\"n\">schema</span><span class=\"p\">[</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">)&quot;</span>\n            <span class=\"n\">doc</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">  </span><span class=\"si\">{</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;description&#39;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"c1\"># \u63d0\u53d6\u65b9\u6cd5\u6587\u6863</span>\n        <span class=\"n\">doc</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">## Methods</span><span class=\"se\">\\n\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">method_name</span> <span class=\"ow\">in</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"n\">experiment_class</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">method_name</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;_&#39;</span><span class=\"p\">):</span>\n                <span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">experiment_class</span><span class=\"p\">,</span> <span class=\"n\">method_name</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"nb\">callable</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">method</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span><span class=\"p\">:</span>\n                    <span class=\"n\">doc</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;### </span><span class=\"si\">{</span><span class=\"n\">method_name</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n                    <span class=\"n\">doc</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span><span class=\"si\">}</span><span class=\"se\">\\n\\n</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">doc</span>\n</code></pre></div>\n\n<h2 id=\"_13\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u4e86 LLM \u540e\u8bad\u7ec3\u5b9e\u9a8c\u4ee3\u7801\u57fa\u7840\u8bbe\u65bd\u7684\u6784\u5efa\u3002\u6211\u4eec\u5b66\u4e60\u4e86\uff1a</p>\n<p>\ud83d\udccc <strong>\u914d\u7f6e\u7ba1\u7406\u7684\u5c42\u6b21\u5316\u8bbe\u8ba1</strong>\uff1a\u901a\u8fc7 YAML/TOML/Python \u914d\u7f6e\u6587\u4ef6\u7684\u5408\u7406\u9009\u62e9\uff0c\u914d\u7f6e\u7ee7\u627f\u673a\u5236\uff0c\u4ee5\u53ca\u8fd0\u884c\u65f6\u9a8c\u8bc1\uff0c\u5efa\u7acb\u4e86\u7075\u6d3b\u4e14\u5065\u58ee\u7684\u914d\u7f6e\u4f53\u7cfb\u3002\u8bb0\u4f4f\uff1a\u914d\u7f6e\u7684\u590d\u6742\u5ea6\u5e94\u8be5\u4e0e\u5b9e\u9a8c\u7684\u590d\u6742\u5ea6\u76f8\u5339\u914d\uff0c\u8fc7\u5ea6\u8bbe\u8ba1\u548c\u8bbe\u8ba1\u4e0d\u8db3\u90fd\u4f1a\u964d\u4f4e\u6548\u7387\u3002</p>\n<p>\ud83d\udccc <strong>\u5b9e\u9a8c\u73af\u5883\u7684\u591a\u7ef4\u7ba1\u7406</strong>\uff1a\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570\u3001\u73af\u5883\u53d8\u91cf\u548c Git \u5206\u652f\u7684\u534f\u540c\u4f7f\u7528\uff0c\u5b9e\u73b0\u4e86\u5b9e\u9a8c\u7684\u9694\u79bb\u6027\u548c\u53ef\u91cd\u73b0\u6027\u3002\u5173\u952e\u539f\u5219\u662f\uff1aFlag \u7528\u4e8e\u5b9e\u9a8c\u7279\u5b9a\u914d\u7f6e\uff0c\u73af\u5883\u53d8\u91cf\u7528\u4e8e\u7cfb\u7edf\u7ea7\u8bbe\u7f6e\uff0cGit \u5206\u652f\u7528\u4e8e\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u3002</p>\n<p>\ud83d\udccc <strong>\u5b9e\u9a8c\u8ffd\u8e2a\u7684\u5168\u751f\u547d\u5468\u671f\u8986\u76d6</strong>\uff1a\u4ece MLflow\u3001W&amp;B \u5230 TensorBoard\uff0c\u4e0d\u540c\u5de5\u5177\u9002\u5408\u4e0d\u540c\u573a\u666f\u3002\u6838\u5fc3\u662f\u8981\u8bb0\u5f55\u8db3\u591f\u7684\u5143\u6570\u636e\u4ee5\u652f\u6301\u5b9e\u9a8c\u91cd\u73b0\uff0c\u5305\u62ec\u4ee3\u7801\u7248\u672c\u3001\u4f9d\u8d56\u73af\u5883\u3001\u786c\u4ef6\u914d\u7f6e\u7b49\u3002</p>\n<p>\ud83d\udccc <strong>\u6280\u672f\u503a\u52a1\u7684\u4e3b\u52a8\u7ba1\u7406</strong>\uff1a\u901a\u8fc7\u4ee3\u7801\u8d28\u91cf\u95e8\u7981\u3001\u6a21\u5757\u5316\u8bbe\u8ba1\u3001\u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u6587\u6863\u751f\u6210\uff0c\u5efa\u7acb\u4e86\u9632\u6b62\u4ee3\u7801\u8150\u5316\u7684\u591a\u91cd\u9632\u7ebf\u3002\u8bb0\u4f4f\uff1a\u6280\u672f\u503a\u52a1\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u5173\u952e\u662f\u8981\u53ef\u89c1\u3001\u53ef\u63a7\u3001\u53ef\u507f\u8fd8\u3002</p>\n<h3 id=\"_14\">\u5173\u952e\u516c\u5f0f\u4e0e\u5ea6\u91cf</h3>\n<ol>\n<li>\n<p><strong>\u6280\u672f\u503a\u52a1\u5229\u606f</strong> = $\\sum_{i=1}^{n} \\text{complexity}_i \\times \\text{change_frequency}_i$</p>\n</li>\n<li>\n<p><strong>\u5b9e\u9a8c\u53ef\u91cd\u73b0\u6027\u5f97\u5206</strong> = $\\frac{\\text{\u6210\u529f\u91cd\u73b0\u7684\u5b9e\u9a8c\u6570}}{\\text{\u603b\u5b9e\u9a8c\u6570}} \\times \\text{\u5143\u6570\u636e\u5b8c\u6574\u5ea6}$</p>\n</li>\n<li>\n<p><strong>\u914d\u7f6e\u590d\u6742\u5ea6</strong> = $\\log_2(\\text{\u914d\u7f6e\u53c2\u6570\u6570}) \\times \\text{\u5d4c\u5957\u6df1\u5ea6}$</p>\n</li>\n</ol>\n<h2 id=\"gotchas\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef (Gotchas)</h2>\n<p>\u26a0\ufe0f <strong>\u914d\u7f6e\u5730\u72f1\uff08Configuration Hell\uff09</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u4e3a\u6bcf\u4e2a\u5c0f\u5b9e\u9a8c\u521b\u5efa\u5b8c\u5168\u72ec\u7acb\u7684\u914d\u7f6e\u6587\u4ef6</li>\n<li>\u540e\u679c\uff1a\u914d\u7f6e\u6587\u4ef6\u7206\u70b8\u5f0f\u589e\u957f\uff0c\u96be\u4ee5\u7ef4\u62a4</li>\n<li>\u89e3\u51b3\uff1a\u4f7f\u7528\u914d\u7f6e\u7ee7\u627f\uff0c\u53ea\u8bb0\u5f55\u4e0e\u57fa\u7ebf\u7684\u5dee\u5f02</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u5b9e\u9a8c\u8ffd\u8e2a\u8fc7\u5ea6\u6216\u4e0d\u8db3</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u8bb0\u5f55\u6240\u6709\u53ef\u80fd\u7684\u6307\u6807 vs \u53ea\u8bb0\u5f55\u6700\u7ec8\u7ed3\u679c</li>\n<li>\u540e\u679c\uff1a\u5b58\u50a8\u7206\u70b8\u6216\u4fe1\u606f\u4e0d\u8db3\u65e0\u6cd5\u8c03\u8bd5</li>\n<li>\u89e3\u51b3\uff1a\u5206\u5c42\u8bb0\u5f55\u7b56\u7565\uff0c\u5173\u952e\u6307\u6807\u8be6\u7ec6\u8bb0\u5f55\uff0c\u8f85\u52a9\u6307\u6807\u91c7\u6837\u8bb0\u5f55</li>\n</ul>\n<p>\u26a0\ufe0f <strong>Git \u5206\u652f\u7ba1\u7406\u6df7\u4e71</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u6240\u6709\u5b9e\u9a8c\u90fd\u5728 main \u5206\u652f\u8fdb\u884c</li>\n<li>\u540e\u679c\uff1a\u4ee3\u7801\u5386\u53f2\u6df7\u4e71\uff0c\u96be\u4ee5\u56de\u6eaf</li>\n<li>\u89e3\u51b3\uff1a\u4e25\u683c\u7684\u5206\u652f\u547d\u540d\u89c4\u8303\u548c\u751f\u547d\u5468\u671f\u7ba1\u7406</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u786c\u7f16\u7801\u8def\u5f84\u548c\u914d\u7f6e</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u5728\u4ee3\u7801\u4e2d\u786c\u7f16\u7801\u6570\u636e\u8def\u5f84\u3001\u6a21\u578b\u8def\u5f84</li>\n<li>\u540e\u679c\uff1a\u4ee3\u7801\u65e0\u6cd5\u8de8\u73af\u5883\u8fd0\u884c</li>\n<li>\u89e3\u51b3\uff1a\u6240\u6709\u8def\u5f84\u901a\u8fc7\u914d\u7f6e\u6216\u73af\u5883\u53d8\u91cf\u7ba1\u7406</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u5ffd\u89c6\u4ee3\u7801\u590d\u6742\u5ea6\u589e\u957f</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u4e3a\u4e86\u5feb\u901f\u5b9e\u9a8c\u4e0d\u65ad\u6dfb\u52a0 if-else \u5206\u652f</li>\n<li>\u540e\u679c\uff1a\u4ee3\u7801\u53d8\u6210\u610f\u5927\u5229\u9762\u6761\uff0c\u65e0\u6cd5\u7ef4\u62a4</li>\n<li>\u89e3\u51b3\uff1a\u5b9a\u671f\u91cd\u6784\uff0c\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u6216\u6ce8\u518c\u673a\u5236</li>\n</ul>\n<p>\u26a0\ufe0f <strong>\u68c0\u67e5\u70b9\u7ba1\u7406\u4e0d\u5f53</strong></p>\n<ul>\n<li>\u9519\u8bef\uff1a\u4fdd\u5b58\u6240\u6709\u68c0\u67e5\u70b9\u6216\u53ea\u4fdd\u5b58\u6700\u540e\u4e00\u4e2a</li>\n<li>\u540e\u679c\uff1a\u78c1\u76d8\u7a7a\u95f4\u8017\u5c3d\u6216\u65e0\u6cd5\u6062\u590d\u6700\u4f73\u6a21\u578b</li>\n<li>\u89e3\u51b3\uff1a\u6eda\u52a8\u7a97\u53e3\u7b56\u7565 + \u6700\u4f73\u6a21\u578b\u4fdd\u5b58</li>\n</ul>\n<p>\ud83d\udca1 <strong>\u5b9e\u7528\u6280\u5de7</strong></p>\n<ol>\n<li><strong>\u914d\u7f6e\u9a8c\u8bc1\u524d\u7f6e</strong>\uff1a\u5728\u5b9e\u9a8c\u5f00\u59cb\u524d\u9a8c\u8bc1\u6240\u6709\u914d\u7f6e\uff0cfail fast</li>\n<li><strong>\u5b9e\u9a8c\u547d\u540d\u89c4\u8303</strong>\uff1a<code>{date}_{model}_{dataset}_{key_hyperparam}</code></li>\n<li><strong>\u81ea\u52a8\u5316\u6e05\u7406</strong>\uff1a\u5b9a\u671f\u6e05\u7406\u8fc7\u671f\u7684\u5b9e\u9a8c\u5206\u652f\u548c\u68c0\u67e5\u70b9</li>\n<li><strong>\u589e\u91cf\u5f0f\u65e5\u5fd7</strong>\uff1a\u4f7f\u7528\u7ed3\u6784\u5316\u65e5\u5fd7\uff0c\u4fbf\u4e8e\u540e\u7eed\u5206\u6790</li>\n<li><strong>\u914d\u7f6e\u5feb\u7167</strong>\uff1a\u6bcf\u6b21\u5b9e\u9a8c\u5f00\u59cb\u65f6\u4fdd\u5b58\u5b8c\u6574\u914d\u7f6e\u5feb\u7167</li>\n</ol>\n<h2 id=\"_15\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_16\">\u57fa\u7840\u9898</h3>\n<p><strong>\u7ec3\u4e60 2.1\uff1a\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u9009\u62e9</strong>\n\u4f60\u7684\u56e2\u961f\u6b63\u5728\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 LLM \u540e\u8bad\u7ec3\u9879\u76ee\u3002\u9879\u76ee\u9700\u8981\u652f\u6301\uff1a(1) \u975e\u6280\u672f\u4eba\u5458\u8c03\u6574\u8d85\u53c2\u6570\uff1b(2) \u590d\u6742\u7684\u5d4c\u5957\u914d\u7f6e\uff1b(3) \u52a8\u6001\u8ba1\u7b97\u67d0\u4e9b\u53c2\u6570\u3002\u8bf7\u4e3a\u8fd9\u4e2a\u9879\u76ee\u9009\u62e9\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\uff0c\u5e76\u8bf4\u660e\u7406\u7531\u3002</p>\n<p><em>Hint: \u8003\u8651\u6df7\u5408\u65b9\u6848\uff0c\u4e0d\u540c\u5c42\u6b21\u4f7f\u7528\u4e0d\u540c\u683c\u5f0f\u3002</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u5efa\u8bae\u91c7\u7528\u6df7\u5408\u914d\u7f6e\u65b9\u6848\uff1a</p>\n<ul>\n<li><strong>\u57fa\u7840\u914d\u7f6e\u5c42\uff08YAML\uff09</strong>\uff1a\u7528\u4e8e\u975e\u6280\u672f\u4eba\u5458\u53ef\u8c03\u6574\u7684\u53c2\u6570\uff0c\u5982\u5b66\u4e60\u7387\u3001\u6279\u6b21\u5927\u5c0f\u7b49</li>\n<li><strong>\u9ad8\u7ea7\u914d\u7f6e\u5c42\uff08Python\uff09</strong>\uff1a\u7528\u4e8e\u9700\u8981\u52a8\u6001\u8ba1\u7b97\u7684\u53c2\u6570\uff0c\u5982\u6839\u636e GPU \u5185\u5b58\u81ea\u52a8\u8c03\u6574\u6279\u6b21\u5927\u5c0f</li>\n<li><strong>\u7528\u6237\u8986\u76d6\u5c42\uff08TOML\uff09</strong>\uff1a\u7528\u4e8e\u7528\u6237\u7279\u5b9a\u7684\u73af\u5883\u914d\u7f6e</li>\n</ul>\n<p>\u5b9e\u73b0\u65b9\u5f0f\uff1a</p>\n<ol>\n<li>\u5148\u52a0\u8f7d YAML \u57fa\u7840\u914d\u7f6e</li>\n<li>\u901a\u8fc7 Python \u914d\u7f6e\u7c7b\u8fdb\u884c\u52a8\u6001\u8ba1\u7b97\u548c\u9a8c\u8bc1</li>\n<li>\u6700\u540e\u5e94\u7528 TOML \u7528\u6237\u8986\u76d6</li>\n</ol>\n<p>\u8fd9\u6837\u65e2\u4fdd\u8bc1\u4e86\u6613\u7528\u6027\uff0c\u53c8\u63d0\u4f9b\u4e86\u8db3\u591f\u7684\u7075\u6d3b\u6027\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e60 2.2\uff1a\u5b9e\u9a8c\u8ffd\u8e2a\u5de5\u5177\u96c6\u6210</strong>\n\u8bbe\u8ba1\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u80fd\u591f\u540c\u65f6\u5411 MLflow \u548c W&amp;B \u8bb0\u5f55\u5b9e\u9a8c\u6307\u6807\u3002\u8981\u6c42\u652f\u6301\u6279\u91cf\u8bb0\u5f55\u548c\u5f02\u6b65\u5199\u5165\u3002</p>\n<p><em>Hint: \u4f7f\u7528\u9002\u914d\u5668\u6a21\u5f0f\u548c\u961f\u5217\u673a\u5236\u3002</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">abc</span> <span class=\"kn\">import</span> <span class=\"n\">ABC</span><span class=\"p\">,</span> <span class=\"n\">abstractmethod</span>\n<span class=\"kn\">from</span> <span class=\"nn\">queue</span> <span class=\"kn\">import</span> <span class=\"n\">Queue</span>\n<span class=\"kn\">from</span> <span class=\"nn\">threading</span> <span class=\"kn\">import</span> <span class=\"n\">Thread</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ExperimentTracker</span><span class=\"p\">(</span><span class=\"n\">ABC</span><span class=\"p\">):</span>\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">log_metrics</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span> <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UnifiedTracker</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">trackers</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">Queue</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">Thread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_process_queue</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add_tracker</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tracker</span><span class=\"p\">:</span> <span class=\"n\">ExperimentTracker</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">trackers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tracker</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">log_metrics</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u5f02\u6b65\u8bb0\u5f55</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">((</span><span class=\"s2\">&quot;metrics&quot;</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_process_queue</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"n\">item</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">item</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"k\">break</span>\n            <span class=\"n\">event_type</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">step</span> <span class=\"o\">=</span> <span class=\"n\">item</span>\n            <span class=\"k\">for</span> <span class=\"n\">tracker</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">trackers</span><span class=\"p\">:</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">log_metrics</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">)</span>\n                <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Tracker failed: </span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>\u5173\u952e\u70b9\uff1a</p>\n<ol>\n<li>\u7edf\u4e00\u63a5\u53e3\u62bd\u8c61</li>\n<li>\u5f02\u6b65\u961f\u5217\u907f\u514d\u963b\u585e\u8bad\u7ec3</li>\n<li>\u9519\u8bef\u9694\u79bb\uff0c\u5355\u4e2a tracker \u5931\u8d25\u4e0d\u5f71\u54cd\u5176\u4ed6</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 2.3\uff1aGit \u5206\u652f\u6e05\u7406\u7b56\u7565</strong>\n\u7f16\u5199\u4e00\u4e2a\u811a\u672c\uff0c\u81ea\u52a8\u6e05\u7406\u5b9e\u9a8c\u5206\u652f\u3002\u8981\u6c42\uff1a(1) \u4fdd\u7559\u6700\u8fd1 30 \u5929\u7684\u5206\u652f\uff1b(2) \u4fdd\u7559\u6709\u672a\u5408\u5e76\u63d0\u4ea4\u7684\u5206\u652f\uff1b(3) \u5f52\u6863\u91cd\u8981\u5b9e\u9a8c\u7ed3\u679c\u3002</p>\n<p><em>Hint: \u4f7f\u7528 git for-each-ref \u548c git cherry \u547d\u4ee4\u3002</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"ch\">#!/bin/bash</span>\n\ncleanup_experimental_branches<span class=\"o\">()</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">    </span><span class=\"nb\">local</span><span class=\"w\"> </span><span class=\"nv\">cutoff_date</span><span class=\"o\">=</span><span class=\"k\">$(</span>date<span class=\"w\"> </span>-d<span class=\"w\"> </span><span class=\"s2\">&quot;30 days ago&quot;</span><span class=\"w\"> </span>+%s<span class=\"k\">)</span>\n\n<span class=\"w\">    </span>git<span class=\"w\"> </span><span class=\"k\">for</span>-each-ref<span class=\"w\"> </span>--format<span class=\"o\">=</span><span class=\"s1\">&#39;%(refname:short) %(committerdate:unix)&#39;</span><span class=\"w\"> </span>refs/heads/exp/<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"nb\">read</span><span class=\"w\"> </span>branch<span class=\"w\"> </span>timestamp<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">do</span>\n<span class=\"w\">        </span><span class=\"c1\"># \u68c0\u67e5\u5e74\u9f84</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span><span class=\"nv\">$timestamp</span><span class=\"w\"> </span>-lt<span class=\"w\"> </span><span class=\"nv\">$cutoff_date</span><span class=\"w\"> </span><span class=\"o\">]</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">then</span>\n<span class=\"w\">            </span><span class=\"c1\"># \u68c0\u67e5\u662f\u5426\u6709\u672a\u5408\u5e76\u7684\u63d0\u4ea4</span>\n<span class=\"w\">            </span><span class=\"nv\">unmerged</span><span class=\"o\">=</span><span class=\"k\">$(</span>git<span class=\"w\"> </span>cherry<span class=\"w\"> </span>main<span class=\"w\"> </span><span class=\"nv\">$branch</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>grep<span class=\"w\"> </span><span class=\"s2\">&quot;^+&quot;</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>wc<span class=\"w\"> </span>-l<span class=\"k\">)</span>\n\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"w\"> </span><span class=\"nv\">$unmerged</span><span class=\"w\"> </span>-eq<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">]</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">then</span>\n<span class=\"w\">                </span><span class=\"c1\"># \u68c0\u67e5\u662f\u5426\u6807\u8bb0\u4e3a\u91cd\u8981</span>\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span>git<span class=\"w\"> </span>tag<span class=\"w\"> </span>--list<span class=\"w\"> </span><span class=\"s2\">&quot;important/</span><span class=\"nv\">$branch</span><span class=\"s2\">&quot;</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>grep<span class=\"w\"> </span>-q<span class=\"w\"> </span>.<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">then</span>\n<span class=\"w\">                    </span><span class=\"c1\"># \u5f52\u6863\u800c\u975e\u5220\u9664</span>\n<span class=\"w\">                    </span>git<span class=\"w\"> </span>tag<span class=\"w\"> </span>-a<span class=\"w\"> </span><span class=\"s2\">&quot;archive/</span><span class=\"k\">$(</span>date<span class=\"w\"> </span>+%Y%m<span class=\"k\">)</span><span class=\"s2\">/</span><span class=\"nv\">$branch</span><span class=\"s2\">&quot;</span><span class=\"w\"> </span><span class=\"nv\">$branch</span><span class=\"w\"> </span>-m<span class=\"w\"> </span><span class=\"s2\">&quot;Auto-archived&quot;</span>\n<span class=\"w\">                </span><span class=\"k\">fi</span>\n<span class=\"w\">                </span>git<span class=\"w\"> </span>branch<span class=\"w\"> </span>-D<span class=\"w\"> </span><span class=\"nv\">$branch</span>\n<span class=\"w\">                </span><span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Deleted: </span><span class=\"nv\">$branch</span><span class=\"s2\">&quot;</span>\n<span class=\"w\">            </span><span class=\"k\">else</span>\n<span class=\"w\">                </span><span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">&quot;Kept (unmerged): </span><span class=\"nv\">$branch</span><span class=\"s2\">&quot;</span>\n<span class=\"w\">            </span><span class=\"k\">fi</span>\n<span class=\"w\">        </span><span class=\"k\">fi</span>\n<span class=\"w\">    </span><span class=\"k\">done</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n\n<p>\u5173\u952e\u68c0\u67e5\uff1a</p>\n<ol>\n<li>\u65f6\u95f4\u6233\u6bd4\u8f83</li>\n<li>\u672a\u5408\u5e76\u63d0\u4ea4\u68c0\u6d4b</li>\n<li>\u91cd\u8981\u6027\u6807\u8bb0\u8bc6\u522b</li>\n</ol>\n</details>\n<h3 id=\"_17\">\u6311\u6218\u9898</h3>\n<p><strong>\u7ec3\u4e60 2.4\uff1a\u914d\u7f6e\u5dee\u5f02\u5206\u6790</strong>\n\u5b9e\u73b0\u4e00\u4e2a\u5de5\u5177\uff0c\u80fd\u591f\uff1a(1) \u6bd4\u8f83\u4e24\u4e2a\u5b9e\u9a8c\u7684\u914d\u7f6e\u5dee\u5f02\uff1b(2) \u8bc6\u522b\u54ea\u4e9b\u914d\u7f6e\u53d8\u5316\u5bfc\u81f4\u4e86\u6027\u80fd\u63d0\u5347\uff1b(3) \u751f\u6210\u914d\u7f6e\u4f18\u5316\u5efa\u8bae\u3002</p>\n<p><em>Hint: \u8003\u8651\u4f7f\u7528\u51b3\u7b56\u6811\u6216 SHAP \u503c\u5206\u6790\u914d\u7f6e\u91cd\u8981\u6027\u3002</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.ensemble</span> <span class=\"kn\">import</span> <span class=\"n\">RandomForestRegressor</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shap</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ConfigAnalyzer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">experiments</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">experiments</span> <span class=\"o\">=</span> <span class=\"n\">experiments</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">feature_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_extract_features</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_extract_features</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u63d0\u53d6\u6240\u6709\u914d\u7f6e\u952e</span>\n        <span class=\"n\">all_keys</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">experiments</span><span class=\"p\">:</span>\n            <span class=\"n\">all_keys</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_flatten_dict</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">all_keys</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_flatten_dict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">parent_key</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">):</span>\n        <span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">new_key</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">parent_key</span><span class=\"si\">}</span><span class=\"s2\">.</span><span class=\"si\">{</span><span class=\"n\">k</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"k\">if</span> <span class=\"n\">parent_key</span> <span class=\"k\">else</span> <span class=\"n\">k</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n                <span class=\"n\">items</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_flatten_dict</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">new_key</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">())</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">items</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">new_key</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">analyze_importance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s1\">&#39;accuracy&#39;</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u51c6\u5907\u6570\u636e</span>\n        <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">experiments</span><span class=\"p\">:</span>\n            <span class=\"n\">flat_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_flatten_dict</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">])</span>\n            <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">flat_config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">feature_names</span><span class=\"p\">]</span>\n            <span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)</span>\n            <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;metrics&#39;</span><span class=\"p\">][</span><span class=\"n\">metric</span><span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u8bad\u7ec3\u6a21\u578b</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">RandomForestRegressor</span><span class=\"p\">(</span><span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n        <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># SHAP \u5206\u6790</span>\n        <span class=\"n\">explainer</span> <span class=\"o\">=</span> <span class=\"n\">shap</span><span class=\"o\">.</span><span class=\"n\">TreeExplainer</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n        <span class=\"n\">shap_values</span> <span class=\"o\">=</span> <span class=\"n\">explainer</span><span class=\"o\">.</span><span class=\"n\">shap_values</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u751f\u6210\u91cd\u8981\u6027\u6392\u540d</span>\n        <span class=\"n\">importance</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">feature_names</span><span class=\"p\">):</span>\n            <span class=\"n\">importance</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">shap_values</span><span class=\"p\">[:,</span> <span class=\"n\">i</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">importance</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">(),</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">suggest_optimization</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">current_config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n        <span class=\"n\">importance</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">analyze_importance</span><span class=\"p\">()</span>\n        <span class=\"n\">suggestions</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"c1\"># \u627e\u51fa\u8868\u73b0\u6700\u597d\u7684\u914d\u7f6e</span>\n        <span class=\"n\">best_exp</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">experiments</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"s1\">&#39;metrics&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;accuracy&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">best_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_flatten_dict</span><span class=\"p\">(</span><span class=\"n\">best_exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">current_flat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_flatten_dict</span><span class=\"p\">(</span><span class=\"n\">current_config</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u57fa\u4e8e\u91cd\u8981\u6027\u751f\u6210\u5efa\u8bae</span>\n        <span class=\"k\">for</span> <span class=\"n\">param</span><span class=\"p\">,</span> <span class=\"n\">imp_score</span> <span class=\"ow\">in</span> <span class=\"n\">importance</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]:</span>  <span class=\"c1\"># Top 5 \u91cd\u8981\u53c2\u6570</span>\n            <span class=\"k\">if</span> <span class=\"n\">param</span> <span class=\"ow\">in</span> <span class=\"n\">best_config</span> <span class=\"ow\">and</span> <span class=\"n\">param</span> <span class=\"ow\">in</span> <span class=\"n\">current_flat</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">best_config</span><span class=\"p\">[</span><span class=\"n\">param</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">current_flat</span><span class=\"p\">[</span><span class=\"n\">param</span><span class=\"p\">]:</span>\n                    <span class=\"n\">suggestions</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                        <span class=\"s1\">&#39;parameter&#39;</span><span class=\"p\">:</span> <span class=\"n\">param</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;current&#39;</span><span class=\"p\">:</span> <span class=\"n\">current_flat</span><span class=\"p\">[</span><span class=\"n\">param</span><span class=\"p\">],</span>\n                        <span class=\"s1\">&#39;suggested&#39;</span><span class=\"p\">:</span> <span class=\"n\">best_config</span><span class=\"p\">[</span><span class=\"n\">param</span><span class=\"p\">],</span>\n                        <span class=\"s1\">&#39;importance&#39;</span><span class=\"p\">:</span> <span class=\"n\">imp_score</span>\n                    <span class=\"p\">})</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">suggestions</span>\n</code></pre></div>\n\n<p>\u6838\u5fc3\u601d\u8def\uff1a</p>\n<ol>\n<li>\u4f7f\u7528\u968f\u673a\u68ee\u6797\u5b66\u4e60\u914d\u7f6e\u5230\u6027\u80fd\u7684\u6620\u5c04</li>\n<li>SHAP \u503c\u91cf\u5316\u6bcf\u4e2a\u914d\u7f6e\u7684\u8d21\u732e</li>\n<li>\u57fa\u4e8e\u5386\u53f2\u6700\u4f73\u5b9e\u8df5\u751f\u6210\u4f18\u5316\u5efa\u8bae</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 2.5\uff1a\u5b9e\u9a8c\u4ee3\u7801\u7248\u672c\u9694\u79bb</strong>\n\u8bbe\u8ba1\u4e00\u4e2a\u7cfb\u7edf\uff0c\u80fd\u591f\u4e3a\u6bcf\u4e2a\u5b9e\u9a8c\u521b\u5efa\u9694\u79bb\u7684\u4ee3\u7801\u73af\u5883\uff0c\u652f\u6301\uff1a(1) \u4ee3\u7801\u5feb\u7167\uff1b(2) \u4f9d\u8d56\u7248\u672c\u9501\u5b9a\uff1b(3) \u5feb\u901f\u5207\u6362\u548c\u6062\u590d\u3002</p>\n<p><em>Hint: \u7ed3\u5408 Git worktree\u3001Docker \u6216 Python \u865a\u62df\u73af\u5883\u3002</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">import</span> <span class=\"nn\">venv</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ExperimentEnvironment</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">base_dir</span><span class=\"p\">:</span> <span class=\"n\">Path</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_dir</span> <span class=\"o\">=</span> <span class=\"n\">base_dir</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">envs_dir</span> <span class=\"o\">=</span> <span class=\"n\">base_dir</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;environments&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">envs_dir</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">exist_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">create_environment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">exp_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n        <span class=\"n\">env_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">envs_dir</span> <span class=\"o\">/</span> <span class=\"n\">exp_id</span>\n\n        <span class=\"c1\"># 1. \u521b\u5efa Git worktree</span>\n        <span class=\"n\">worktree_path</span> <span class=\"o\">=</span> <span class=\"n\">env_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;code&quot;</span>\n        <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span>\n            <span class=\"s2\">&quot;git&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;worktree&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;add&quot;</span><span class=\"p\">,</span> \n            <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">worktree_path</span><span class=\"p\">),</span> \n            <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;git_commit&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HEAD&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n\n        <span class=\"c1\"># 2. \u521b\u5efa Python \u865a\u62df\u73af\u5883</span>\n        <span class=\"n\">venv_path</span> <span class=\"o\">=</span> <span class=\"n\">env_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;venv&quot;</span>\n        <span class=\"n\">venv</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">venv_path</span><span class=\"p\">,</span> <span class=\"n\">with_pip</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># 3. \u9501\u5b9a\u4f9d\u8d56\u7248\u672c</span>\n        <span class=\"n\">pip_path</span> <span class=\"o\">=</span> <span class=\"n\">venv_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;bin&quot;</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;pip&quot;</span>\n        <span class=\"n\">requirements</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;requirements&quot;</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n\n        <span class=\"c1\"># \u751f\u6210 requirements.txt</span>\n        <span class=\"n\">req_file</span> <span class=\"o\">=</span> <span class=\"n\">env_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;requirements.txt&quot;</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">req_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">pkg</span> <span class=\"ow\">in</span> <span class=\"n\">requirements</span><span class=\"p\">:</span>\n                <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">pkg</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5b89\u88c5\u4f9d\u8d56</span>\n        <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span>\n            <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pip_path</span><span class=\"p\">),</span> <span class=\"s2\">&quot;install&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-r&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">req_file</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n\n        <span class=\"c1\"># 4. \u4fdd\u5b58\u73af\u5883\u5143\u6570\u636e</span>\n        <span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;exp_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">exp_id</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;created_at&quot;</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;git_commit&quot;</span><span class=\"p\">:</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_output</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;git&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rev-parse&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HEAD&quot;</span><span class=\"p\">],</span> \n                <span class=\"n\">cwd</span><span class=\"o\">=</span><span class=\"n\">worktree_path</span>\n            <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(),</span>\n            <span class=\"s2\">&quot;config&quot;</span><span class=\"p\">:</span> <span class=\"n\">config</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">env_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;metadata.json&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">metadata</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">env_path</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">activate_environment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">exp_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"n\">env_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">envs_dir</span> <span class=\"o\">/</span> <span class=\"n\">exp_id</span>\n\n        <span class=\"c1\"># \u751f\u6210\u6fc0\u6d3b\u811a\u672c</span>\n        <span class=\"n\">activate_script</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">#!/bin/bash</span>\n<span class=\"s2\">export EXPERIMENT_ID=</span><span class=\"si\">{</span><span class=\"n\">exp_id</span><span class=\"si\">}</span>\n<span class=\"s2\">export PYTHONPATH=</span><span class=\"si\">{</span><span class=\"n\">env_path</span><span class=\"si\">}</span><span class=\"s2\">/code:$PYTHONPATH</span>\n<span class=\"s2\">source </span><span class=\"si\">{</span><span class=\"n\">env_path</span><span class=\"si\">}</span><span class=\"s2\">/venv/bin/activate</span>\n<span class=\"s2\">cd </span><span class=\"si\">{</span><span class=\"n\">env_path</span><span class=\"si\">}</span><span class=\"s2\">/code</span>\n<span class=\"s2\">echo &quot;Environment </span><span class=\"si\">{</span><span class=\"n\">exp_id</span><span class=\"si\">}</span><span class=\"s2\"> activated&quot;</span>\n<span class=\"s2\">&quot;&quot;&quot;</span>\n\n        <span class=\"n\">script_path</span> <span class=\"o\">=</span> <span class=\"n\">env_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;activate.sh&quot;</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">script_path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">activate_script</span><span class=\"p\">)</span>\n\n        <span class=\"n\">script_path</span><span class=\"o\">.</span><span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"mo\">0o755</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">script_path</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">cleanup_environment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">exp_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">archive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">env_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">envs_dir</span> <span class=\"o\">/</span> <span class=\"n\">exp_id</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">archive</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u5f52\u6863\u91cd\u8981\u6587\u4ef6</span>\n            <span class=\"n\">archive_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_dir</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;archives&quot;</span> <span class=\"o\">/</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">exp_id</span><span class=\"si\">}</span><span class=\"s2\">.tar.gz&quot;</span>\n            <span class=\"n\">archive_path</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">exist_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n            <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span>\n                <span class=\"s2\">&quot;tar&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;czf&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">archive_path</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;-C&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">envs_dir</span><span class=\"p\">),</span>\n                <span class=\"n\">exp_id</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;--exclude&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;venv&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;--exclude&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;.git&quot;</span>\n            <span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u6e05\u7406 worktree</span>\n        <span class=\"n\">worktree_path</span> <span class=\"o\">=</span> <span class=\"n\">env_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;code&quot;</span>\n        <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"s2\">&quot;git&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;worktree&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;remove&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">worktree_path</span><span class=\"p\">)])</span>\n\n        <span class=\"c1\"># \u5220\u9664\u73af\u5883\u76ee\u5f55</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">shutil</span>\n        <span class=\"n\">shutil</span><span class=\"o\">.</span><span class=\"n\">rmtree</span><span class=\"p\">(</span><span class=\"n\">env_path</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>\u5173\u952e\u7279\u6027\uff1a</p>\n<ol>\n<li>Git worktree \u63d0\u4f9b\u4ee3\u7801\u9694\u79bb</li>\n<li>Python venv \u63d0\u4f9b\u4f9d\u8d56\u9694\u79bb  </li>\n<li>\u5143\u6570\u636e\u8bb0\u5f55\u4fdd\u8bc1\u53ef\u8ffd\u6eaf\u6027</li>\n<li>\u5f52\u6863\u673a\u5236\u4fdd\u7559\u91cd\u8981\u5b9e\u9a8c</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 2.6\uff1a\u5206\u5e03\u5f0f\u5b9e\u9a8c\u534f\u8c03</strong>\n\u8bbe\u8ba1\u4e00\u4e2a\u5206\u5e03\u5f0f\u5b9e\u9a8c\u7ba1\u7406\u7cfb\u7edf\uff0c\u652f\u6301\uff1a(1) \u591a\u673a\u5668\u4e0a\u7684\u5b9e\u9a8c\u8c03\u5ea6\uff1b(2) \u8d44\u6e90\uff08GPU\uff09\u5206\u914d\uff1b(3) \u5b9e\u9a8c\u5931\u8d25\u81ea\u52a8\u91cd\u8bd5\u3002</p>\n<p><em>Hint: \u8003\u8651\u4f7f\u7528\u6d88\u606f\u961f\u5217\u548c\u72b6\u6001\u673a\u3002</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">enum</span> <span class=\"kn\">import</span> <span class=\"n\">Enum</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n<span class=\"kn\">import</span> <span class=\"nn\">redis</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Optional</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ExperimentState</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">PENDING</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pending&quot;</span>\n    <span class=\"n\">RUNNING</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;running&quot;</span>\n    <span class=\"n\">COMPLETED</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;completed&quot;</span>\n    <span class=\"n\">FAILED</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;failed&quot;</span>\n    <span class=\"n\">RETRYING</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;retrying&quot;</span>\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">ExperimentJob</span><span class=\"p\">:</span>\n    <span class=\"n\">exp_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>\n    <span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ExperimentState</span>\n    <span class=\"n\">assigned_worker</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">retry_count</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">max_retries</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">DistributedExperimentScheduler</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">redis_host</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span> <span class=\"o\">=</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">Redis</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">redis_host</span><span class=\"p\">,</span> <span class=\"n\">decode_responses</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_queue</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;experiment_queue&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">worker_status</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;worker_status&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">submit_experiment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">exp_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n        <span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">ExperimentJob</span><span class=\"p\">(</span>\n            <span class=\"n\">exp_id</span><span class=\"o\">=</span><span class=\"n\">exp_id</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span>\n            <span class=\"n\">state</span><span class=\"o\">=</span><span class=\"n\">ExperimentState</span><span class=\"o\">.</span><span class=\"n\">PENDING</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u52a0\u5165\u961f\u5217</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">lpush</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_queue</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span>\n            <span class=\"s1\">&#39;exp_id&#39;</span><span class=\"p\">:</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">exp_id</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;state&#39;</span><span class=\"p\">:</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;retry_count&#39;</span><span class=\"p\">:</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">retry_count</span>\n        <span class=\"p\">}))</span>\n\n        <span class=\"c1\"># \u8bb0\u5f55\u4f5c\u4e1a\u72b6\u6001</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">hset</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;job:</span><span class=\"si\">{</span><span class=\"n\">exp_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">mapping</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s1\">&#39;state&#39;</span><span class=\"p\">:</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;submitted_at&#39;</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()</span>\n        <span class=\"p\">})</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">worker_loop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">worker_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">resources</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5de5\u4f5c\u8282\u70b9\u4e3b\u5faa\u73af&quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># \u6ce8\u518c\u5de5\u4f5c\u8282\u70b9</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">hset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">worker_status</span><span class=\"p\">,</span> <span class=\"n\">worker_id</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span>\n            <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;idle&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"n\">resources</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;last_heartbeat&#39;</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()</span>\n        <span class=\"p\">}))</span>\n\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u83b7\u53d6\u4efb\u52a1</span>\n            <span class=\"n\">job_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">brpop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_queue</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">job_data</span><span class=\"p\">:</span>\n                <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">job_str</span> <span class=\"o\">=</span> <span class=\"n\">job_data</span>\n                <span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">job_str</span><span class=\"p\">)</span>\n\n                <span class=\"c1\"># \u68c0\u67e5\u8d44\u6e90\u9700\u6c42</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_can_run</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">[</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">],</span> <span class=\"n\">resources</span><span class=\"p\">):</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_run_experiment</span><span class=\"p\">(</span><span class=\"n\">worker_id</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"c1\"># \u653e\u56de\u961f\u5217\u672b\u5c3e</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">lpush</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_queue</span><span class=\"p\">,</span> <span class=\"n\">job_str</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># \u53d1\u9001\u5fc3\u8df3</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_heartbeat</span><span class=\"p\">(</span><span class=\"n\">worker_id</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_can_run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">resources</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u67e5\u8d44\u6e90\u662f\u5426\u6ee1\u8db3\u9700\u6c42&quot;&quot;&quot;</span>\n        <span class=\"n\">required_gpus</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;num_gpus&#39;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">available_gpus</span> <span class=\"o\">=</span> <span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;gpus&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n        <span class=\"n\">required_memory</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;memory_gb&#39;</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">)</span>\n        <span class=\"n\">available_memory</span> <span class=\"o\">=</span> <span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;memory_gb&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">available_gpus</span> <span class=\"o\">&gt;=</span> <span class=\"n\">required_gpus</span> <span class=\"ow\">and</span> \n                <span class=\"n\">available_memory</span> <span class=\"o\">&gt;=</span> <span class=\"n\">required_memory</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_run_experiment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">worker_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n        <span class=\"n\">exp_id</span> <span class=\"o\">=</span> <span class=\"n\">job</span><span class=\"p\">[</span><span class=\"s1\">&#39;exp_id&#39;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u66f4\u65b0\u72b6\u6001</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">hset</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;job:</span><span class=\"si\">{</span><span class=\"n\">exp_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">mapping</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s1\">&#39;state&#39;</span><span class=\"p\">:</span> <span class=\"n\">ExperimentState</span><span class=\"o\">.</span><span class=\"n\">RUNNING</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;worker&#39;</span><span class=\"p\">:</span> <span class=\"n\">worker_id</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;started_at&#39;</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()</span>\n            <span class=\"p\">})</span>\n\n            <span class=\"c1\"># \u66f4\u65b0\u5de5\u4f5c\u8282\u70b9\u72b6\u6001</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">hset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">worker_status</span><span class=\"p\">,</span> <span class=\"n\">worker_id</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span>\n                <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;busy&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;current_job&#39;</span><span class=\"p\">:</span> <span class=\"n\">exp_id</span>\n            <span class=\"p\">}))</span>\n\n            <span class=\"c1\"># \u6267\u884c\u5b9e\u9a8c</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_execute_experiment</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">[</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">])</span>\n\n            <span class=\"c1\"># \u6807\u8bb0\u5b8c\u6210</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">hset</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;job:</span><span class=\"si\">{</span><span class=\"n\">exp_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">mapping</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s1\">&#39;state&#39;</span><span class=\"p\">:</span> <span class=\"n\">ExperimentState</span><span class=\"o\">.</span><span class=\"n\">COMPLETED</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;completed_at&#39;</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span>\n                <span class=\"s1\">&#39;result&#39;</span><span class=\"p\">:</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n            <span class=\"p\">})</span>\n\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u5904\u7406\u5931\u8d25</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_handle_failure</span><span class=\"p\">(</span><span class=\"n\">exp_id</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_handle_failure</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">exp_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"n\">retry_count</span> <span class=\"o\">=</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;retry_count&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">max_retries</span> <span class=\"o\">=</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;max_retries&#39;</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">retry_count</span> <span class=\"o\">&lt;</span> <span class=\"n\">max_retries</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u91cd\u8bd5</span>\n            <span class=\"n\">job</span><span class=\"p\">[</span><span class=\"s1\">&#39;retry_count&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">retry_count</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n            <span class=\"n\">job</span><span class=\"p\">[</span><span class=\"s1\">&#39;state&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ExperimentState</span><span class=\"o\">.</span><span class=\"n\">RETRYING</span><span class=\"o\">.</span><span class=\"n\">value</span>\n\n            <span class=\"c1\"># \u5ef6\u8fdf\u91cd\u8bd5\uff08\u6307\u6570\u9000\u907f\uff09</span>\n            <span class=\"n\">delay</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">**</span> <span class=\"n\">retry_count</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">lpush</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_queue</span><span class=\"si\">}</span><span class=\"s2\">:delayed:</span><span class=\"si\">{</span><span class=\"n\">delay</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> \n                           <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">))</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">hset</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;job:</span><span class=\"si\">{</span><span class=\"n\">exp_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">mapping</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s1\">&#39;state&#39;</span><span class=\"p\">:</span> <span class=\"n\">ExperimentState</span><span class=\"o\">.</span><span class=\"n\">RETRYING</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;retry_count&#39;</span><span class=\"p\">:</span> <span class=\"n\">retry_count</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;last_error&#39;</span><span class=\"p\">:</span> <span class=\"n\">error</span>\n            <span class=\"p\">})</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u6700\u7ec8\u5931\u8d25</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">hset</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;job:</span><span class=\"si\">{</span><span class=\"n\">exp_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">mapping</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s1\">&#39;state&#39;</span><span class=\"p\">:</span> <span class=\"n\">ExperimentState</span><span class=\"o\">.</span><span class=\"n\">FAILED</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;failed_at&#39;</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span>\n                <span class=\"s1\">&#39;error&#39;</span><span class=\"p\">:</span> <span class=\"n\">error</span>\n            <span class=\"p\">})</span>\n</code></pre></div>\n\n<p>\u7cfb\u7edf\u8bbe\u8ba1\u8981\u70b9\uff1a</p>\n<ol>\n<li>Redis \u4f5c\u4e3a\u4e2d\u592e\u534f\u8c03\u5668</li>\n<li>\u57fa\u4e8e\u8d44\u6e90\u7684\u4efb\u52a1\u5206\u914d</li>\n<li>\u72b6\u6001\u673a\u7ba1\u7406\u5b9e\u9a8c\u751f\u547d\u5468\u671f</li>\n<li>\u6307\u6570\u9000\u907f\u7684\u91cd\u8bd5\u673a\u5236</li>\n<li>\u5fc3\u8df3\u673a\u5236\u68c0\u6d4b\u5de5\u4f5c\u8282\u70b9\u5065\u5eb7</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 2.7\uff1a\u4ee3\u7801\u8150\u5316\u5ea6\u91cf\u4e0e\u9884\u8b66</strong>\n\u5f00\u53d1\u4e00\u4e2a\u7cfb\u7edf\uff0c\u80fd\u591f\uff1a(1) \u91cf\u5316\u4ee3\u7801\u8150\u5316\u7a0b\u5ea6\uff1b(2) \u9884\u6d4b\u6280\u672f\u503a\u52a1\u589e\u957f\u8d8b\u52bf\uff1b(3) \u81ea\u52a8\u751f\u6210\u91cd\u6784\u5efa\u8bae\u3002</p>\n<p><em>Hint: \u7ed3\u5408\u9759\u6001\u5206\u6790\u3001Git \u5386\u53f2\u548c\u590d\u6742\u5ea6\u5ea6\u91cf\u3002</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">ast</span>\n<span class=\"kn\">import</span> <span class=\"nn\">git</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.linear_model</span> <span class=\"kn\">import</span> <span class=\"n\">LinearRegression</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CodeHealthMonitor</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">repo_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">git</span><span class=\"o\">.</span><span class=\"n\">Repo</span><span class=\"p\">(</span><span class=\"n\">repo_path</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metrics_history</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">calculate_health_score</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8ba1\u7b97\u4ee3\u7801\u5065\u5eb7\u5ea6\u5f97\u5206 (0-100)&quot;&quot;&quot;</span>\n        <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_measure_complexity</span><span class=\"p\">(),</span>\n            <span class=\"s1\">&#39;duplication&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_measure_duplication</span><span class=\"p\">(),</span>\n            <span class=\"s1\">&#39;test_coverage&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_measure_test_coverage</span><span class=\"p\">(),</span>\n            <span class=\"s1\">&#39;debt_density&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_measure_technical_debt</span><span class=\"p\">(),</span>\n            <span class=\"s1\">&#39;change_frequency&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_measure_change_frequency</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\"># \u52a0\u6743\u8ba1\u7b97\u603b\u5206</span>\n        <span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.3</span><span class=\"p\">,</span>      <span class=\"c1\"># \u590d\u6742\u5ea6\u8d8a\u9ad8\u5206\u6570\u8d8a\u4f4e</span>\n            <span class=\"s1\">&#39;duplication&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.2</span><span class=\"p\">,</span>     <span class=\"c1\"># \u91cd\u590d\u4ee3\u7801\u8d8a\u591a\u5206\u6570\u8d8a\u4f4e</span>\n            <span class=\"s1\">&#39;test_coverage&#39;</span><span class=\"p\">:</span> <span class=\"mf\">0.25</span><span class=\"p\">,</span>   <span class=\"c1\"># \u6d4b\u8bd5\u8986\u76d6\u7387\u8d8a\u9ad8\u5206\u6570\u8d8a\u9ad8</span>\n            <span class=\"s1\">&#39;debt_density&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.15</span><span class=\"p\">,</span>   <span class=\"c1\"># \u6280\u672f\u503a\u52a1\u8d8a\u591a\u5206\u6570\u8d8a\u4f4e</span>\n            <span class=\"s1\">&#39;change_frequency&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.1</span> <span class=\"c1\"># \u9891\u7e41\u4fee\u6539\u7684\u4ee3\u7801\u5206\u6570\u8d8a\u4f4e</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>  <span class=\"c1\"># \u57fa\u51c6\u5206</span>\n        <span class=\"k\">for</span> <span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">score</span> <span class=\"o\">+=</span> <span class=\"n\">weights</span><span class=\"p\">[</span><span class=\"n\">metric</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">value</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_measure_complexity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6d4b\u91cf\u5708\u590d\u6742\u5ea6&quot;&quot;&quot;</span>\n        <span class=\"n\">total_complexity</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">file_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">py_file</span> <span class=\"ow\">in</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repo</span><span class=\"o\">.</span><span class=\"n\">working_dir</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">rglob</span><span class=\"p\">(</span><span class=\"s2\">&quot;*.py&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">py_file</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n                <span class=\"n\">complexity</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_calculate_cyclomatic_complexity</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"p\">)</span>\n                <span class=\"n\">total_complexity</span> <span class=\"o\">+=</span> <span class=\"n\">complexity</span>\n                <span class=\"n\">file_count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">total_complexity</span> <span class=\"o\">/</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">file_count</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_measure_duplication</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u6d4b\u91cf\u4ee3\u7801\u91cd\u590d\u7387&quot;&quot;&quot;</span>\n        <span class=\"c1\"># \u4f7f\u7528\u7b80\u5316\u7684\u65b9\u6cd5\uff1a\u76f8\u4f3c\u4ee3\u7801\u5757\u68c0\u6d4b</span>\n        <span class=\"n\">code_blocks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">py_file</span> <span class=\"ow\">in</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repo</span><span class=\"o\">.</span><span class=\"n\">working_dir</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">rglob</span><span class=\"p\">(</span><span class=\"s2\">&quot;*.py&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">py_file</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n                <span class=\"c1\"># \u63d0\u53d6\u51fd\u6570\u4f53\u4f5c\u4e3a\u4ee3\u7801\u5757</span>\n                <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">)</span>\n                <span class=\"k\">for</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"p\">):</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">FunctionDef</span><span class=\"p\">):</span>\n                        <span class=\"n\">code_blocks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">unparse</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u76f8\u4f3c\u5ea6</span>\n        <span class=\"n\">duplicates</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">block1</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">code_blocks</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">block2</span> <span class=\"ow\">in</span> <span class=\"n\">code_blocks</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">:]:</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_similarity</span><span class=\"p\">(</span><span class=\"n\">block1</span><span class=\"p\">,</span> <span class=\"n\">block2</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.8</span><span class=\"p\">:</span>\n                    <span class=\"n\">duplicates</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">duplicates</span> <span class=\"o\">/</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">code_blocks</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">100</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">predict_debt_growth</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">days_ahead</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u9884\u6d4b\u6280\u672f\u503a\u52a1\u589e\u957f\u8d8b\u52bf&quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># \u6536\u96c6\u5386\u53f2\u6570\u636e</span>\n        <span class=\"n\">history</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">days_ago</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">7</span><span class=\"p\">):</span>  <span class=\"c1\"># \u8fc7\u53bb90\u5929\uff0c\u6bcf\u5468\u91c7\u6837</span>\n            <span class=\"n\">date</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"n\">days_ago</span><span class=\"p\">)</span>\n            <span class=\"n\">commit</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_commit_at_date</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">commit</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repo</span><span class=\"o\">.</span><span class=\"n\">git</span><span class=\"o\">.</span><span class=\"n\">checkout</span><span class=\"p\">(</span><span class=\"n\">commit</span><span class=\"o\">.</span><span class=\"n\">hexsha</span><span class=\"p\">)</span>\n                <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;date&#39;</span><span class=\"p\">:</span> <span class=\"n\">date</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;debt_count&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_count_debt_markers</span><span class=\"p\">(),</span>\n                    <span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_measure_complexity</span><span class=\"p\">()</span>\n                <span class=\"p\">}</span>\n                <span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">metrics</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u56de\u5230\u5f53\u524d\u5206\u652f</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repo</span><span class=\"o\">.</span><span class=\"n\">git</span><span class=\"o\">.</span><span class=\"n\">checkout</span><span class=\"p\">(</span><span class=\"s1\">&#39;main&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u7ebf\u6027\u56de\u5f52\u9884\u6d4b</span>\n        <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">history</span><span class=\"p\">))])</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"s1\">&#39;debt_count&#39;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">h</span> <span class=\"ow\">in</span> <span class=\"n\">history</span><span class=\"p\">])</span>\n\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">LinearRegression</span><span class=\"p\">()</span>\n        <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u9884\u6d4b\u672a\u6765</span>\n        <span class=\"n\">future_x</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">history</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">days_ahead</span> <span class=\"o\">//</span> <span class=\"mi\">7</span>\n        <span class=\"n\">predicted_debt</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">([[</span><span class=\"n\">future_x</span><span class=\"p\">]])[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;current_debt&#39;</span><span class=\"p\">:</span> <span class=\"n\">history</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"s1\">&#39;debt_count&#39;</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">history</span> <span class=\"k\">else</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;predicted_debt&#39;</span><span class=\"p\">:</span> <span class=\"n\">predicted_debt</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;growth_rate&#39;</span><span class=\"p\">:</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">coef_</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n            <span class=\"s1\">&#39;confidence&#39;</span><span class=\"p\">:</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">generate_refactoring_suggestions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u751f\u6210\u91cd\u6784\u5efa\u8bae&quot;&quot;&quot;</span>\n        <span class=\"n\">suggestions</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"c1\"># \u5206\u6790\u70ed\u70b9\u6587\u4ef6\uff08\u9891\u7e41\u4fee\u6539\u4e14\u590d\u6742\u5ea6\u9ad8\uff09</span>\n        <span class=\"n\">hotspots</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_identify_hotspots</span><span class=\"p\">()</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">metrics</span> <span class=\"ow\">in</span> <span class=\"n\">hotspots</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]:</span>  <span class=\"c1\"># Top 5 \u70ed\u70b9</span>\n            <span class=\"n\">suggestion</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;file&#39;</span><span class=\"p\">:</span> <span class=\"n\">file_path</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;reason&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n                <span class=\"s1\">&#39;actions&#39;</span><span class=\"p\">:</span> <span class=\"p\">[]</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n                <span class=\"n\">suggestion</span><span class=\"p\">[</span><span class=\"s1\">&#39;reason&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;\u9ad8\u590d\u6742\u5ea6: </span><span class=\"si\">{</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">suggestion</span><span class=\"p\">[</span><span class=\"s1\">&#39;actions&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u62c6\u5206\u5927\u51fd\u6570\u4e3a\u66f4\u5c0f\u7684\u529f\u80fd\u5355\u5143&quot;</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;change_frequency&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">20</span><span class=\"p\">:</span>\n                <span class=\"n\">suggestion</span><span class=\"p\">[</span><span class=\"s1\">&#39;reason&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;\u9891\u7e41\u4fee\u6539: </span><span class=\"si\">{</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;change_frequency&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">\u6b21/\u6708&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">suggestion</span><span class=\"p\">[</span><span class=\"s1\">&#39;actions&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u8003\u8651\u62bd\u8c61\u51fa\u7a33\u5b9a\u63a5\u53e3&quot;</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;duplication&#39;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">20</span><span class=\"p\">:</span>\n                <span class=\"n\">suggestion</span><span class=\"p\">[</span><span class=\"s1\">&#39;reason&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;\u4ee3\u7801\u91cd\u590d: </span><span class=\"si\">{</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;duplication&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">%&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">suggestion</span><span class=\"p\">[</span><span class=\"s1\">&#39;actions&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u63d0\u53d6\u516c\u5171\u4ee3\u7801\u5230\u5de5\u5177\u6a21\u5757&quot;</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;test_coverage&#39;</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mi\">50</span><span class=\"p\">:</span>\n                <span class=\"n\">suggestion</span><span class=\"p\">[</span><span class=\"s1\">&#39;reason&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;\u6d4b\u8bd5\u8986\u76d6\u7387\u4f4e: </span><span class=\"si\">{</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;test_coverage&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">%&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">suggestion</span><span class=\"p\">[</span><span class=\"s1\">&#39;actions&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u589e\u52a0\u5355\u5143\u6d4b\u8bd5\u8986\u76d6&quot;</span><span class=\"p\">)</span>\n\n            <span class=\"n\">suggestions</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">suggestion</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">suggestions</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_identify_hotspots</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8bc6\u522b\u4ee3\u7801\u70ed\u70b9&quot;&quot;&quot;</span>\n        <span class=\"n\">file_metrics</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"c1\"># \u5206\u6790 Git \u5386\u53f2</span>\n        <span class=\"k\">for</span> <span class=\"n\">commit</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repo</span><span class=\"o\">.</span><span class=\"n\">iter_commits</span><span class=\"p\">(</span><span class=\"s1\">&#39;main&#39;</span><span class=\"p\">,</span> <span class=\"n\">max_count</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">commit</span><span class=\"o\">.</span><span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;.py&#39;</span><span class=\"p\">):</span>\n                    <span class=\"k\">if</span> <span class=\"n\">file</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">file_metrics</span><span class=\"p\">:</span>\n                        <span class=\"n\">file_metrics</span><span class=\"p\">[</span><span class=\"n\">file</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                            <span class=\"s1\">&#39;change_frequency&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                            <span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                            <span class=\"s1\">&#39;duplication&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                            <span class=\"s1\">&#39;test_coverage&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"n\">file_metrics</span><span class=\"p\">[</span><span class=\"n\">file</span><span class=\"p\">][</span><span class=\"s1\">&#39;change_frequency&#39;</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u5f53\u524d\u6307\u6807</span>\n        <span class=\"k\">for</span> <span class=\"n\">file_path</span> <span class=\"ow\">in</span> <span class=\"n\">file_metrics</span><span class=\"p\">:</span>\n            <span class=\"n\">full_path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repo</span><span class=\"o\">.</span><span class=\"n\">working_dir</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">file_path</span>\n            <span class=\"k\">if</span> <span class=\"n\">full_path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n                <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">full_path</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                    <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n                    <span class=\"n\">file_metrics</span><span class=\"p\">[</span><span class=\"n\">file_path</span><span class=\"p\">][</span><span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> \\\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_calculate_cyclomatic_complexity</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u6309\u7efc\u5408\u5f97\u5206\u6392\u5e8f</span>\n        <span class=\"n\">scored</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">metrics</span> <span class=\"ow\">in</span> <span class=\"n\">file_metrics</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;change_frequency&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mf\">0.4</span> <span class=\"o\">+</span> \n                    <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;complexity&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mf\">0.4</span> <span class=\"o\">+</span>\n                    <span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"s1\">&#39;duplication&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mf\">0.2</span><span class=\"p\">)</span>\n            <span class=\"n\">scored</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"p\">))</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">scored</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>\u76d1\u63a7\u7cfb\u7edf\u7279\u70b9\uff1a</p>\n<ol>\n<li>\u591a\u7ef4\u5ea6\u5065\u5eb7\u8bc4\u5206</li>\n<li>\u57fa\u4e8e\u5386\u53f2\u6570\u636e\u7684\u8d8b\u52bf\u9884\u6d4b</li>\n<li>\u70ed\u70b9\u5206\u6790\u8bc6\u522b\u95ee\u9898\u533a\u57df</li>\n<li>\u53ef\u64cd\u4f5c\u7684\u91cd\u6784\u5efa\u8bae</li>\n<li>\u6301\u7eed\u76d1\u63a7\u548c\u9884\u8b66\u673a\u5236</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 2.8\uff1a\u5b9e\u9a8c\u7ed3\u679c\u81ea\u52a8\u5206\u6790</strong>\n\u5b9e\u73b0\u4e00\u4e2a\u7cfb\u7edf\uff0c\u80fd\u591f\u81ea\u52a8\u5206\u6790\u5b9e\u9a8c\u7ed3\u679c\uff0c\u8bc6\u522b\uff1a(1) \u5f02\u5e38\u5b9e\u9a8c\uff1b(2) \u6027\u80fd\u74f6\u9888\uff1b(3) \u6700\u4f18\u914d\u7f6e\u7ec4\u5408\u3002</p>\n<p><em>Hint: \u4f7f\u7528\u5f02\u5e38\u68c0\u6d4b\u3001\u6027\u80fd\u5256\u6790\u548c\u8d1d\u53f6\u65af\u4f18\u5316\u3002</em></p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"kn\">import</span> <span class=\"n\">stats</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.gaussian_process</span> <span class=\"kn\">import</span> <span class=\"n\">GaussianProcessRegressor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.gaussian_process.kernels</span> <span class=\"kn\">import</span> <span class=\"n\">Matern</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ExperimentAnalyzer</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">experiment_history</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">history</span> <span class=\"o\">=</span> <span class=\"n\">experiment_history</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">detect_anomalies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u6d4b\u5f02\u5e38\u5b9e\u9a8c&quot;&quot;&quot;</span>\n        <span class=\"n\">anomalies</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"c1\"># \u63d0\u53d6\u5173\u952e\u6307\u6807</span>\n        <span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;loss&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;accuracy&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;training_time&#39;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">metric</span> <span class=\"ow\">in</span> <span class=\"n\">metrics</span><span class=\"p\">:</span>\n            <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;metrics&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">]</span>\n\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n\n            <span class=\"c1\"># \u4f7f\u7528 IQR \u65b9\u6cd5\u68c0\u6d4b\u5f02\u5e38</span>\n            <span class=\"n\">q1</span><span class=\"p\">,</span> <span class=\"n\">q3</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">percentile</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">])</span>\n            <span class=\"n\">iqr</span> <span class=\"o\">=</span> <span class=\"n\">q3</span> <span class=\"o\">-</span> <span class=\"n\">q1</span>\n            <span class=\"n\">lower_bound</span> <span class=\"o\">=</span> <span class=\"n\">q1</span> <span class=\"o\">-</span> <span class=\"mf\">1.5</span> <span class=\"o\">*</span> <span class=\"n\">iqr</span>\n            <span class=\"n\">upper_bound</span> <span class=\"o\">=</span> <span class=\"n\">q3</span> <span class=\"o\">+</span> <span class=\"mf\">1.5</span> <span class=\"o\">*</span> <span class=\"n\">iqr</span>\n\n            <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">):</span>\n                <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;metrics&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"o\">&lt;</span> <span class=\"n\">lower_bound</span> <span class=\"ow\">or</span> <span class=\"n\">value</span> <span class=\"o\">&gt;</span> <span class=\"n\">upper_bound</span><span class=\"p\">:</span>\n                    <span class=\"n\">anomalies</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                        <span class=\"s1\">&#39;exp_id&#39;</span><span class=\"p\">:</span> <span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">],</span>\n                        <span class=\"s1\">&#39;metric&#39;</span><span class=\"p\">:</span> <span class=\"n\">metric</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;value&#39;</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;expected_range&#39;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">lower_bound</span><span class=\"p\">,</span> <span class=\"n\">upper_bound</span><span class=\"p\">),</span>\n                        <span class=\"s1\">&#39;severity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;high&#39;</span> <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">))</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"s1\">&#39;medium&#39;</span>\n                    <span class=\"p\">})</span>\n\n        <span class=\"c1\"># \u68c0\u6d4b\u8bad\u7ec3\u66f2\u7ebf\u5f02\u5e38</span>\n        <span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s1\">&#39;training_curve&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">exp</span><span class=\"p\">:</span>\n                <span class=\"n\">curve_anomalies</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_detect_curve_anomalies</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;training_curve&#39;</span><span class=\"p\">])</span>\n                <span class=\"k\">if</span> <span class=\"n\">curve_anomalies</span><span class=\"p\">:</span>\n                    <span class=\"n\">anomalies</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">curve_anomalies</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">anomalies</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_detect_curve_anomalies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">curve</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u68c0\u6d4b\u8bad\u7ec3\u66f2\u7ebf\u5f02\u5e38&quot;&quot;&quot;</span>\n        <span class=\"n\">anomalies</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"c1\"># \u68c0\u6d4b loss \u7206\u70b8</span>\n        <span class=\"n\">losses</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">point</span><span class=\"p\">[</span><span class=\"s1\">&#39;loss&#39;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">point</span> <span class=\"ow\">in</span> <span class=\"n\">curve</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">isnan</span><span class=\"p\">(</span><span class=\"n\">losses</span><span class=\"p\">))</span> <span class=\"ow\">or</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">isinf</span><span class=\"p\">(</span><span class=\"n\">losses</span><span class=\"p\">)):</span>\n            <span class=\"n\">anomalies</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                <span class=\"s1\">&#39;type&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;loss_explosion&#39;</span><span class=\"p\">,</span>\n                <span class=\"s1\">&#39;severity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;critical&#39;</span>\n            <span class=\"p\">})</span>\n\n        <span class=\"c1\"># \u68c0\u6d4b\u8fc7\u62df\u5408</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">curve</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n            <span class=\"n\">train_acc</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;train_acc&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">curve</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">:]]</span>\n            <span class=\"n\">val_acc</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;val_acc&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">curve</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">:]]</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">train_acc</span> <span class=\"ow\">and</span> <span class=\"n\">val_acc</span><span class=\"p\">:</span>\n                <span class=\"n\">gap</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">train_acc</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">val_acc</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">gap</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.1</span><span class=\"p\">:</span>  <span class=\"c1\"># 10% \u5dee\u8ddd</span>\n                    <span class=\"n\">anomalies</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                        <span class=\"s1\">&#39;type&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;overfitting&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;severity&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;medium&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;train_val_gap&#39;</span><span class=\"p\">:</span> <span class=\"n\">gap</span>\n                    <span class=\"p\">})</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">anomalies</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">identify_bottlenecks</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u8bc6\u522b\u6027\u80fd\u74f6\u9888&quot;&quot;&quot;</span>\n        <span class=\"n\">bottlenecks</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;data_loading&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n            <span class=\"s1\">&#39;forward_pass&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n            <span class=\"s1\">&#39;backward_pass&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n            <span class=\"s1\">&#39;optimizer_step&#39;</span><span class=\"p\">:</span> <span class=\"p\">[]</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s1\">&#39;profiling&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">exp</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n\n            <span class=\"n\">prof</span> <span class=\"o\">=</span> <span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;profiling&#39;</span><span class=\"p\">]</span>\n\n            <span class=\"c1\"># \u5206\u6790\u5404\u9636\u6bb5\u8017\u65f6</span>\n            <span class=\"n\">total_time</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">prof</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())</span>\n\n            <span class=\"k\">for</span> <span class=\"n\">stage</span><span class=\"p\">,</span> <span class=\"n\">time</span> <span class=\"ow\">in</span> <span class=\"n\">prof</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"n\">percentage</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">time</span> <span class=\"o\">/</span> <span class=\"n\">total_time</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">100</span>\n\n                <span class=\"c1\"># \u5982\u679c\u67d0\u9636\u6bb5\u5360\u6bd4\u5f02\u5e38\u9ad8</span>\n                <span class=\"n\">expected_percentages</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;data_loading&#39;</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;forward_pass&#39;</span><span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;backward_pass&#39;</span><span class=\"p\">:</span> <span class=\"mi\">40</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;optimizer_step&#39;</span><span class=\"p\">:</span> <span class=\"mi\">20</span>\n                <span class=\"p\">}</span>\n\n                <span class=\"k\">if</span> <span class=\"n\">stage</span> <span class=\"ow\">in</span> <span class=\"n\">expected_percentages</span><span class=\"p\">:</span>\n                    <span class=\"n\">expected</span> <span class=\"o\">=</span> <span class=\"n\">expected_percentages</span><span class=\"p\">[</span><span class=\"n\">stage</span><span class=\"p\">]</span>\n                    <span class=\"k\">if</span> <span class=\"n\">percentage</span> <span class=\"o\">&gt;</span> <span class=\"n\">expected</span> <span class=\"o\">*</span> <span class=\"mf\">1.5</span><span class=\"p\">:</span>  <span class=\"c1\"># \u8d85\u8fc7\u9884\u671f 50%</span>\n                        <span class=\"n\">bottlenecks</span><span class=\"p\">[</span><span class=\"n\">stage</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                            <span class=\"s1\">&#39;exp_id&#39;</span><span class=\"p\">:</span> <span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">],</span>\n                            <span class=\"s1\">&#39;percentage&#39;</span><span class=\"p\">:</span> <span class=\"n\">percentage</span><span class=\"p\">,</span>\n                            <span class=\"s1\">&#39;expected&#39;</span><span class=\"p\">:</span> <span class=\"n\">expected</span><span class=\"p\">,</span>\n                            <span class=\"s1\">&#39;suggestions&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_optimization_suggestions</span><span class=\"p\">(</span><span class=\"n\">stage</span><span class=\"p\">)</span>\n                        <span class=\"p\">})</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">bottlenecks</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_optimization_suggestions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">stage</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u83b7\u53d6\u4f18\u5316\u5efa\u8bae&quot;&quot;&quot;</span>\n        <span class=\"n\">suggestions</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;data_loading&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;\u589e\u52a0\u6570\u636e\u52a0\u8f7d\u7684 num_workers&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u4f7f\u7528\u66f4\u9ad8\u6548\u7684\u6570\u636e\u683c\u5f0f (\u5982 HDF5)&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u5b9e\u73b0\u6570\u636e\u9884\u53d6\u548c\u7f13\u5b58&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u8003\u8651\u4f7f\u7528 DALI \u6216\u5176\u4ed6\u52a0\u901f\u5e93&quot;</span>\n            <span class=\"p\">],</span>\n            <span class=\"s1\">&#39;forward_pass&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;\u4f7f\u7528\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3 (AMP)&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u542f\u7528 cudnn.benchmark&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u8003\u8651\u6a21\u578b\u526a\u679d\u6216\u91cf\u5316&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u4f7f\u7528\u66f4\u9ad8\u6548\u7684\u7b97\u5b50\u5b9e\u73b0&quot;</span>\n            <span class=\"p\">],</span>\n            <span class=\"s1\">&#39;backward_pass&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;\u4f7f\u7528\u68af\u5ea6\u7d2f\u79ef\u51cf\u5c11\u663e\u5b58\u5360\u7528&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u542f\u7528\u68af\u5ea6\u68c0\u67e5\u70b9&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u8003\u8651\u4f7f\u7528 ZeRO \u4f18\u5316\u5668&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u68c0\u67e5\u662f\u5426\u6709\u4e0d\u5fc5\u8981\u7684\u68af\u5ea6\u8ba1\u7b97&quot;</span>\n            <span class=\"p\">],</span>\n            <span class=\"s1\">&#39;optimizer_step&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;\u4f7f\u7528\u878d\u5408\u4f18\u5316\u5668 (\u5982 FusedAdam)&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u51cf\u5c11\u53c2\u6570\u66f4\u65b0\u9891\u7387&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u8003\u8651\u4f7f\u7528 LARS \u6216 LAMB&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;\u68c0\u67e5\u6743\u91cd\u8870\u51cf\u8bbe\u7f6e&quot;</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">suggestions</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">stage</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">find_optimal_config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u4f7f\u7528\u8d1d\u53f6\u65af\u4f18\u5316\u627e\u5230\u6700\u4f18\u914d\u7f6e&quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># \u51c6\u5907\u6570\u636e</span>\n        <span class=\"n\">configs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"n\">param_names</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">:</span>\n            <span class=\"n\">flat_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_flatten_config</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">])</span>\n            <span class=\"n\">param_names</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">flat_config</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n            <span class=\"n\">configs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">flat_config</span><span class=\"p\">)</span>\n            <span class=\"n\">scores</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s1\">&#39;metrics&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;accuracy&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n\n        <span class=\"n\">param_names</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">param_names</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8f6c\u6362\u4e3a\u6570\u503c\u77e9\u9635</span>\n        <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">config</span> <span class=\"ow\">in</span> <span class=\"n\">configs</span><span class=\"p\">:</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">param</span> <span class=\"ow\">in</span> <span class=\"n\">param_names</span><span class=\"p\">:</span>\n                <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n                <span class=\"c1\"># \u7b80\u5355\u7684\u6570\u503c\u5316</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">):</span>\n                    <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">))</span>\n                <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                    <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">100</span><span class=\"p\">)</span>  <span class=\"c1\"># \u7b80\u5316\u5904\u7406</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">))</span>\n            <span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n        <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">scores</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u9ad8\u65af\u8fc7\u7a0b\u56de\u5f52</span>\n        <span class=\"n\">kernel</span> <span class=\"o\">=</span> <span class=\"n\">Matern</span><span class=\"p\">(</span><span class=\"n\">length_scale</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">nu</span><span class=\"o\">=</span><span class=\"mf\">2.5</span><span class=\"p\">)</span>\n        <span class=\"n\">gpr</span> <span class=\"o\">=</span> <span class=\"n\">GaussianProcessRegressor</span><span class=\"p\">(</span><span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"n\">kernel</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">1e-6</span><span class=\"p\">)</span>\n        <span class=\"n\">gpr</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u8d1d\u53f6\u65af\u4f18\u5316\uff1a\u627e\u4e0b\u4e00\u4e2a\u6700\u4f73\u70b9</span>\n        <span class=\"k\">def</span> <span class=\"nf\">acquisition_function</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"w\">            </span><span class=\"sd\">&quot;&quot;&quot;Expected Improvement&quot;&quot;&quot;</span>\n            <span class=\"n\">mu</span><span class=\"p\">,</span> <span class=\"n\">sigma</span> <span class=\"o\">=</span> <span class=\"n\">gpr</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">return_std</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n            <span class=\"n\">best_y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n            <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">mu</span> <span class=\"o\">-</span> <span class=\"n\">best_y</span> <span class=\"o\">-</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">sigma</span>\n            <span class=\"n\">ei</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">mu</span> <span class=\"o\">-</span> <span class=\"n\">best_y</span> <span class=\"o\">-</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"o\">.</span><span class=\"n\">cdf</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">sigma</span> <span class=\"o\">*</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"o\">.</span><span class=\"n\">pdf</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">ei</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u968f\u673a\u641c\u7d22\u627e\u6700\u5927 EI</span>\n        <span class=\"n\">best_ei</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">inf</span>\n        <span class=\"n\">best_config</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u5728\u5df2\u6709\u914d\u7f6e\u9644\u8fd1\u91c7\u6837</span>\n            <span class=\"n\">idx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">))</span>\n            <span class=\"n\">candidate</span> <span class=\"o\">=</span> <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">param_names</span><span class=\"p\">))</span> <span class=\"o\">*</span> <span class=\"mf\">0.1</span>\n\n            <span class=\"n\">ei</span> <span class=\"o\">=</span> <span class=\"n\">acquisition_function</span><span class=\"p\">(</span><span class=\"n\">candidate</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">ei</span> <span class=\"o\">&gt;</span> <span class=\"n\">best_ei</span><span class=\"p\">:</span>\n                <span class=\"n\">best_ei</span> <span class=\"o\">=</span> <span class=\"n\">ei</span>\n                <span class=\"n\">best_config</span> <span class=\"o\">=</span> <span class=\"n\">candidate</span>\n\n        <span class=\"c1\"># \u8f6c\u6362\u56de\u914d\u7f6e\u5b57\u5178</span>\n        <span class=\"n\">optimal_config</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">param</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">param_names</span><span class=\"p\">):</span>\n            <span class=\"n\">optimal_config</span><span class=\"p\">[</span><span class=\"n\">param</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">best_config</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u9884\u6d4b\u6027\u80fd</span>\n        <span class=\"n\">predicted_score</span><span class=\"p\">,</span> <span class=\"n\">uncertainty</span> <span class=\"o\">=</span> <span class=\"n\">gpr</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span>\n            <span class=\"n\">best_config</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">),</span> \n            <span class=\"n\">return_std</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"n\">optimal_config</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;predicted_score&#39;</span><span class=\"p\">:</span> <span class=\"n\">predicted_score</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n            <span class=\"s1\">&#39;uncertainty&#39;</span><span class=\"p\">:</span> <span class=\"n\">uncertainty</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n            <span class=\"s1\">&#39;expected_improvement&#39;</span><span class=\"p\">:</span> <span class=\"n\">best_ei</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_flatten_config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;\u5c55\u5e73\u5d4c\u5957\u914d\u7f6e&quot;&quot;&quot;</span>\n        <span class=\"n\">flat</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">full_key</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">prefix</span><span class=\"si\">}</span><span class=\"s2\">.</span><span class=\"si\">{</span><span class=\"n\">key</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"k\">if</span> <span class=\"n\">prefix</span> <span class=\"k\">else</span> <span class=\"n\">key</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n                <span class=\"n\">flat</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_flatten_config</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">full_key</span><span class=\"p\">))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">flat</span><span class=\"p\">[</span><span class=\"n\">full_key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"k\">return</span> <span class=\"n\">flat</span>\n</code></pre></div>\n\n<p>\u5206\u6790\u7cfb\u7edf\u529f\u80fd\uff1a</p>\n<ol>\n<li>\u5f02\u5e38\u68c0\u6d4b\uff1aIQR \u65b9\u6cd5 + \u66f2\u7ebf\u5206\u6790</li>\n<li>\u74f6\u9888\u8bc6\u522b\uff1a\u6027\u80fd\u5256\u6790 + \u9636\u6bb5\u5206\u6790</li>\n<li>\u914d\u7f6e\u4f18\u5316\uff1a\u8d1d\u53f6\u65af\u4f18\u5316 + \u9ad8\u65af\u8fc7\u7a0b</li>\n<li>\u53ef\u64cd\u4f5c\u5efa\u8bae\uff1a\u9488\u5bf9\u6027\u4f18\u5316\u65b9\u6848</li>\n<li>\u4e0d\u786e\u5b9a\u6027\u91cf\u5316\uff1a\u9884\u6d4b\u7f6e\u4fe1\u5ea6</li>\n</ol>\n</details>\n<hr />\n<p>\u901a\u8fc7\u5b8c\u6210\u8fd9\u4e9b\u7ec3\u4e60\uff0c\u4f60\u5c06\u638c\u63e1\u6784\u5efa\u5065\u58ee\u7684 LLM \u540e\u8bad\u7ec3\u5b9e\u9a8c\u57fa\u7840\u8bbe\u65bd\u7684\u6838\u5fc3\u6280\u80fd\u3002\u8bb0\u4f4f\uff0c\u597d\u7684\u57fa\u7840\u8bbe\u65bd\u662f\u9ad8\u6548\u5b9e\u9a8c\u7684\u57fa\u77f3\uff0c\u503c\u5f97\u5728\u9879\u76ee\u521d\u671f\u6295\u5165\u65f6\u95f4\u5efa\u8bbe\u3002</p>"
  }
}